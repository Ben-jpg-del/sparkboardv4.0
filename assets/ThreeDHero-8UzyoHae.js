import{r as Rm,g as qy,R as AE,a as Fe,j as Zt}from"./index-JGbzN1t6.js";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const lc="170",wE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},CE={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Yy=0,rm=1,Zy=2,RE=3,Ky=0,jh=1,Dl=2,rs=3,Ks=0,ei=1,os=2,xs=0,_a=1,am=2,om=3,lm=4,jy=5,Mr=100,Jy=101,Qy=102,$y=103,ex=104,tx=200,nx=201,ix=202,sx=203,rh=204,ah=205,rx=206,ax=207,ox=208,lx=209,cx=210,ux=211,hx=212,fx=213,dx=214,oh=0,lh=1,ch=2,Ma=3,uh=4,hh=5,fh=6,dh=7,cc=0,px=1,mx=2,Ss=0,gx=1,vx=2,_x=3,Um=4,yx=5,xx=6,Sx=7,cm="attached",Mx="detached",br=300,Es=301,Tr=302,Do=303,kl=304,Fo=306,Wl=1e3,Rn=1001,Xl=1002,Wn=1003,Dm=1004,UE=1004,bo=1005,DE=1005,$t=1006,Nl=1007,NE=1007,_s=1008,um=1008,Si=1009,Jh=1010,Qh=1011,No=1012,uc=1013,bs=1014,vn=1015,Fn=1016,$h=1017,ef=1018,Ea=1020,Nm=35902,Lm=1021,Im=1022,Tn=1023,Pm=1024,Om=1025,ya=1026,ba=1027,hc=1028,fc=1029,Bm=1030,tf=1031,LE=1032,nf=1033,Ll=33776,Il=33777,Pl=33778,Ol=33779,ph=35840,mh=35841,gh=35842,vh=35843,_h=36196,yh=37492,xh=37496,Sh=37808,Mh=37809,Eh=37810,bh=37811,Th=37812,Ah=37813,wh=37814,Ch=37815,Rh=37816,Uh=37817,Dh=37818,Nh=37819,Lh=37820,Ih=37821,Bl=36492,Ph=36494,Oh=36495,zm=36283,Bh=36284,zh=36285,Fh=36286,Ex=2200,bx=2201,Tx=2202,ql=2300,Hh=2301,th=2302,fa=2400,da=2401,Yl=2402,sf=2500,Fm=2501,IE=0,PE=1,OE=2,Ax=3200,wx=3201,BE=3202,zE=3203,wr=0,Cx=1,Xs="",kn="srgb",cs="srgb-linear",dc="linear",Qt="srgb",FE=0,ca=7680,HE=7681,VE=7682,GE=7683,kE=34055,WE=34056,XE=5386,qE=512,YE=513,ZE=514,KE=515,jE=516,JE=517,QE=518,hm=519,Rx=512,Ux=513,Dx=514,Hm=515,Nx=516,Lx=517,Ix=518,Px=519,Zl=35044,$E=35048,eb=35040,tb=35045,nb=35049,ib=35041,sb=35046,rb=35050,ab=35042,ob="100",fm="300 es",ys=2e3,Kl=2001;class Ts{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const a=i.indexOf(t);a!==-1&&i.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let a=0,l=i.length;a<l;a++)i[a].call(this,e);e.target=null}}}const Jn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let V0=1234567;const xa=Math.PI/180,Lo=180/Math.PI;function Oi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Jn[s&255]+Jn[s>>8&255]+Jn[s>>16&255]+Jn[s>>24&255]+"-"+Jn[e&255]+Jn[e>>8&255]+"-"+Jn[e>>16&15|64]+Jn[e>>24&255]+"-"+Jn[t&63|128]+Jn[t>>8&255]+"-"+Jn[t>>16&255]+Jn[t>>24&255]+Jn[n&255]+Jn[n>>8&255]+Jn[n>>16&255]+Jn[n>>24&255]).toLowerCase()}function En(s,e,t){return Math.max(e,Math.min(t,s))}function Vm(s,e){return(s%e+e)%e}function lb(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function cb(s,e,t){return s!==e?(t-s)/(e-s):0}function zl(s,e,t){return(1-t)*s+t*e}function ub(s,e,t,n){return zl(s,e,1-Math.exp(-t*n))}function hb(s,e=1){return e-Math.abs(Vm(s,e*2)-e)}function fb(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function db(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function pb(s,e){return s+Math.floor(Math.random()*(e-s+1))}function mb(s,e){return s+Math.random()*(e-s)}function gb(s){return s*(.5-Math.random())}function vb(s){s!==void 0&&(V0=s);let e=V0+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function _b(s){return s*xa}function yb(s){return s*Lo}function xb(s){return(s&s-1)===0&&s!==0}function Sb(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Mb(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Eb(s,e,t,n,i){const a=Math.cos,l=Math.sin,c=a(t/2),h=l(t/2),f=a((e+n)/2),p=l((e+n)/2),m=a((e-n)/2),g=l((e-n)/2),v=a((n-e)/2),x=l((n-e)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ci(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function wt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const bb={DEG2RAD:xa,RAD2DEG:Lo,generateUUID:Oi,clamp:En,euclideanModulo:Vm,mapLinear:lb,inverseLerp:cb,lerp:zl,damp:ub,pingpong:hb,smoothstep:fb,smootherstep:db,randInt:pb,randFloat:mb,randFloatSpread:gb,seededRandom:vb,degToRad:_b,radToDeg:yb,isPowerOfTwo:xb,ceilPowerOfTwo:Sb,floorPowerOfTwo:Mb,setQuaternionFromProperEuler:Eb,normalize:wt,denormalize:ci};class Te{constructor(e=0,t=0){Te.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(En(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),a=this.x-e.x,l=this.y-e.y;return this.x=a*n-l*i+e.x,this.y=a*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class bt{constructor(e,t,n,i,a,l,c,h,f){bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,a,l,c,h,f)}set(e,t,n,i,a,l,c,h,f){const p=this.elements;return p[0]=e,p[1]=i,p[2]=c,p[3]=t,p[4]=a,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,a=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],M=i[0],S=i[3],_=i[6],b=i[1],A=i[4],T=i[7],z=i[2],D=i[5],O=i[8];return a[0]=l*M+c*b+h*z,a[3]=l*S+c*A+h*D,a[6]=l*_+c*T+h*O,a[1]=f*M+p*b+m*z,a[4]=f*S+p*A+m*D,a[7]=f*_+p*T+m*O,a[2]=g*M+v*b+x*z,a[5]=g*S+v*A+x*D,a[8]=g*_+v*T+x*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],l=e[4],c=e[5],h=e[6],f=e[7],p=e[8];return t*l*p-t*c*f-n*a*p+n*c*h+i*a*f-i*l*h}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],l=e[4],c=e[5],h=e[6],f=e[7],p=e[8],m=p*l-c*f,g=c*h-p*a,v=f*a-l*h,x=t*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return e[0]=m*M,e[1]=(i*f-p*n)*M,e[2]=(c*n-i*l)*M,e[3]=g*M,e[4]=(p*t-i*h)*M,e[5]=(i*a-c*t)*M,e[6]=v*M,e[7]=(n*h-f*t)*M,e[8]=(l*t-n*a)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,a,l,c){const h=Math.cos(a),f=Math.sin(a);return this.set(n*h,n*f,-n*(h*l+f*c)+l+e,-i*f,i*h,-i*(-f*l+h*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Jd.makeScale(e,t)),this}rotate(e){return this.premultiply(Jd.makeRotation(-e)),this}translate(e,t){return this.premultiply(Jd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Jd=new bt;function Ox(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const Tb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function To(s,e){return new Tb[s](e)}function jl(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Bx(){const s=jl("canvas");return s.style.display="block",s}const G0={};function Cl(s){s in G0||(G0[s]=!0,console.warn(s))}function Ab(s,e,t){return new Promise(function(n,i){function a(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(a,t);break;default:n()}}setTimeout(a,t)})}function wb(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function Cb(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Ft={enabled:!0,workingColorSpace:cs,spaces:{},convert:function(s,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===Qt&&(s.r=Zs(s.r),s.g=Zs(s.g),s.b=Zs(s.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(s.applyMatrix3(this.spaces[e].toXYZ),s.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===Qt&&(s.r=Ro(s.r),s.g=Ro(s.g),s.b=Ro(s.b))),s},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)},getPrimaries:function(s){return this.spaces[s].primaries},getTransfer:function(s){return s===Xs?dc:this.spaces[s].transfer},getLuminanceCoefficients:function(s,e=this.workingColorSpace){return s.fromArray(this.spaces[e].luminanceCoefficients)},define:function(s){Object.assign(this.spaces,s)},_getMatrix:function(s,e,t){return s.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(s){return this.spaces[s].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(s=this.workingColorSpace){return this.spaces[s].workingColorSpaceConfig.unpackColorSpace}};function Zs(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Ro(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const k0=[.64,.33,.3,.6,.15,.06],W0=[.2126,.7152,.0722],X0=[.3127,.329],q0=new bt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Y0=new bt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);Ft.define({[cs]:{primaries:k0,whitePoint:X0,transfer:dc,toXYZ:q0,fromXYZ:Y0,luminanceCoefficients:W0,workingColorSpaceConfig:{unpackColorSpace:kn},outputColorSpaceConfig:{drawingBufferColorSpace:kn}},[kn]:{primaries:k0,whitePoint:X0,transfer:Qt,toXYZ:q0,fromXYZ:Y0,luminanceCoefficients:W0,outputColorSpaceConfig:{drawingBufferColorSpace:kn}}});let no;class zx{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{no===void 0&&(no=jl("canvas")),no.width=e.width,no.height=e.height;const n=no.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=no}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=jl("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),a=i.data;for(let l=0;l<a.length;l++)a[l]=Zs(a[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Zs(t[n]/255)*255):t[n]=Zs(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Rb=0;class pa{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Rb++}),this.uuid=Oi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let a;if(Array.isArray(i)){a=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?a.push(Qd(i[l].image)):a.push(Qd(i[l]))}else a=Qd(i);n.url=a}return t||(e.images[this.uuid]=n),n}}function Qd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?zx.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ub=0;class rn extends Ts{constructor(e=rn.DEFAULT_IMAGE,t=rn.DEFAULT_MAPPING,n=Rn,i=Rn,a=$t,l=_s,c=Tn,h=Si,f=rn.DEFAULT_ANISOTROPY,p=Xs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ub++}),this.uuid=Oi(),this.name="",this.source=new pa(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=a,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new Te(0,0),this.repeat=new Te(1,1),this.center=new Te(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==br)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Wl:e.x=e.x-Math.floor(e.x);break;case Rn:e.x=e.x<0?0:1;break;case Xl:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Wl:e.y=e.y-Math.floor(e.y);break;case Rn:e.y=e.y<0?0:1;break;case Xl:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}rn.DEFAULT_IMAGE=null;rn.DEFAULT_MAPPING=br;rn.DEFAULT_ANISOTROPY=1;class kt{constructor(e=0,t=0,n=0,i=1){kt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,a=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*a,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*a,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*a,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*a,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,a;const h=e.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],M=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-M)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+M)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const A=(f+1)/2,T=(v+1)/2,z=(_+1)/2,D=(p+g)/4,O=(m+M)/4,L=(x+S)/4;return A>T&&A>z?A<.01?(n=0,i=.707106781,a=.707106781):(n=Math.sqrt(A),i=D/n,a=O/n):T>z?T<.01?(n=.707106781,i=0,a=.707106781):(i=Math.sqrt(T),n=D/i,a=L/i):z<.01?(n=.707106781,i=.707106781,a=0):(a=Math.sqrt(z),n=O/a,i=L/a),this.set(n,i,a,t),this}let b=Math.sqrt((S-x)*(S-x)+(m-M)*(m-M)+(g-p)*(g-p));return Math.abs(b)<.001&&(b=1),this.x=(S-x)/b,this.y=(m-M)/b,this.z=(g-p)/b,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Fx extends Ts{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new kt(0,0,e,t),this.scissorTest=!1,this.viewport=new kt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:$t,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const a=new rn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);a.flipY=!1,a.generateMipmaps=n.generateMipmaps,a.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=a.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,a=this.textures.length;i<a;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new pa(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class zi extends Fx{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class rf extends rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Wn,this.minFilter=Wn,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Db extends zi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new rf(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Gm extends rn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Wn,this.minFilter=Wn,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Nb extends zi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Gm(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class xi{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,a,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=a[l+0],v=a[l+1],x=a[l+2],M=a[l+3];if(c===0){e[t+0]=h,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(c===1){e[t+0]=g,e[t+1]=v,e[t+2]=x,e[t+3]=M;return}if(m!==M||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*M,b=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const z=Math.sqrt(A),D=Math.atan2(z,_*b);S=Math.sin(S*D)/z,c=Math.sin(c*D)/z}const T=c*b;if(h=h*S+g*T,f=f*S+v*T,p=p*S+x*T,m=m*S+M*T,S===1-c){const z=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=z,f*=z,p*=z,m*=z}}e[t]=h,e[t+1]=f,e[t+2]=p,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,a,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=a[l],g=a[l+1],v=a[l+2],x=a[l+3];return e[t]=c*x+p*m+h*v-f*g,e[t+1]=h*x+p*g+f*m-c*v,e[t+2]=f*x+p*v+c*g-h*m,e[t+3]=p*x-c*m-h*g-f*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,a=e._z,l=e._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(a/2),g=h(n/2),v=h(i/2),x=h(a/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],a=t[8],l=t[1],c=t[5],h=t[9],f=t[2],p=t[6],m=t[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(a-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(a+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(a-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(a+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(En(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,a=e._z,l=e._w,c=t._x,h=t._y,f=t._z,p=t._w;return this._x=n*p+l*c+i*f-a*h,this._y=i*p+l*h+a*c-n*f,this._z=a*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-a*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,a=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+a*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=a,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*a+t*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-t)*p)/f,g=Math.sin(t*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=a*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),a=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),a*Math.sin(t),a*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class G{constructor(e=0,t=0,n=0){G.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Z0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Z0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*i,this.y=a[1]*t+a[4]*n+a[7]*i,this.z=a[2]*t+a[5]*n+a[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,a=e.elements,l=1/(a[3]*t+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*i+a[12])*l,this.y=(a[1]*t+a[5]*n+a[9]*i+a[13])*l,this.z=(a[2]*t+a[6]*n+a[10]*i+a[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,a=e.x,l=e.y,c=e.z,h=e.w,f=2*(l*i-c*n),p=2*(c*t-a*i),m=2*(a*n-l*t);return this.x=t+h*f+l*m-c*p,this.y=n+h*p+c*f-a*m,this.z=i+h*m+a*p-l*f,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i,this.y=a[1]*t+a[5]*n+a[9]*i,this.z=a[2]*t+a[6]*n+a[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,a=e.z,l=t.x,c=t.y,h=t.z;return this.x=i*h-a*c,this.y=a*l-n*h,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return $d.copy(this).projectOnVector(e),this.sub($d)}reflect(e){return this.sub($d.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(En(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const $d=new G,Z0=new xi;class ui{constructor(e=new G(1/0,1/0,1/0),t=new G(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ts.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ts.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ts.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const a=n.getAttribute("position");if(t===!0&&a!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=a.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,ts):ts.fromBufferAttribute(a,l),ts.applyMatrix4(e.matrixWorld),this.expandByPoint(ts);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),au.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),au.copy(n.boundingBox)),au.applyMatrix4(e.matrixWorld),this.union(au)}const i=e.children;for(let a=0,l=i.length;a<l;a++)this.expandByObject(i[a],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ts),ts.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(pl),ou.subVectors(this.max,pl),io.subVectors(e.a,pl),so.subVectors(e.b,pl),ro.subVectors(e.c,pl),dr.subVectors(so,io),pr.subVectors(ro,so),jr.subVectors(io,ro);let t=[0,-dr.z,dr.y,0,-pr.z,pr.y,0,-jr.z,jr.y,dr.z,0,-dr.x,pr.z,0,-pr.x,jr.z,0,-jr.x,-dr.y,dr.x,0,-pr.y,pr.x,0,-jr.y,jr.x,0];return!ep(t,io,so,ro,ou)||(t=[1,0,0,0,1,0,0,0,1],!ep(t,io,so,ro,ou))?!1:(lu.crossVectors(dr,pr),t=[lu.x,lu.y,lu.z],ep(t,io,so,ro,ou))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ts).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ts).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(zs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),zs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),zs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),zs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),zs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),zs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),zs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),zs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(zs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const zs=[new G,new G,new G,new G,new G,new G,new G,new G],ts=new G,au=new ui,io=new G,so=new G,ro=new G,dr=new G,pr=new G,jr=new G,pl=new G,ou=new G,lu=new G,Jr=new G;function ep(s,e,t,n,i){for(let a=0,l=s.length-3;a<=l;a+=3){Jr.fromArray(s,a);const c=i.x*Math.abs(Jr.x)+i.y*Math.abs(Jr.y)+i.z*Math.abs(Jr.z),h=e.dot(Jr),f=t.dot(Jr),p=n.dot(Jr);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const Lb=new ui,ml=new G,tp=new G;let ti=class{constructor(e=new G,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Lb.setFromPoints(e).getCenter(n);let i=0;for(let a=0,l=e.length;a<l;a++)i=Math.max(i,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ml.subVectors(e,this.center);const t=ml.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ml,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(tp.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ml.copy(e.center).add(tp)),this.expandByPoint(ml.copy(e.center).sub(tp))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Fs=new G,np=new G,cu=new G,mr=new G,ip=new G,uu=new G,sp=new G;class Ho{constructor(e=new G,t=new G(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Fs)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Fs.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Fs.copy(this.origin).addScaledVector(this.direction,t),Fs.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){np.copy(e).add(t).multiplyScalar(.5),cu.copy(t).sub(e).normalize(),mr.copy(this.origin).sub(np);const a=e.distanceTo(t)*.5,l=-this.direction.dot(cu),c=mr.dot(this.direction),h=-mr.dot(cu),f=mr.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=a*p,m>=0)if(g>=-x)if(g<=x){const M=1/p;m*=M,g*=M,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*a+c)),g=m>0?-a:Math.min(Math.max(-a,-h),a),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-a,-h),a),v=g*(g+2*h)+f):(m=Math.max(0,-(l*a+c)),g=m>0?a:Math.min(Math.max(-a,-h),a),v=-m*m+g*(g+2*h)+f);else g=l>0?-a:a,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(np).addScaledVector(cu,g),v}intersectSphere(e,t){Fs.subVectors(e.center,this.origin);const n=Fs.dot(this.direction),i=Fs.dot(Fs)-n*n,a=e.radius*e.radius;if(i>a)return null;const l=Math.sqrt(a-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,a,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(e.min.x-g.x)*f,i=(e.max.x-g.x)*f):(n=(e.max.x-g.x)*f,i=(e.min.x-g.x)*f),p>=0?(a=(e.min.y-g.y)*p,l=(e.max.y-g.y)*p):(a=(e.max.y-g.y)*p,l=(e.min.y-g.y)*p),n>l||a>i||((a>n||isNaN(n))&&(n=a),(l<i||isNaN(i))&&(i=l),m>=0?(c=(e.min.z-g.z)*m,h=(e.max.z-g.z)*m):(c=(e.max.z-g.z)*m,h=(e.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Fs)!==null}intersectTriangle(e,t,n,i,a){ip.subVectors(t,e),uu.subVectors(n,e),sp.crossVectors(ip,uu);let l=this.direction.dot(sp),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;mr.subVectors(this.origin,e);const h=c*this.direction.dot(uu.crossVectors(mr,uu));if(h<0)return null;const f=c*this.direction.dot(ip.cross(mr));if(f<0||h+f>l)return null;const p=-c*mr.dot(sp);return p<0?null:this.at(p/l,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class _t{constructor(e,t,n,i,a,l,c,h,f,p,m,g,v,x,M,S){_t.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,a,l,c,h,f,p,m,g,v,x,M,S)}set(e,t,n,i,a,l,c,h,f,p,m,g,v,x,M,S){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=a,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=M,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _t().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ao.setFromMatrixColumn(e,0).length(),a=1/ao.setFromMatrixColumn(e,1).length(),l=1/ao.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,a=e.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(a),m=Math.sin(a);if(e.order==="XYZ"){const g=l*p,v=l*m,x=c*p,M=c*m;t[0]=h*p,t[4]=-h*m,t[8]=f,t[1]=v+x*f,t[5]=g-M*f,t[9]=-c*h,t[2]=M-g*f,t[6]=x+v*f,t[10]=l*h}else if(e.order==="YXZ"){const g=h*p,v=h*m,x=f*p,M=f*m;t[0]=g+M*c,t[4]=x*c-v,t[8]=l*f,t[1]=l*m,t[5]=l*p,t[9]=-c,t[2]=v*c-x,t[6]=M+g*c,t[10]=l*h}else if(e.order==="ZXY"){const g=h*p,v=h*m,x=f*p,M=f*m;t[0]=g-M*c,t[4]=-l*m,t[8]=x+v*c,t[1]=v+x*c,t[5]=l*p,t[9]=M-g*c,t[2]=-l*f,t[6]=c,t[10]=l*h}else if(e.order==="ZYX"){const g=l*p,v=l*m,x=c*p,M=c*m;t[0]=h*p,t[4]=x*f-v,t[8]=g*f+M,t[1]=h*m,t[5]=M*f+g,t[9]=v*f-x,t[2]=-f,t[6]=c*h,t[10]=l*h}else if(e.order==="YZX"){const g=l*h,v=l*f,x=c*h,M=c*f;t[0]=h*p,t[4]=M-g*m,t[8]=x*m+v,t[1]=m,t[5]=l*p,t[9]=-c*p,t[2]=-f*p,t[6]=v*m+x,t[10]=g-M*m}else if(e.order==="XZY"){const g=l*h,v=l*f,x=c*h,M=c*f;t[0]=h*p,t[4]=-m,t[8]=f*p,t[1]=g*m+M,t[5]=l*p,t[9]=v*m-x,t[2]=x*m-v,t[6]=c*p,t[10]=M*m+g}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ib,e,Pb)}lookAt(e,t,n){const i=this.elements;return Ii.subVectors(e,t),Ii.lengthSq()===0&&(Ii.z=1),Ii.normalize(),gr.crossVectors(n,Ii),gr.lengthSq()===0&&(Math.abs(n.z)===1?Ii.x+=1e-4:Ii.z+=1e-4,Ii.normalize(),gr.crossVectors(n,Ii)),gr.normalize(),hu.crossVectors(Ii,gr),i[0]=gr.x,i[4]=hu.x,i[8]=Ii.x,i[1]=gr.y,i[5]=hu.y,i[9]=Ii.y,i[2]=gr.z,i[6]=hu.z,i[10]=Ii.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,a=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],M=n[6],S=n[10],_=n[14],b=n[3],A=n[7],T=n[11],z=n[15],D=i[0],O=i[4],L=i[8],C=i[12],R=i[1],F=i[5],ee=i[9],K=i[13],J=i[2],oe=i[6],B=i[10],Q=i[14],Y=i[3],le=i[7],he=i[11],xe=i[15];return a[0]=l*D+c*R+h*J+f*Y,a[4]=l*O+c*F+h*oe+f*le,a[8]=l*L+c*ee+h*B+f*he,a[12]=l*C+c*K+h*Q+f*xe,a[1]=p*D+m*R+g*J+v*Y,a[5]=p*O+m*F+g*oe+v*le,a[9]=p*L+m*ee+g*B+v*he,a[13]=p*C+m*K+g*Q+v*xe,a[2]=x*D+M*R+S*J+_*Y,a[6]=x*O+M*F+S*oe+_*le,a[10]=x*L+M*ee+S*B+_*he,a[14]=x*C+M*K+S*Q+_*xe,a[3]=b*D+A*R+T*J+z*Y,a[7]=b*O+A*F+T*oe+z*le,a[11]=b*L+A*ee+T*B+z*he,a[15]=b*C+A*K+T*Q+z*xe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],a=e[12],l=e[1],c=e[5],h=e[9],f=e[13],p=e[2],m=e[6],g=e[10],v=e[14],x=e[3],M=e[7],S=e[11],_=e[15];return x*(+a*h*m-i*f*m-a*c*g+n*f*g+i*c*v-n*h*v)+M*(+t*h*v-t*f*g+a*l*g-i*l*v+i*f*p-a*h*p)+S*(+t*f*m-t*c*v-a*l*m+n*l*v+a*c*p-n*f*p)+_*(-i*c*p-t*h*m+t*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],l=e[4],c=e[5],h=e[6],f=e[7],p=e[8],m=e[9],g=e[10],v=e[11],x=e[12],M=e[13],S=e[14],_=e[15],b=m*S*f-M*g*f+M*h*v-c*S*v-m*h*_+c*g*_,A=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,T=p*M*f-x*m*f+x*c*v-l*M*v-p*c*_+l*m*_,z=x*m*h-p*M*h-x*c*g+l*M*g+p*c*S-l*m*S,D=t*b+n*A+i*T+a*z;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const O=1/D;return e[0]=b*O,e[1]=(M*g*a-m*S*a-M*i*v+n*S*v+m*i*_-n*g*_)*O,e[2]=(c*S*a-M*h*a+M*i*f-n*S*f-c*i*_+n*h*_)*O,e[3]=(m*h*a-c*g*a-m*i*f+n*g*f+c*i*v-n*h*v)*O,e[4]=A*O,e[5]=(p*S*a-x*g*a+x*i*v-t*S*v-p*i*_+t*g*_)*O,e[6]=(x*h*a-l*S*a-x*i*f+t*S*f+l*i*_-t*h*_)*O,e[7]=(l*g*a-p*h*a+p*i*f-t*g*f-l*i*v+t*h*v)*O,e[8]=T*O,e[9]=(x*m*a-p*M*a-x*n*v+t*M*v+p*n*_-t*m*_)*O,e[10]=(l*M*a-x*c*a+x*n*f-t*M*f-l*n*_+t*c*_)*O,e[11]=(p*c*a-l*m*a-p*n*f+t*m*f+l*n*v-t*c*v)*O,e[12]=z*O,e[13]=(p*M*i-x*m*i+x*n*g-t*M*g-p*n*S+t*m*S)*O,e[14]=(x*c*i-l*M*i-x*n*h+t*M*h+l*n*S-t*c*S)*O,e[15]=(l*m*i-p*c*i+p*n*h-t*m*h-l*n*g+t*c*g)*O,this}scale(e){const t=this.elements,n=e.x,i=e.y,a=e.z;return t[0]*=n,t[4]*=i,t[8]*=a,t[1]*=n,t[5]*=i,t[9]*=a,t[2]*=n,t[6]*=i,t[10]*=a,t[3]*=n,t[7]*=i,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),a=1-n,l=e.x,c=e.y,h=e.z,f=a*l,p=a*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,a*h*h+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,a,l){return this.set(1,n,a,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,a=t._x,l=t._y,c=t._z,h=t._w,f=a+a,p=l+l,m=c+c,g=a*f,v=a*p,x=a*m,M=l*p,S=l*m,_=c*m,b=h*f,A=h*p,T=h*m,z=n.x,D=n.y,O=n.z;return i[0]=(1-(M+_))*z,i[1]=(v+T)*z,i[2]=(x-A)*z,i[3]=0,i[4]=(v-T)*D,i[5]=(1-(g+_))*D,i[6]=(S+b)*D,i[7]=0,i[8]=(x+A)*O,i[9]=(S-b)*O,i[10]=(1-(g+M))*O,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let a=ao.set(i[0],i[1],i[2]).length();const l=ao.set(i[4],i[5],i[6]).length(),c=ao.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),e.x=i[12],e.y=i[13],e.z=i[14],ns.copy(this);const f=1/a,p=1/l,m=1/c;return ns.elements[0]*=f,ns.elements[1]*=f,ns.elements[2]*=f,ns.elements[4]*=p,ns.elements[5]*=p,ns.elements[6]*=p,ns.elements[8]*=m,ns.elements[9]*=m,ns.elements[10]*=m,t.setFromRotationMatrix(ns),n.x=a,n.y=l,n.z=c,this}makePerspective(e,t,n,i,a,l,c=ys){const h=this.elements,f=2*a/(t-e),p=2*a/(n-i),m=(t+e)/(t-e),g=(n+i)/(n-i);let v,x;if(c===ys)v=-(l+a)/(l-a),x=-2*l*a/(l-a);else if(c===Kl)v=-l/(l-a),x=-l*a/(l-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,n,i,a,l,c=ys){const h=this.elements,f=1/(t-e),p=1/(n-i),m=1/(l-a),g=(t+e)*f,v=(n+i)*p;let x,M;if(c===ys)x=(l+a)*m,M=-2*m;else if(c===Kl)x=a*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=M,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ao=new G,ns=new _t,Ib=new G(0,0,0),Pb=new G(1,1,1),gr=new G,hu=new G,Ii=new G,K0=new _t,j0=new xi;class Fi{constructor(e=0,t=0,n=0,i=Fi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,a=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(En(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,a)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-En(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,a),this._z=0);break;case"ZXY":this._x=Math.asin(En(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,a));break;case"ZYX":this._y=Math.asin(-En(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(En(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,a)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-En(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,a)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return K0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(K0,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return j0.setFromEuler(this),this.setFromQuaternion(j0,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Fi.DEFAULT_ORDER="XYZ";class Io{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ob=0;const J0=new G,oo=new xi,Hs=new _t,fu=new G,gl=new G,Bb=new G,zb=new xi,Q0=new G(1,0,0),$0=new G(0,1,0),e_=new G(0,0,1),t_={type:"added"},Fb={type:"removed"},lo={type:"childadded",child:null},rp={type:"childremoved",child:null};class Wt extends Ts{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ob++}),this.uuid=Oi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Wt.DEFAULT_UP.clone();const e=new G,t=new Fi,n=new xi,i=new G(1,1,1);function a(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new _t},normalMatrix:{value:new bt}}),this.matrix=new _t,this.matrixWorld=new _t,this.matrixAutoUpdate=Wt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Io,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return oo.setFromAxisAngle(e,t),this.quaternion.multiply(oo),this}rotateOnWorldAxis(e,t){return oo.setFromAxisAngle(e,t),this.quaternion.premultiply(oo),this}rotateX(e){return this.rotateOnAxis(Q0,e)}rotateY(e){return this.rotateOnAxis($0,e)}rotateZ(e){return this.rotateOnAxis(e_,e)}translateOnAxis(e,t){return J0.copy(e).applyQuaternion(this.quaternion),this.position.add(J0.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Q0,e)}translateY(e){return this.translateOnAxis($0,e)}translateZ(e){return this.translateOnAxis(e_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Hs.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?fu.copy(e):fu.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),gl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Hs.lookAt(gl,fu,this.up):Hs.lookAt(fu,gl,this.up),this.quaternion.setFromRotationMatrix(Hs),i&&(Hs.extractRotation(i.matrixWorld),oo.setFromRotationMatrix(Hs),this.quaternion.premultiply(oo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(t_),lo.child=e,this.dispatchEvent(lo),lo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Fb),rp.child=e,this.dispatchEvent(rp),rp.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Hs.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Hs.multiply(e.parent.matrixWorld)),e.applyMatrix4(Hs),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(t_),lo.child=e,this.dispatchEvent(lo),lo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let a=0,l=i.length;a<l;a++)i[a].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gl,e,Bb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gl,zb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let a=0,l=i.length;a<l;a++)i[a].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function a(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(e)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=a(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];a(e.shapes,m)}else a(e.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(a(e.materials,this.material[h]));i.material=c}else i.material=a(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(a(e.animations,h))}}if(t){const c=l(e.geometries),h=l(e.materials),f=l(e.textures),p=l(e.images),m=l(e.shapes),g=l(e.skeletons),v=l(e.animations),x=l(e.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Wt.DEFAULT_UP=new G(0,1,0);Wt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Wt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const is=new G,Vs=new G,ap=new G,Gs=new G,co=new G,uo=new G,n_=new G,op=new G,lp=new G,cp=new G,up=new kt,hp=new kt,fp=new kt;class yi{constructor(e=new G,t=new G,n=new G){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),is.subVectors(e,t),i.cross(is);const a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}static getBarycoord(e,t,n,i,a){is.subVectors(i,t),Vs.subVectors(n,t),ap.subVectors(e,t);const l=is.dot(is),c=is.dot(Vs),h=is.dot(ap),f=Vs.dot(Vs),p=Vs.dot(ap),m=l*f-c*c;if(m===0)return a.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return a.set(1-v-x,x,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Gs)===null?!1:Gs.x>=0&&Gs.y>=0&&Gs.x+Gs.y<=1}static getInterpolation(e,t,n,i,a,l,c,h){return this.getBarycoord(e,t,n,i,Gs)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(a,Gs.x),h.addScaledVector(l,Gs.y),h.addScaledVector(c,Gs.z),h)}static getInterpolatedAttribute(e,t,n,i,a,l){return up.setScalar(0),hp.setScalar(0),fp.setScalar(0),up.fromBufferAttribute(e,t),hp.fromBufferAttribute(e,n),fp.fromBufferAttribute(e,i),l.setScalar(0),l.addScaledVector(up,a.x),l.addScaledVector(hp,a.y),l.addScaledVector(fp,a.z),l}static isFrontFacing(e,t,n,i){return is.subVectors(n,t),Vs.subVectors(e,t),is.cross(Vs).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return is.subVectors(this.c,this.b),Vs.subVectors(this.a,this.b),is.cross(Vs).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return yi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return yi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,a){return yi.getInterpolation(e,this.a,this.b,this.c,t,n,i,a)}containsPoint(e){return yi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return yi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,a=this.c;let l,c;co.subVectors(i,n),uo.subVectors(a,n),op.subVectors(e,n);const h=co.dot(op),f=uo.dot(op);if(h<=0&&f<=0)return t.copy(n);lp.subVectors(e,i);const p=co.dot(lp),m=uo.dot(lp);if(p>=0&&m<=p)return t.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),t.copy(n).addScaledVector(co,l);cp.subVectors(e,a);const v=co.dot(cp),x=uo.dot(cp);if(x>=0&&v<=x)return t.copy(a);const M=v*f-h*x;if(M<=0&&f>=0&&x<=0)return c=f/(f-x),t.copy(n).addScaledVector(uo,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return n_.subVectors(a,i),c=(m-p)/(m-p+(v-x)),t.copy(i).addScaledVector(n_,c);const _=1/(S+M+g);return l=M*_,c=g*_,t.copy(n).addScaledVector(co,l).addScaledVector(uo,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Hx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vr={h:0,s:0,l:0},du={h:0,s:0,l:0};function dp(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class $e{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=kn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ft.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ft.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ft.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ft.workingColorSpace){if(e=Vm(e,1),t=En(t,0,1),n=En(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,l=2*n-a;this.r=dp(l,a,e+1/3),this.g=dp(l,a,e),this.b=dp(l,a,e-1/3)}return Ft.toWorkingColorSpace(this,i),this}setStyle(e,t=kn){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let a;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,t);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,t);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=i[1],l=a.length;if(l===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(a,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=kn){const n=Hx[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Zs(e.r),this.g=Zs(e.g),this.b=Zs(e.b),this}copyLinearToSRGB(e){return this.r=Ro(e.r),this.g=Ro(e.g),this.b=Ro(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=kn){return Ft.fromWorkingColorSpace(Qn.copy(this),e),Math.round(En(Qn.r*255,0,255))*65536+Math.round(En(Qn.g*255,0,255))*256+Math.round(En(Qn.b*255,0,255))}getHexString(e=kn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ft.workingColorSpace){Ft.fromWorkingColorSpace(Qn.copy(this),t);const n=Qn.r,i=Qn.g,a=Qn.b,l=Math.max(n,i,a),c=Math.min(n,i,a);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-a)/m+(i<a?6:0);break;case i:h=(a-n)/m+2;break;case a:h=(n-i)/m+4;break}h/=6}return e.h=h,e.s=f,e.l=p,e}getRGB(e,t=Ft.workingColorSpace){return Ft.fromWorkingColorSpace(Qn.copy(this),t),e.r=Qn.r,e.g=Qn.g,e.b=Qn.b,e}getStyle(e=kn){Ft.fromWorkingColorSpace(Qn.copy(this),e);const t=Qn.r,n=Qn.g,i=Qn.b;return e!==kn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(vr),this.setHSL(vr.h+e,vr.s+t,vr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(vr),e.getHSL(du);const n=zl(vr.h,du.h,t),i=zl(vr.s,du.s,t),a=zl(vr.l,du.l,t);return this.setHSL(n,i,a),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,a=e.elements;return this.r=a[0]*t+a[3]*n+a[6]*i,this.g=a[1]*t+a[4]*n+a[7]*i,this.b=a[2]*t+a[5]*n+a[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Qn=new $e;$e.NAMES=Hx;let Hb=0;class ni extends Ts{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Hb++}),this.uuid=Oi(),this.name="",this.blending=_a,this.side=Ks,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=rh,this.blendDst=ah,this.blendEquation=Mr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new $e(0,0,0),this.blendAlpha=0,this.depthFunc=Ma,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=hm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ca,this.stencilZFail=ca,this.stencilZPass=ca,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==_a&&(n.blending=this.blending),this.side!==Ks&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==rh&&(n.blendSrc=this.blendSrc),this.blendDst!==ah&&(n.blendDst=this.blendDst),this.blendEquation!==Mr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Ma&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==hm&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ca&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ca&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ca&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}if(t){const a=i(e.textures),l=i(e.images);a.length>0&&(n.textures=a),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let a=0;a!==i;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class js extends ni{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new $e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fi,this.combine=cc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const qs=Vb();function Vb(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const a=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,a[h]=f|p}for(let h=1024;h<2048;++h)a[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:a,exponentTable:l,offsetTable:c}}function _i(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=En(s,-65504,65504),qs.floatView[0]=s;const e=qs.uint32View[0],t=e>>23&511;return qs.baseTable[t]+((e&8388607)>>qs.shiftTable[t])}function Rl(s){const e=s>>10;return qs.uint32View[0]=qs.mantissaTable[qs.offsetTable[e]+(s&1023)]+qs.exponentTable[e],qs.floatView[0]}const ma={toHalfFloat:_i,fromHalfFloat:Rl},Cn=new G,pu=new Te;class an{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Zl,this.updateRanges=[],this.gpuType=vn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,a=this.itemSize;i<a;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)pu.fromBufferAttribute(this,t),pu.applyMatrix3(e),this.setXY(t,pu.x,pu.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix3(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix4(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyNormalMatrix(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.transformDirection(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ci(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=wt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,a){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array),a=wt(a,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Zl&&(e.usage=this.usage),e}}class Gb extends an{constructor(e,t,n){super(new Int8Array(e),t,n)}}class kb extends an{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Wb extends an{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Xb extends an{constructor(e,t,n){super(new Int16Array(e),t,n)}}class km extends an{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class qb extends an{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Wm extends an{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Yb extends an{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Rl(this.array[e*this.itemSize]);return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize]=_i(t),this}getY(e){let t=Rl(this.array[e*this.itemSize+1]);return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+1]=_i(t),this}getZ(e){let t=Rl(this.array[e*this.itemSize+2]);return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+2]=_i(t),this}getW(e){let t=Rl(this.array[e*this.itemSize+3]);return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=wt(t,this.array)),this.array[e*this.itemSize+3]=_i(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array)),this.array[e+0]=_i(t),this.array[e+1]=_i(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array)),this.array[e+0]=_i(t),this.array[e+1]=_i(n),this.array[e+2]=_i(i),this}setXYZW(e,t,n,i,a){return e*=this.itemSize,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array),a=wt(a,this.array)),this.array[e+0]=_i(t),this.array[e+1]=_i(n),this.array[e+2]=_i(i),this.array[e+3]=_i(a),this}}class at extends an{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Zb=0;const Zi=new _t,pp=new Wt,ho=new G,Pi=new ui,vl=new ui,Bn=new G;class Rt extends Ts{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Zb++}),this.uuid=Oi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ox(e)?Wm:km)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new bt().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Zi.makeRotationFromQuaternion(e),this.applyMatrix4(Zi),this}rotateX(e){return Zi.makeRotationX(e),this.applyMatrix4(Zi),this}rotateY(e){return Zi.makeRotationY(e),this.applyMatrix4(Zi),this}rotateZ(e){return Zi.makeRotationZ(e),this.applyMatrix4(Zi),this}translate(e,t,n){return Zi.makeTranslation(e,t,n),this.applyMatrix4(Zi),this}scale(e,t,n){return Zi.makeScale(e,t,n),this.applyMatrix4(Zi),this}lookAt(e){return pp.lookAt(e),pp.updateMatrix(),this.applyMatrix4(pp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ho).negate(),this.translate(ho.x,ho.y,ho.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,a=e.length;i<a;i++){const l=e[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new at(n,3))}else{for(let n=0,i=t.count;n<i;n++){const a=e[n];t.setXYZ(n,a.x,a.y,a.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ui);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new G(-1/0,-1/0,-1/0),new G(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const a=t[n];Pi.setFromBufferAttribute(a),this.morphTargetsRelative?(Bn.addVectors(this.boundingBox.min,Pi.min),this.boundingBox.expandByPoint(Bn),Bn.addVectors(this.boundingBox.max,Pi.max),this.boundingBox.expandByPoint(Bn)):(this.boundingBox.expandByPoint(Pi.min),this.boundingBox.expandByPoint(Pi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ti);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new G,1/0);return}if(e){const n=this.boundingSphere.center;if(Pi.setFromBufferAttribute(e),t)for(let a=0,l=t.length;a<l;a++){const c=t[a];vl.setFromBufferAttribute(c),this.morphTargetsRelative?(Bn.addVectors(Pi.min,vl.min),Pi.expandByPoint(Bn),Bn.addVectors(Pi.max,vl.max),Pi.expandByPoint(Bn)):(Pi.expandByPoint(vl.min),Pi.expandByPoint(vl.max))}Pi.getCenter(n);let i=0;for(let a=0,l=e.count;a<l;a++)Bn.fromBufferAttribute(e,a),i=Math.max(i,n.distanceToSquared(Bn));if(t)for(let a=0,l=t.length;a<l;a++){const c=t[a],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)Bn.fromBufferAttribute(c,f),h&&(ho.fromBufferAttribute(e,f),Bn.add(ho)),i=Math.max(i,n.distanceToSquared(Bn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,a=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new an(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let L=0;L<n.count;L++)c[L]=new G,h[L]=new G;const f=new G,p=new G,m=new G,g=new Te,v=new Te,x=new Te,M=new G,S=new G;function _(L,C,R){f.fromBufferAttribute(n,L),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,R),g.fromBufferAttribute(a,L),v.fromBufferAttribute(a,C),x.fromBufferAttribute(a,R),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const F=1/(v.x*x.y-x.x*v.y);isFinite(F)&&(M.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(F),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(F),c[L].add(M),c[C].add(M),c[R].add(M),h[L].add(S),h[C].add(S),h[R].add(S))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let L=0,C=b.length;L<C;++L){const R=b[L],F=R.start,ee=R.count;for(let K=F,J=F+ee;K<J;K+=3)_(e.getX(K+0),e.getX(K+1),e.getX(K+2))}const A=new G,T=new G,z=new G,D=new G;function O(L){z.fromBufferAttribute(i,L),D.copy(z);const C=c[L];A.copy(C),A.sub(z.multiplyScalar(z.dot(C))).normalize(),T.crossVectors(D,C);const F=T.dot(h[L])<0?-1:1;l.setXYZW(L,A.x,A.y,A.z,F)}for(let L=0,C=b.length;L<C;++L){const R=b[L],F=R.start,ee=R.count;for(let K=F,J=F+ee;K<J;K+=3)O(e.getX(K+0)),O(e.getX(K+1)),O(e.getX(K+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new an(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new G,a=new G,l=new G,c=new G,h=new G,f=new G,p=new G,m=new G;if(e)for(let g=0,v=e.count;g<v;g+=3){const x=e.getX(g+0),M=e.getX(g+1),S=e.getX(g+2);i.fromBufferAttribute(t,x),a.fromBufferAttribute(t,M),l.fromBufferAttribute(t,S),p.subVectors(l,a),m.subVectors(i,a),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,M),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=t.count;g<v;g+=3)i.fromBufferAttribute(t,g+0),a.fromBufferAttribute(t,g+1),l.fromBufferAttribute(t,g+2),p.subVectors(l,a),m.subVectors(i,a),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Bn.fromBufferAttribute(e,t),Bn.normalize(),e.setXYZ(t,Bn.x,Bn.y,Bn.z)}toNonIndexed(){function e(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let M=0,S=h.length;M<S;M++){c.isInterleavedBufferAttribute?v=h[M]*c.data.stride+c.offset:v=h[M]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new an(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Rt,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=e(h,n);t.setAttribute(c,f)}const a=this.morphAttributes;for(const c in a){const h=[],f=a[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=e(g,n);h.push(v)}t.morphAttributes[c]=h}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(e[f]=h[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const h in n){const f=n[h];e.data.attributes[h]=f.toJSON(e.data)}const i={};let a=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(e.data))}p.length>0&&(i[h]=p,a=!0)}a&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(t))}const a=e.morphAttributes;for(const f in a){const p=[],m=a[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(t));this.morphAttributes[f]=p}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const i_=new _t,Qr=new Ho,mu=new ti,s_=new G,gu=new G,vu=new G,_u=new G,mp=new G,yu=new G,r_=new G,xu=new G;class _n extends Wt{constructor(e=new Rt,t=new js){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=i.length;a<l;a++){const c=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,a=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(a&&c){yu.set(0,0,0);for(let h=0,f=a.length;h<f;h++){const p=c[h],m=a[h];p!==0&&(mp.fromBufferAttribute(m,e),l?yu.addScaledVector(mp,p):yu.addScaledVector(mp.sub(t),p))}t.add(yu)}return t}raycast(e,t){const n=this.geometry,i=this.material,a=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),mu.copy(n.boundingSphere),mu.applyMatrix4(a),Qr.copy(e.ray).recast(e.near),!(mu.containsPoint(Qr.origin)===!1&&(Qr.intersectSphere(mu,s_)===null||Qr.origin.distanceToSquared(s_)>(e.far-e.near)**2))&&(i_.copy(a).invert(),Qr.copy(e.ray).applyMatrix4(i_),!(n.boundingBox!==null&&Qr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Qr)))}_computeIntersections(e,t,n){let i;const a=this.geometry,l=this.material,c=a.index,h=a.attributes.position,f=a.attributes.uv,p=a.attributes.uv1,m=a.attributes.normal,g=a.groups,v=a.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],b=Math.max(S.start,v.start),A=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let T=b,z=A;T<z;T+=3){const D=c.getX(T),O=c.getX(T+1),L=c.getX(T+2);i=Su(this,_,e,n,f,p,m,D,O,L),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,t.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(c.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const b=c.getX(S),A=c.getX(S+1),T=c.getX(S+2);i=Su(this,l,e,n,f,p,m,b,A,T),i&&(i.faceIndex=Math.floor(S/3),t.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],b=Math.max(S.start,v.start),A=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let T=b,z=A;T<z;T+=3){const D=T,O=T+1,L=T+2;i=Su(this,_,e,n,f,p,m,D,O,L),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=S.materialIndex,t.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(h.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const b=S,A=S+1,T=S+2;i=Su(this,l,e,n,f,p,m,b,A,T),i&&(i.faceIndex=Math.floor(S/3),t.push(i))}}}}function Kb(s,e,t,n,i,a,l,c){let h;if(e.side===ei?h=n.intersectTriangle(l,a,i,!0,c):h=n.intersectTriangle(i,a,l,e.side===Ks,c),h===null)return null;xu.copy(c),xu.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(xu);return f<t.near||f>t.far?null:{distance:f,point:xu.clone(),object:s}}function Su(s,e,t,n,i,a,l,c,h,f){s.getVertexPosition(c,gu),s.getVertexPosition(h,vu),s.getVertexPosition(f,_u);const p=Kb(s,e,t,n,gu,vu,_u,r_);if(p){const m=new G;yi.getBarycoord(r_,gu,vu,_u,m),i&&(p.uv=yi.getInterpolatedAttribute(i,c,h,f,m,new Te)),a&&(p.uv1=yi.getInterpolatedAttribute(a,c,h,f,m,new Te)),l&&(p.normal=yi.getInterpolatedAttribute(l,c,h,f,m,new G),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new G,materialIndex:0};yi.getNormal(gu,vu,_u,g.normal),p.face=g,p.barycoord=m}return p}class Ca extends Rt{constructor(e=1,t=1,n=1,i=1,a=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:a,depthSegments:l};const c=this;i=Math.floor(i),a=Math.floor(a),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,t,e,l,a,0),x("z","y","x",1,-1,n,t,-e,l,a,1),x("x","z","y",1,1,e,n,t,i,l,2),x("x","z","y",1,-1,e,n,-t,i,l,3),x("x","y","z",1,-1,e,t,n,i,a,4),x("x","y","z",-1,-1,e,t,-n,i,a,5),this.setIndex(h),this.setAttribute("position",new at(f,3)),this.setAttribute("normal",new at(p,3)),this.setAttribute("uv",new at(m,2));function x(M,S,_,b,A,T,z,D,O,L,C){const R=T/O,F=z/L,ee=T/2,K=z/2,J=D/2,oe=O+1,B=L+1;let Q=0,Y=0;const le=new G;for(let he=0;he<B;he++){const xe=he*F-K;for(let Ae=0;Ae<oe;Ae++){const Ze=Ae*R-ee;le[M]=Ze*b,le[S]=xe*A,le[_]=J,f.push(le.x,le.y,le.z),le[M]=0,le[S]=0,le[_]=D>0?1:-1,p.push(le.x,le.y,le.z),m.push(Ae/O),m.push(1-he/L),Q+=1}}for(let he=0;he<L;he++)for(let xe=0;xe<O;xe++){const Ae=g+xe+oe*he,Ze=g+xe+oe*(he+1),se=g+(xe+1)+oe*(he+1),Se=g+(xe+1)+oe*he;h.push(Ae,Ze,Se),h.push(Ze,se,Se),Y+=6}c.addGroup(v,Y,C),v+=Y,g+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ca(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Po(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function oi(s){const e={};for(let t=0;t<s.length;t++){const n=Po(s[t]);for(const i in n)e[i]=n[i]}return e}function jb(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Vx(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Ft.workingColorSpace}const Gx={clone:Po,merge:oi};var Jb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Qb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Mi extends ni{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Jb,this.fragmentShader=Qb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Po(e.uniforms),this.uniformsGroups=jb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class af extends Wt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new _t,this.projectionMatrix=new _t,this.projectionMatrixInverse=new _t,this.coordinateSystem=ys}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const _r=new G,a_=new Te,o_=new Te;class zn extends af{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Lo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(xa*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Lo*2*Math.atan(Math.tan(xa*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){_r.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(_r.x,_r.y).multiplyScalar(-e/_r.z),_r.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(_r.x,_r.y).multiplyScalar(-e/_r.z)}getViewSize(e,t){return this.getViewBounds(e,a_,o_),t.subVectors(o_,a_)}setViewOffset(e,t,n,i,a,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(xa*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,a=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;a+=l.offsetX*i/h,t-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(a+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const fo=-90,po=1;class kx extends Wt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new zn(fo,po,e,t);i.layers=this.layers,this.add(i);const a=new zn(fo,po,e,t);a.layers=this.layers,this.add(a);const l=new zn(fo,po,e,t);l.layers=this.layers,this.add(l);const c=new zn(fo,po,e,t);c.layers=this.layers,this.add(c);const h=new zn(fo,po,e,t);h.layers=this.layers,this.add(h);const f=new zn(fo,po,e,t);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,a,l,c,h]=t;for(const f of t)this.remove(f);if(e===ys)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(e===Kl)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const f of t)this.add(f),f.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[a,l,c,h,f,p]=this.children,m=e.getRenderTarget(),g=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),x=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,a),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,h),e.setRenderTarget(n,4,i),e.render(t,f),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,p),e.setRenderTarget(m,g,v),e.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class pc extends rn{constructor(e,t,n,i,a,l,c,h,f,p){e=e!==void 0?e:[],t=t!==void 0?t:Es,super(e,t,n,i,a,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Xm extends zi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new pc(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:$t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ca(5,5,5),a=new Mi({name:"CubemapFromEquirect",uniforms:Po(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ei,blending:xs});a.uniforms.tEquirect.value=t;const l=new _n(i,a),c=t.minFilter;return t.minFilter===_s&&(t.minFilter=$t),new kx(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const a=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(a)}}const gp=new G,$b=new G,eT=new bt;class Sr{constructor(e=new G(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=gp.subVectors(n,t).cross($b.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(gp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/i;return a<0||a>1?null:t.copy(e.start).addScaledVector(n,a)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||eT.getNormalMatrix(e),i=this.coplanarPoint(gp).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const $r=new ti,Mu=new G;class mc{constructor(e=new Sr,t=new Sr,n=new Sr,i=new Sr,a=new Sr,l=new Sr){this.planes=[e,t,n,i,a,l]}set(e,t,n,i,a,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(a),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ys){const n=this.planes,i=e.elements,a=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],M=i[10],S=i[11],_=i[12],b=i[13],A=i[14],T=i[15];if(n[0].setComponents(h-a,g-f,S-v,T-_).normalize(),n[1].setComponents(h+a,g+f,S+v,T+_).normalize(),n[2].setComponents(h+l,g+p,S+x,T+b).normalize(),n[3].setComponents(h-l,g-p,S-x,T-b).normalize(),n[4].setComponents(h-c,g-m,S-M,T-A).normalize(),t===ys)n[5].setComponents(h+c,g+m,S+M,T+A).normalize();else if(t===Kl)n[5].setComponents(c,m,M,A).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),$r.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),$r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere($r)}intersectsSprite(e){return $r.center.set(0,0,0),$r.radius=.7071067811865476,$r.applyMatrix4(e.matrixWorld),this.intersectsSphere($r)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Mu.x=i.normal.x>0?e.max.x:e.min.x,Mu.y=i.normal.y>0?e.max.y:e.min.y,Mu.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Mu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Wx(){let s=null,e=!1,t=null,n=null;function i(a,l){t(a,l),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){s=a}}}function tT(s){const e=new WeakMap;function t(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],M=m[v];M.start<=x.start+x.count+1?x.count=Math.max(x.count,M.start+M.count-x.start):(++g,m[g]=M)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const M=m[v];s.bufferSubData(f,M.start*p.BYTES_PER_ELEMENT,p,M.start,M.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);h&&(s.deleteBuffer(h.buffer),e.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=e.get(c);(!p||p.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=e.get(c);if(f===void 0)e.set(c,t(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:a,update:l}}class Cr extends Rt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const a=e/2,l=t/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=e/c,g=t/h,v=[],x=[],M=[],S=[];for(let _=0;_<p;_++){const b=_*g-l;for(let A=0;A<f;A++){const T=A*m-a;x.push(T,-b,0),M.push(0,0,1),S.push(A/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let b=0;b<c;b++){const A=b+f*_,T=b+f*(_+1),z=b+1+f*(_+1),D=b+1+f*_;v.push(A,T,D),v.push(T,z,D)}this.setIndex(v),this.setAttribute("position",new at(x,3)),this.setAttribute("normal",new at(M,3)),this.setAttribute("uv",new at(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cr(e.width,e.height,e.widthSegments,e.heightSegments)}}var nT=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,iT=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,sT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,rT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,aT=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,oT=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,lT=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,cT=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,uT=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,hT=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,fT=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,dT=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,pT=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,mT=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,gT=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,vT=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,_T=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,yT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,xT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ST=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,MT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,ET=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,bT=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,TT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,AT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,wT=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,CT=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,RT=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,UT=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,DT=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,NT="gl_FragColor = linearToOutputTexel( gl_FragColor );",LT=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,IT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,PT=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,OT=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,BT=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,zT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,FT=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,HT=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,VT=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,GT=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,kT=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,WT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,XT=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,qT=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,YT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ZT=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,KT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,jT=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,JT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,QT=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$T=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,eA=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,tA=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,nA=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,iA=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,sA=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,rA=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,aA=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,oA=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,lA=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,cA=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,uA=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,hA=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fA=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,dA=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,pA=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,mA=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,gA=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,vA=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,_A=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,yA=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,xA=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,SA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,MA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,EA=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,bA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,TA=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,AA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,wA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,CA=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,RA=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,UA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,DA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,NA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,LA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,IA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,PA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,OA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,BA=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,zA=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,FA=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,HA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,VA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,GA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,kA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,WA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,XA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,qA=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,YA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ZA=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,KA=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,jA=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,JA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,QA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,$A=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ew=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const tw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,nw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,aw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ow=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,lw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,cw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,uw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,hw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,fw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,pw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,mw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,gw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_w=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,xw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Mw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ew=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Aw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ww=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Uw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Dw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Nw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Lw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Iw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ct={alphahash_fragment:nT,alphahash_pars_fragment:iT,alphamap_fragment:sT,alphamap_pars_fragment:rT,alphatest_fragment:aT,alphatest_pars_fragment:oT,aomap_fragment:lT,aomap_pars_fragment:cT,batching_pars_vertex:uT,batching_vertex:hT,begin_vertex:fT,beginnormal_vertex:dT,bsdfs:pT,iridescence_fragment:mT,bumpmap_pars_fragment:gT,clipping_planes_fragment:vT,clipping_planes_pars_fragment:_T,clipping_planes_pars_vertex:yT,clipping_planes_vertex:xT,color_fragment:ST,color_pars_fragment:MT,color_pars_vertex:ET,color_vertex:bT,common:TT,cube_uv_reflection_fragment:AT,defaultnormal_vertex:wT,displacementmap_pars_vertex:CT,displacementmap_vertex:RT,emissivemap_fragment:UT,emissivemap_pars_fragment:DT,colorspace_fragment:NT,colorspace_pars_fragment:LT,envmap_fragment:IT,envmap_common_pars_fragment:PT,envmap_pars_fragment:OT,envmap_pars_vertex:BT,envmap_physical_pars_fragment:ZT,envmap_vertex:zT,fog_vertex:FT,fog_pars_vertex:HT,fog_fragment:VT,fog_pars_fragment:GT,gradientmap_pars_fragment:kT,lightmap_pars_fragment:WT,lights_lambert_fragment:XT,lights_lambert_pars_fragment:qT,lights_pars_begin:YT,lights_toon_fragment:KT,lights_toon_pars_fragment:jT,lights_phong_fragment:JT,lights_phong_pars_fragment:QT,lights_physical_fragment:$T,lights_physical_pars_fragment:eA,lights_fragment_begin:tA,lights_fragment_maps:nA,lights_fragment_end:iA,logdepthbuf_fragment:sA,logdepthbuf_pars_fragment:rA,logdepthbuf_pars_vertex:aA,logdepthbuf_vertex:oA,map_fragment:lA,map_pars_fragment:cA,map_particle_fragment:uA,map_particle_pars_fragment:hA,metalnessmap_fragment:fA,metalnessmap_pars_fragment:dA,morphinstance_vertex:pA,morphcolor_vertex:mA,morphnormal_vertex:gA,morphtarget_pars_vertex:vA,morphtarget_vertex:_A,normal_fragment_begin:yA,normal_fragment_maps:xA,normal_pars_fragment:SA,normal_pars_vertex:MA,normal_vertex:EA,normalmap_pars_fragment:bA,clearcoat_normal_fragment_begin:TA,clearcoat_normal_fragment_maps:AA,clearcoat_pars_fragment:wA,iridescence_pars_fragment:CA,opaque_fragment:RA,packing:UA,premultiplied_alpha_fragment:DA,project_vertex:NA,dithering_fragment:LA,dithering_pars_fragment:IA,roughnessmap_fragment:PA,roughnessmap_pars_fragment:OA,shadowmap_pars_fragment:BA,shadowmap_pars_vertex:zA,shadowmap_vertex:FA,shadowmask_pars_fragment:HA,skinbase_vertex:VA,skinning_pars_vertex:GA,skinning_vertex:kA,skinnormal_vertex:WA,specularmap_fragment:XA,specularmap_pars_fragment:qA,tonemapping_fragment:YA,tonemapping_pars_fragment:ZA,transmission_fragment:KA,transmission_pars_fragment:jA,uv_pars_fragment:JA,uv_pars_vertex:QA,uv_vertex:$A,worldpos_vertex:ew,background_vert:tw,background_frag:nw,backgroundCube_vert:iw,backgroundCube_frag:sw,cube_vert:rw,cube_frag:aw,depth_vert:ow,depth_frag:lw,distanceRGBA_vert:cw,distanceRGBA_frag:uw,equirect_vert:hw,equirect_frag:fw,linedashed_vert:dw,linedashed_frag:pw,meshbasic_vert:mw,meshbasic_frag:gw,meshlambert_vert:vw,meshlambert_frag:_w,meshmatcap_vert:yw,meshmatcap_frag:xw,meshnormal_vert:Sw,meshnormal_frag:Mw,meshphong_vert:Ew,meshphong_frag:bw,meshphysical_vert:Tw,meshphysical_frag:Aw,meshtoon_vert:ww,meshtoon_frag:Cw,points_vert:Rw,points_frag:Uw,shadow_vert:Dw,shadow_frag:Nw,sprite_vert:Lw,sprite_frag:Iw},We={common:{diffuse:{value:new $e(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new bt}},envmap:{envMap:{value:null},envMapRotation:{value:new bt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new bt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new bt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new bt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new bt},normalScale:{value:new Te(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new bt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new bt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new bt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new bt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new $e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new $e(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0},uvTransform:{value:new bt}},sprite:{diffuse:{value:new $e(16777215)},opacity:{value:1},center:{value:new Te(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}}},as={basic:{uniforms:oi([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.fog]),vertexShader:Ct.meshbasic_vert,fragmentShader:Ct.meshbasic_frag},lambert:{uniforms:oi([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new $e(0)}}]),vertexShader:Ct.meshlambert_vert,fragmentShader:Ct.meshlambert_frag},phong:{uniforms:oi([We.common,We.specularmap,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.fog,We.lights,{emissive:{value:new $e(0)},specular:{value:new $e(1118481)},shininess:{value:30}}]),vertexShader:Ct.meshphong_vert,fragmentShader:Ct.meshphong_frag},standard:{uniforms:oi([We.common,We.envmap,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.roughnessmap,We.metalnessmap,We.fog,We.lights,{emissive:{value:new $e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ct.meshphysical_vert,fragmentShader:Ct.meshphysical_frag},toon:{uniforms:oi([We.common,We.aomap,We.lightmap,We.emissivemap,We.bumpmap,We.normalmap,We.displacementmap,We.gradientmap,We.fog,We.lights,{emissive:{value:new $e(0)}}]),vertexShader:Ct.meshtoon_vert,fragmentShader:Ct.meshtoon_frag},matcap:{uniforms:oi([We.common,We.bumpmap,We.normalmap,We.displacementmap,We.fog,{matcap:{value:null}}]),vertexShader:Ct.meshmatcap_vert,fragmentShader:Ct.meshmatcap_frag},points:{uniforms:oi([We.points,We.fog]),vertexShader:Ct.points_vert,fragmentShader:Ct.points_frag},dashed:{uniforms:oi([We.common,We.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ct.linedashed_vert,fragmentShader:Ct.linedashed_frag},depth:{uniforms:oi([We.common,We.displacementmap]),vertexShader:Ct.depth_vert,fragmentShader:Ct.depth_frag},normal:{uniforms:oi([We.common,We.bumpmap,We.normalmap,We.displacementmap,{opacity:{value:1}}]),vertexShader:Ct.meshnormal_vert,fragmentShader:Ct.meshnormal_frag},sprite:{uniforms:oi([We.sprite,We.fog]),vertexShader:Ct.sprite_vert,fragmentShader:Ct.sprite_frag},background:{uniforms:{uvTransform:{value:new bt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ct.background_vert,fragmentShader:Ct.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new bt}},vertexShader:Ct.backgroundCube_vert,fragmentShader:Ct.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ct.cube_vert,fragmentShader:Ct.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ct.equirect_vert,fragmentShader:Ct.equirect_frag},distanceRGBA:{uniforms:oi([We.common,We.displacementmap,{referencePosition:{value:new G},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ct.distanceRGBA_vert,fragmentShader:Ct.distanceRGBA_frag},shadow:{uniforms:oi([We.lights,We.fog,{color:{value:new $e(0)},opacity:{value:1}}]),vertexShader:Ct.shadow_vert,fragmentShader:Ct.shadow_frag}};as.physical={uniforms:oi([as.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new bt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new bt},clearcoatNormalScale:{value:new Te(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new bt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new bt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new bt},sheen:{value:0},sheenColor:{value:new $e(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new bt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new bt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new bt},transmissionSamplerSize:{value:new Te},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new bt},attenuationDistance:{value:0},attenuationColor:{value:new $e(0)},specularColor:{value:new $e(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new bt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new bt},anisotropyVector:{value:new Te},anisotropyMap:{value:null},anisotropyMapTransform:{value:new bt}}]),vertexShader:Ct.meshphysical_vert,fragmentShader:Ct.meshphysical_frag};const Eu={r:0,b:0,g:0},ea=new Fi,Pw=new _t;function Ow(s,e,t,n,i,a,l){const c=new $e(0);let h=a===!0?0:1,f,p,m=null,g=0,v=null;function x(b){let A=b.isScene===!0?b.background:null;return A&&A.isTexture&&(A=(b.backgroundBlurriness>0?t:e).get(A)),A}function M(b){let A=!1;const T=x(b);T===null?_(c,h):T&&T.isColor&&(_(T,1),A=!0);const z=s.xr.getEnvironmentBlendMode();z==="additive"?n.buffers.color.setClear(0,0,0,1,l):z==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||A)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(b,A){const T=x(A);T&&(T.isCubeTexture||T.mapping===Fo)?(p===void 0&&(p=new _n(new Ca(1,1,1),new Mi({name:"BackgroundCubeMaterial",uniforms:Po(as.backgroundCube.uniforms),vertexShader:as.backgroundCube.vertexShader,fragmentShader:as.backgroundCube.fragmentShader,side:ei,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(z,D,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),ea.copy(A.backgroundRotation),ea.x*=-1,ea.y*=-1,ea.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(ea.y*=-1,ea.z*=-1),p.material.uniforms.envMap.value=T,p.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=A.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(Pw.makeRotationFromEuler(ea)),p.material.toneMapped=Ft.getTransfer(T.colorSpace)!==Qt,(m!==T||g!==T.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=T,g=T.version,v=s.toneMapping),p.layers.enableAll(),b.unshift(p,p.geometry,p.material,0,0,null)):T&&T.isTexture&&(f===void 0&&(f=new _n(new Cr(2,2),new Mi({name:"BackgroundMaterial",uniforms:Po(as.background.uniforms),vertexShader:as.background.vertexShader,fragmentShader:as.background.fragmentShader,side:Ks,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=T,f.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,f.material.toneMapped=Ft.getTransfer(T.colorSpace)!==Qt,T.matrixAutoUpdate===!0&&T.updateMatrix(),f.material.uniforms.uvTransform.value.copy(T.matrix),(m!==T||g!==T.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=T,g=T.version,v=s.toneMapping),f.layers.enableAll(),b.unshift(f,f.geometry,f.material,0,0,null))}function _(b,A){b.getRGB(Eu,Vx(s)),n.buffers.color.setClear(Eu.r,Eu.g,Eu.b,A,l)}return{getClearColor:function(){return c},setClearColor:function(b,A=1){c.set(b),h=A,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(b){h=b,_(c,h)},render:M,addToRenderList:S}}function Bw(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let a=i,l=!1;function c(R,F,ee,K,J){let oe=!1;const B=m(K,ee,F);a!==B&&(a=B,f(a.object)),oe=v(R,K,ee,J),oe&&x(R,K,ee,J),J!==null&&e.update(J,s.ELEMENT_ARRAY_BUFFER),(oe||l)&&(l=!1,T(R,F,ee,K),J!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(J).buffer))}function h(){return s.createVertexArray()}function f(R){return s.bindVertexArray(R)}function p(R){return s.deleteVertexArray(R)}function m(R,F,ee){const K=ee.wireframe===!0;let J=n[R.id];J===void 0&&(J={},n[R.id]=J);let oe=J[F.id];oe===void 0&&(oe={},J[F.id]=oe);let B=oe[K];return B===void 0&&(B=g(h()),oe[K]=B),B}function g(R){const F=[],ee=[],K=[];for(let J=0;J<t;J++)F[J]=0,ee[J]=0,K[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:ee,attributeDivisors:K,object:R,attributes:{},index:null}}function v(R,F,ee,K){const J=a.attributes,oe=F.attributes;let B=0;const Q=ee.getAttributes();for(const Y in Q)if(Q[Y].location>=0){const he=J[Y];let xe=oe[Y];if(xe===void 0&&(Y==="instanceMatrix"&&R.instanceMatrix&&(xe=R.instanceMatrix),Y==="instanceColor"&&R.instanceColor&&(xe=R.instanceColor)),he===void 0||he.attribute!==xe||xe&&he.data!==xe.data)return!0;B++}return a.attributesNum!==B||a.index!==K}function x(R,F,ee,K){const J={},oe=F.attributes;let B=0;const Q=ee.getAttributes();for(const Y in Q)if(Q[Y].location>=0){let he=oe[Y];he===void 0&&(Y==="instanceMatrix"&&R.instanceMatrix&&(he=R.instanceMatrix),Y==="instanceColor"&&R.instanceColor&&(he=R.instanceColor));const xe={};xe.attribute=he,he&&he.data&&(xe.data=he.data),J[Y]=xe,B++}a.attributes=J,a.attributesNum=B,a.index=K}function M(){const R=a.newAttributes;for(let F=0,ee=R.length;F<ee;F++)R[F]=0}function S(R){_(R,0)}function _(R,F){const ee=a.newAttributes,K=a.enabledAttributes,J=a.attributeDivisors;ee[R]=1,K[R]===0&&(s.enableVertexAttribArray(R),K[R]=1),J[R]!==F&&(s.vertexAttribDivisor(R,F),J[R]=F)}function b(){const R=a.newAttributes,F=a.enabledAttributes;for(let ee=0,K=F.length;ee<K;ee++)F[ee]!==R[ee]&&(s.disableVertexAttribArray(ee),F[ee]=0)}function A(R,F,ee,K,J,oe,B){B===!0?s.vertexAttribIPointer(R,F,ee,J,oe):s.vertexAttribPointer(R,F,ee,K,J,oe)}function T(R,F,ee,K){M();const J=K.attributes,oe=ee.getAttributes(),B=F.defaultAttributeValues;for(const Q in oe){const Y=oe[Q];if(Y.location>=0){let le=J[Q];if(le===void 0&&(Q==="instanceMatrix"&&R.instanceMatrix&&(le=R.instanceMatrix),Q==="instanceColor"&&R.instanceColor&&(le=R.instanceColor)),le!==void 0){const he=le.normalized,xe=le.itemSize,Ae=e.get(le);if(Ae===void 0)continue;const Ze=Ae.buffer,se=Ae.type,Se=Ae.bytesPerElement,De=se===s.INT||se===s.UNSIGNED_INT||le.gpuType===uc;if(le.isInterleavedBufferAttribute){const Ue=le.data,je=Ue.stride,mt=le.offset;if(Ue.isInstancedInterleavedBuffer){for(let ft=0;ft<Y.locationSize;ft++)_(Y.location+ft,Ue.meshPerAttribute);R.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=Ue.meshPerAttribute*Ue.count)}else for(let ft=0;ft<Y.locationSize;ft++)S(Y.location+ft);s.bindBuffer(s.ARRAY_BUFFER,Ze);for(let ft=0;ft<Y.locationSize;ft++)A(Y.location+ft,xe/Y.locationSize,se,he,je*Se,(mt+xe/Y.locationSize*ft)*Se,De)}else{if(le.isInstancedBufferAttribute){for(let Ue=0;Ue<Y.locationSize;Ue++)_(Y.location+Ue,le.meshPerAttribute);R.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=le.meshPerAttribute*le.count)}else for(let Ue=0;Ue<Y.locationSize;Ue++)S(Y.location+Ue);s.bindBuffer(s.ARRAY_BUFFER,Ze);for(let Ue=0;Ue<Y.locationSize;Ue++)A(Y.location+Ue,xe/Y.locationSize,se,he,xe*Se,xe/Y.locationSize*Ue*Se,De)}}else if(B!==void 0){const he=B[Q];if(he!==void 0)switch(he.length){case 2:s.vertexAttrib2fv(Y.location,he);break;case 3:s.vertexAttrib3fv(Y.location,he);break;case 4:s.vertexAttrib4fv(Y.location,he);break;default:s.vertexAttrib1fv(Y.location,he)}}}}b()}function z(){L();for(const R in n){const F=n[R];for(const ee in F){const K=F[ee];for(const J in K)p(K[J].object),delete K[J];delete F[ee]}delete n[R]}}function D(R){if(n[R.id]===void 0)return;const F=n[R.id];for(const ee in F){const K=F[ee];for(const J in K)p(K[J].object),delete K[J];delete F[ee]}delete n[R.id]}function O(R){for(const F in n){const ee=n[F];if(ee[R.id]===void 0)continue;const K=ee[R.id];for(const J in K)p(K[J].object),delete K[J];delete ee[R.id]}}function L(){C(),l=!0,a!==i&&(a=i,f(a.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:L,resetDefaultState:C,dispose:z,releaseStatesOfGeometry:D,releaseStatesOfProgram:O,initAttributes:M,enableAttribute:S,disableUnusedAttributes:b}}function zw(s,e,t){let n;function i(f){n=f}function a(f,p){s.drawArrays(n,f,p),t.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),t.update(p,n,m))}function c(f,p,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];t.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let M=0;M<m;M++)x+=p[M]*g[M];t.update(x,n,1)}}this.setMode=i,this.render=a,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function Fw(s,e,t,n){let i;function a(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(O){return!(O!==Tn&&n.convert(O)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(O){const L=O===Fn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(O!==Si&&n.convert(O)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&O!==vn&&!L)}function h(O){if(O==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";O="mediump"}return O==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=t.precision!==void 0?t.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=t.logarithmicDepthBuffer===!0,g=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),b=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),A=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),z=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:a,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:M,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:b,maxVaryings:A,maxFragmentUniforms:T,vertexTextures:z,maxSamples:D}}function Hw(s){const e=this;let t=null,n=0,i=!1,a=!1;const l=new Sr,c=new bt,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){a=!0,p(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(m,g){t=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,M=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||a&&!S)a?p(null):f();else{const b=a?0:n,A=b*4;let T=_.clippingState||null;h.value=T,T=p(x,g,A,v);for(let z=0;z!==A;++z)T[z]=t[z];_.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=b}};function f(){h.value!==t&&(h.value=t,h.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function p(m,g,v,x){const M=m!==null?m.length:0;let S=null;if(M!==0){if(S=h.value,x!==!0||S===null){const _=v+M*4,b=g.matrixWorldInverse;c.getNormalMatrix(b),(S===null||S.length<_)&&(S=new Float32Array(_));for(let A=0,T=v;A!==M;++A,T+=4)l.copy(m[A]).applyMatrix4(b,c),l.normal.toArray(S,T),S[T+3]=l.constant}h.value=S,h.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,S}}function Vw(s){let e=new WeakMap;function t(l,c){return c===Do?l.mapping=Es:c===kl&&(l.mapping=Tr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Do||c===kl)if(e.has(l)){const h=e.get(l).texture;return t(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new Xm(h.height);return f.fromEquirectangularTexture(s,l),e.set(l,f),l.addEventListener("dispose",i),t(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=e.get(c);h!==void 0&&(e.delete(c),h.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}class Vo extends af{constructor(e=-1,t=1,n=1,i=-1,a=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=a,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,a,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let a=n-e,l=n+e,c=i+t,h=i-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=f*this.view.offsetX,l=a+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(a,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ao=4,l_=[.125,.215,.35,.446,.526,.582],ha=20,vp=new Vo,c_=new $e;let _p=null,yp=0,xp=0,Sp=!1;const ua=(1+Math.sqrt(5))/2,mo=1/ua,u_=[new G(-ua,mo,0),new G(ua,mo,0),new G(-mo,0,ua),new G(mo,0,ua),new G(0,ua,-mo),new G(0,ua,mo),new G(-1,1,-1),new G(1,1,-1),new G(-1,1,1),new G(1,1,1)];class dm{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){_p=this._renderer.getRenderTarget(),yp=this._renderer.getActiveCubeFace(),xp=this._renderer.getActiveMipmapLevel(),Sp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,n,i,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=d_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=f_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(_p,yp,xp),this._renderer.xr.enabled=Sp,e.scissorTest=!1,bu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Es||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_p=this._renderer.getRenderTarget(),yp=this._renderer.getActiveCubeFace(),xp=this._renderer.getActiveMipmapLevel(),Sp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:Fn,format:Tn,colorSpace:cs,depthBuffer:!1},i=h_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=h_(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Gw(a)),this._blurMaterial=kw(a,e,t)}return i}_compileMaterial(e){const t=new _n(this._lodPlanes[0],e);this._renderer.compile(t,vp)}_sceneToCubeUV(e,t,n,i){const c=new zn(90,1,t,n),h=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,g=p.toneMapping;p.getClearColor(c_),p.toneMapping=Ss,p.autoClear=!1;const v=new js({name:"PMREM.Background",side:ei,depthWrite:!1,depthTest:!1}),x=new _n(new Ca,v);let M=!1;const S=e.background;S?S.isColor&&(v.color.copy(S),e.background=null,M=!0):(v.color.copy(c_),M=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(c.up.set(0,h[_],0),c.lookAt(f[_],0,0)):b===1?(c.up.set(0,0,h[_]),c.lookAt(0,f[_],0)):(c.up.set(0,h[_],0),c.lookAt(0,0,f[_]));const A=this._cubeSize;bu(i,b*A,_>2?A:0,A,A),p.setRenderTarget(i),M&&p.render(x,c),p.render(e,c)}x.geometry.dispose(),x.material.dispose(),p.toneMapping=g,p.autoClear=m,e.background=S}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Es||e.mapping===Tr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=d_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=f_());const a=i?this._cubemapMaterial:this._equirectMaterial,l=new _n(this._lodPlanes[0],a),c=a.uniforms;c.envMap.value=e;const h=this._cubeSize;bu(t,0,0,3*h,2*h),n.setRenderTarget(t),n.render(l,vp)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let a=1;a<i;a++){const l=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),c=u_[(i-a-1)%u_.length];this._blur(e,a-1,a,l,c)}t.autoClear=n}_blur(e,t,n,i,a){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",a),this._halfBlur(l,e,n,n,i,"longitudinal",a)}_halfBlur(e,t,n,i,a,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new _n(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(a)?Math.PI/(2*v):2*Math.PI/(2*ha-1),M=a/x,S=isFinite(a)?1+Math.floor(p*M):ha;S>ha&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${ha}`);const _=[];let b=0;for(let O=0;O<ha;++O){const L=O/M,C=Math.exp(-L*L/2);_.push(C),O===0?b+=C:O<S&&(b+=2*C)}for(let O=0;O<_.length;O++)_[O]=_[O]/b;g.envMap.value=e.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:A}=this;g.dTheta.value=x,g.mipInt.value=A-n;const T=this._sizeLods[i],z=3*T*(i>A-Ao?i-A+Ao:0),D=4*(this._cubeSize-T);bu(t,z,D,3*T,2*T),h.setRenderTarget(t),h.render(m,vp)}}function Gw(s){const e=[],t=[],n=[];let i=s;const a=s-Ao+1+l_.length;for(let l=0;l<a;l++){const c=Math.pow(2,i);t.push(c);let h=1/c;l>s-Ao?h=l_[l-s+Ao-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,M=3,S=2,_=1,b=new Float32Array(M*x*v),A=new Float32Array(S*x*v),T=new Float32Array(_*x*v);for(let D=0;D<v;D++){const O=D%3*2/3-1,L=D>2?0:-1,C=[O,L,0,O+2/3,L,0,O+2/3,L+1,0,O,L,0,O+2/3,L+1,0,O,L+1,0];b.set(C,M*x*D),A.set(g,S*x*D);const R=[D,D,D,D,D,D];T.set(R,_*x*D)}const z=new Rt;z.setAttribute("position",new an(b,M)),z.setAttribute("uv",new an(A,S)),z.setAttribute("faceIndex",new an(T,_)),e.push(z),i>Ao&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function h_(s,e,t){const n=new zi(s,e,t);return n.texture.mapping=Fo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function bu(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function kw(s,e,t){const n=new Float32Array(ha),i=new G(0,1,0);return new Mi({name:"SphericalGaussianBlur",defines:{n:ha,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:qm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:xs,depthTest:!1,depthWrite:!1})}function f_(){return new Mi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:qm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:xs,depthTest:!1,depthWrite:!1})}function d_(){return new Mi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:qm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:xs,depthTest:!1,depthWrite:!1})}function qm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ww(s){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Do||h===kl,p=h===Es||h===Tr;if(f||p){let m=e.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return t===null&&(t=new dm(s)),m=f?t.fromEquirectangular(c,m):t.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(t===null&&(t=new dm(s)),m=f?t.fromEquirectangular(c):t.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,e.set(c,m),c.addEventListener("dispose",a),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function a(c){const h=c.target;h.removeEventListener("dispose",a);const f=e.get(h);f!==void 0&&(e.delete(h),f.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function Xw(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Cl("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function qw(s,e,t,n){const i={},a=new WeakMap;function l(m){const g=m.target;g.index!==null&&e.remove(g.index);for(const x in g.attributes)e.remove(g.attributes[x]);for(const x in g.morphAttributes){const M=g.morphAttributes[x];for(let S=0,_=M.length;S<_;S++)e.remove(M[S])}g.removeEventListener("dispose",l),delete i[g.id];const v=a.get(g);v&&(e.remove(v),a.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,t.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,t.memory.geometries++),g}function h(m){const g=m.attributes;for(const x in g)e.update(g[x],s.ARRAY_BUFFER);const v=m.morphAttributes;for(const x in v){const M=v[x];for(let S=0,_=M.length;S<_;S++)e.update(M[S],s.ARRAY_BUFFER)}}function f(m){const g=[],v=m.index,x=m.attributes.position;let M=0;if(v!==null){const b=v.array;M=v.version;for(let A=0,T=b.length;A<T;A+=3){const z=b[A+0],D=b[A+1],O=b[A+2];g.push(z,D,D,O,O,z)}}else if(x!==void 0){const b=x.array;M=x.version;for(let A=0,T=b.length/3-1;A<T;A+=3){const z=A+0,D=A+1,O=A+2;g.push(z,D,D,O,O,z)}}else return;const S=new(Ox(g)?Wm:km)(g,1);S.version=M;const _=a.get(m);_&&e.remove(_),a.set(m,S)}function p(m){const g=a.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return a.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function Yw(s,e,t){let n;function i(g){n=g}let a,l;function c(g){a=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,a,g*l),t.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,a,g*l,x),t.update(v,n,x))}function p(g,v,x){if(x===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,a,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];t.update(S,n,1)}function m(g,v,x,M){if(x===0)return;const S=e.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],M[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,a,g,0,M,0,x);let _=0;for(let b=0;b<x;b++)_+=v[b]*M[b];t.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function Zw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,l,c){switch(t.calls++,l){case s.TRIANGLES:t.triangles+=c*(a/3);break;case s.LINES:t.lines+=c*(a/2);break;case s.LINE_STRIP:t.lines+=c*(a-1);break;case s.LINE_LOOP:t.lines+=c*a;break;case s.POINTS:t.points+=c*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Kw(s,e,t){const n=new WeakMap,i=new kt;function a(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){O.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],b=c.morphAttributes.color||[];let A=0;v===!0&&(A=1),x===!0&&(A=2),M===!0&&(A=3);let T=c.attributes.position.count*A,z=1;T>e.maxTextureSize&&(z=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const D=new Float32Array(T*z*4*m),O=new rf(D,T,z,m);O.type=vn,O.needsUpdate=!0;const L=A*4;for(let R=0;R<m;R++){const F=S[R],ee=_[R],K=b[R],J=T*z*4*R;for(let oe=0;oe<F.count;oe++){const B=oe*L;v===!0&&(i.fromBufferAttribute(F,oe),D[J+B+0]=i.x,D[J+B+1]=i.y,D[J+B+2]=i.z,D[J+B+3]=0),x===!0&&(i.fromBufferAttribute(ee,oe),D[J+B+4]=i.x,D[J+B+5]=i.y,D[J+B+6]=i.z,D[J+B+7]=0),M===!0&&(i.fromBufferAttribute(K,oe),D[J+B+8]=i.x,D[J+B+9]=i.y,D[J+B+10]=i.z,D[J+B+11]=K.itemSize===4?i.w:1)}}g={count:m,texture:O,size:new Te(T,z)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,t);else{let v=0;for(let M=0;M<f.length;M++)v+=f[M];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,t),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:a}}function jw(s,e,t,n){let i=new WeakMap;function a(h){const f=n.render.frame,p=h.geometry,m=e.get(h,p);if(i.get(m)!==f&&(e.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(t.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&t.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:a,dispose:l}}class Ym extends rn{constructor(e,t,n,i,a,l,c,h,f,p=ya){if(p!==ya&&p!==ba)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===ya&&(n=bs),n===void 0&&p===ba&&(n=Ea),super(null,i,a,l,c,h,p,n,f),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Wn,this.minFilter=h!==void 0?h:Wn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const Xx=new rn,p_=new Ym(1,1),qx=new rf,Yx=new Gm,Zx=new pc,m_=[],g_=[],v_=new Float32Array(16),__=new Float32Array(9),y_=new Float32Array(4);function Go(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let a=m_[i];if(a===void 0&&(a=new Float32Array(i),m_[i]=a),e!==0){n.toArray(a,0);for(let l=1,c=0;l!==e;++l)c+=t,s[l].toArray(a,c)}return a}function Nn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Ln(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function of(s,e){let t=g_[e];t===void 0&&(t=new Int32Array(e),g_[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function Jw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Qw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nn(t,e))return;s.uniform2fv(this.addr,e),Ln(t,e)}}function $w(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Nn(t,e))return;s.uniform3fv(this.addr,e),Ln(t,e)}}function eC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nn(t,e))return;s.uniform4fv(this.addr,e),Ln(t,e)}}function tC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Ln(t,e)}else{if(Nn(t,n))return;y_.set(n),s.uniformMatrix2fv(this.addr,!1,y_),Ln(t,n)}}function nC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Ln(t,e)}else{if(Nn(t,n))return;__.set(n),s.uniformMatrix3fv(this.addr,!1,__),Ln(t,n)}}function iC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Ln(t,e)}else{if(Nn(t,n))return;v_.set(n),s.uniformMatrix4fv(this.addr,!1,v_),Ln(t,n)}}function sC(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function rC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nn(t,e))return;s.uniform2iv(this.addr,e),Ln(t,e)}}function aC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Nn(t,e))return;s.uniform3iv(this.addr,e),Ln(t,e)}}function oC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nn(t,e))return;s.uniform4iv(this.addr,e),Ln(t,e)}}function lC(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function cC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nn(t,e))return;s.uniform2uiv(this.addr,e),Ln(t,e)}}function uC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Nn(t,e))return;s.uniform3uiv(this.addr,e),Ln(t,e)}}function hC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nn(t,e))return;s.uniform4uiv(this.addr,e),Ln(t,e)}}function fC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let a;this.type===s.SAMPLER_2D_SHADOW?(p_.compareFunction=Hm,a=p_):a=Xx,t.setTexture2D(e||a,i)}function dC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Yx,i)}function pC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Zx,i)}function mC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||qx,i)}function gC(s){switch(s){case 5126:return Jw;case 35664:return Qw;case 35665:return $w;case 35666:return eC;case 35674:return tC;case 35675:return nC;case 35676:return iC;case 5124:case 35670:return sC;case 35667:case 35671:return rC;case 35668:case 35672:return aC;case 35669:case 35673:return oC;case 5125:return lC;case 36294:return cC;case 36295:return uC;case 36296:return hC;case 35678:case 36198:case 36298:case 36306:case 35682:return fC;case 35679:case 36299:case 36307:return dC;case 35680:case 36300:case 36308:case 36293:return pC;case 36289:case 36303:case 36311:case 36292:return mC}}function vC(s,e){s.uniform1fv(this.addr,e)}function _C(s,e){const t=Go(e,this.size,2);s.uniform2fv(this.addr,t)}function yC(s,e){const t=Go(e,this.size,3);s.uniform3fv(this.addr,t)}function xC(s,e){const t=Go(e,this.size,4);s.uniform4fv(this.addr,t)}function SC(s,e){const t=Go(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function MC(s,e){const t=Go(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function EC(s,e){const t=Go(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function bC(s,e){s.uniform1iv(this.addr,e)}function TC(s,e){s.uniform2iv(this.addr,e)}function AC(s,e){s.uniform3iv(this.addr,e)}function wC(s,e){s.uniform4iv(this.addr,e)}function CC(s,e){s.uniform1uiv(this.addr,e)}function RC(s,e){s.uniform2uiv(this.addr,e)}function UC(s,e){s.uniform3uiv(this.addr,e)}function DC(s,e){s.uniform4uiv(this.addr,e)}function NC(s,e,t){const n=this.cache,i=e.length,a=of(t,i);Nn(n,a)||(s.uniform1iv(this.addr,a),Ln(n,a));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||Xx,a[l])}function LC(s,e,t){const n=this.cache,i=e.length,a=of(t,i);Nn(n,a)||(s.uniform1iv(this.addr,a),Ln(n,a));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||Yx,a[l])}function IC(s,e,t){const n=this.cache,i=e.length,a=of(t,i);Nn(n,a)||(s.uniform1iv(this.addr,a),Ln(n,a));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||Zx,a[l])}function PC(s,e,t){const n=this.cache,i=e.length,a=of(t,i);Nn(n,a)||(s.uniform1iv(this.addr,a),Ln(n,a));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||qx,a[l])}function OC(s){switch(s){case 5126:return vC;case 35664:return _C;case 35665:return yC;case 35666:return xC;case 35674:return SC;case 35675:return MC;case 35676:return EC;case 5124:case 35670:return bC;case 35667:case 35671:return TC;case 35668:case 35672:return AC;case 35669:case 35673:return wC;case 5125:return CC;case 36294:return RC;case 36295:return UC;case 36296:return DC;case 35678:case 36198:case 36298:case 36306:case 35682:return NC;case 35679:case 36299:case 36307:return LC;case 35680:case 36300:case 36308:case 36293:return IC;case 36289:case 36303:case 36311:case 36292:return PC}}class BC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=gC(t.type)}}class zC{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=OC(t.type)}}class FC{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let a=0,l=i.length;a!==l;++a){const c=i[a];c.setValue(e,t[c.id],n)}}}const Mp=/(\w+)(\])?(\[|\.)?/g;function x_(s,e){s.seq.push(e),s.map[e.id]=e}function HC(s,e,t){const n=s.name,i=n.length;for(Mp.lastIndex=0;;){const a=Mp.exec(n),l=Mp.lastIndex;let c=a[1];const h=a[2]==="]",f=a[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){x_(t,f===void 0?new BC(c,s,e):new zC(c,s,e));break}else{let m=t.map[c];m===void 0&&(m=new FC(c),x_(t,m)),t=m}}}class nh{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const a=e.getActiveUniform(t,i),l=e.getUniformLocation(t,a.name);HC(a,l,this)}}setValue(e,t,n,i){const a=this.map[t];a!==void 0&&a.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let a=0,l=t.length;a!==l;++a){const c=t[a],h=n[c.id];h.needsUpdate!==!1&&c.setValue(e,h.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,a=e.length;i!==a;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function S_(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const VC=37297;let GC=0;function kC(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let l=i;l<a;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}const M_=new bt;function WC(s){Ft._getMatrix(M_,Ft.workingColorSpace,s);const e=`mat3( ${M_.elements.map(t=>t.toFixed(4))} )`;switch(Ft.getTransfer(s)){case dc:return[e,"LinearTransferOETF"];case Qt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function E_(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const a=/ERROR: 0:(\d+)/.exec(i);if(a){const l=parseInt(a[1]);return t.toUpperCase()+`

`+i+`

`+kC(s.getShaderSource(e),l)}else return i}function XC(s,e){const t=WC(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function qC(s,e){let t;switch(e){case gx:t="Linear";break;case vx:t="Reinhard";break;case _x:t="Cineon";break;case Um:t="ACESFilmic";break;case xx:t="AgX";break;case Sx:t="Neutral";break;case yx:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Tu=new G;function YC(){Ft.getLuminanceCoefficients(Tu);const s=Tu.x.toFixed(4),e=Tu.y.toFixed(4),t=Tu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function ZC(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ul).join(`
`)}function KC(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function jC(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const a=s.getActiveAttrib(e,i),l=a.name;let c=1;a.type===s.FLOAT_MAT2&&(c=2),a.type===s.FLOAT_MAT3&&(c=3),a.type===s.FLOAT_MAT4&&(c=4),t[l]={type:a.type,location:s.getAttribLocation(e,l),locationSize:c}}return t}function Ul(s){return s!==""}function b_(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function T_(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const JC=/^[ \t]*#include +<([\w\d./]+)>/gm;function pm(s){return s.replace(JC,$C)}const QC=new Map;function $C(s,e){let t=Ct[e];if(t===void 0){const n=QC.get(e);if(n!==void 0)t=Ct[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return pm(t)}const eR=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function A_(s){return s.replace(eR,tR)}function tR(s,e,t,n){let i="";for(let a=parseInt(e);a<parseInt(t);a++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function w_(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function nR(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===jh?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Dl?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===rs&&(e="SHADOWMAP_TYPE_VSM"),e}function iR(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Es:case Tr:e="ENVMAP_TYPE_CUBE";break;case Fo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function sR(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function rR(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case cc:e="ENVMAP_BLENDING_MULTIPLY";break;case px:e="ENVMAP_BLENDING_MIX";break;case mx:e="ENVMAP_BLENDING_ADD";break}return e}function aR(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function oR(s,e,t,n){const i=s.getContext(),a=t.defines;let l=t.vertexShader,c=t.fragmentShader;const h=nR(t),f=iR(t),p=sR(t),m=rR(t),g=aR(t),v=ZC(t),x=KC(a),M=i.createProgram();let S,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(Ul).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(Ul).join(`
`),_.length>0&&(_+=`
`)):(S=[w_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ul).join(`
`),_=[w_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",t.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ss?"#define TONE_MAPPING":"",t.toneMapping!==Ss?Ct.tonemapping_pars_fragment:"",t.toneMapping!==Ss?qC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ct.colorspace_pars_fragment,XC("linearToOutputTexel",t.outputColorSpace),YC(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ul).join(`
`)),l=pm(l),l=b_(l,t),l=T_(l,t),c=pm(c),c=b_(c,t),c=T_(c,t),l=A_(l),c=A_(c),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",t.glslVersion===fm?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===fm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=b+S+l,T=b+_+c,z=S_(i,i.VERTEX_SHADER,A),D=S_(i,i.FRAGMENT_SHADER,T);i.attachShader(M,z),i.attachShader(M,D),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function O(F){if(s.debug.checkShaderErrors){const ee=i.getProgramInfoLog(M).trim(),K=i.getShaderInfoLog(z).trim(),J=i.getShaderInfoLog(D).trim();let oe=!0,B=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(oe=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,M,z,D);else{const Q=E_(i,z,"vertex"),Y=E_(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+ee+`
`+Q+`
`+Y)}else ee!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ee):(K===""||J==="")&&(B=!1);B&&(F.diagnostics={runnable:oe,programLog:ee,vertexShader:{log:K,prefix:S},fragmentShader:{log:J,prefix:_}})}i.deleteShader(z),i.deleteShader(D),L=new nh(i,M),C=jC(i,M)}let L;this.getUniforms=function(){return L===void 0&&O(this),L};let C;this.getAttributes=function(){return C===void 0&&O(this),C};let R=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return R===!1&&(R=i.getProgramParameter(M,VC)),R},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=GC++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=z,this.fragmentShader=D,this}let lR=0;class cR{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),a=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(a)===!1&&(l.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new uR(e),t.set(e,n)),n}}class uR{constructor(e){this.id=lR++,this.code=e,this.usedTimes=0}}function hR(s,e,t,n,i,a,l){const c=new Io,h=new cR,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,R,F,ee,K){const J=ee.fog,oe=K.geometry,B=C.isMeshStandardMaterial?ee.environment:null,Q=(C.isMeshStandardMaterial?t:e).get(C.envMap||B),Y=Q&&Q.mapping===Fo?Q.image.height:null,le=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const he=oe.morphAttributes.position||oe.morphAttributes.normal||oe.morphAttributes.color,xe=he!==void 0?he.length:0;let Ae=0;oe.morphAttributes.position!==void 0&&(Ae=1),oe.morphAttributes.normal!==void 0&&(Ae=2),oe.morphAttributes.color!==void 0&&(Ae=3);let Ze,se,Se,De;if(le){const Bt=as[le];Ze=Bt.vertexShader,se=Bt.fragmentShader}else Ze=C.vertexShader,se=C.fragmentShader,h.update(C),Se=h.getVertexShaderID(C),De=h.getFragmentShaderID(C);const Ue=s.getRenderTarget(),je=s.state.buffers.depth.getReversed(),mt=K.isInstancedMesh===!0,ft=K.isBatchedMesh===!0,Tt=!!C.map,Me=!!C.matcap,Ne=!!Q,W=!!C.aoMap,nt=!!C.lightMap,Re=!!C.bumpMap,Ge=!!C.normalMap,ze=!!C.displacementMap,ut=!!C.emissiveMap,He=!!C.metalnessMap,H=!!C.roughnessMap,N=C.anisotropy>0,re=C.clearcoat>0,ve=C.dispersion>0,be=C.iridescence>0,_e=C.sheen>0,it=C.transmission>0,Ve=N&&!!C.anisotropyMap,qe=re&&!!C.clearcoatMap,Ut=re&&!!C.clearcoatNormalMap,Le=re&&!!C.clearcoatRoughnessMap,et=be&&!!C.iridescenceMap,st=be&&!!C.iridescenceThicknessMap,tt=_e&&!!C.sheenColorMap,Ke=_e&&!!C.sheenRoughnessMap,Mt=!!C.specularMap,lt=!!C.specularColorMap,gt=!!C.specularIntensityMap,$=it&&!!C.transmissionMap,de=it&&!!C.thicknessMap,pe=!!C.gradientMap,Ee=!!C.alphaMap,ke=C.alphaTest>0,Xe=!!C.alphaHash,xt=!!C.extensions;let Kt=Ss;C.toneMapped&&(Ue===null||Ue.isXRRenderTarget===!0)&&(Kt=s.toneMapping);const fn={shaderID:le,shaderType:C.type,shaderName:C.name,vertexShader:Ze,fragmentShader:se,defines:C.defines,customVertexShaderID:Se,customFragmentShaderID:De,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:ft,batchingColor:ft&&K._colorsTexture!==null,instancing:mt,instancingColor:mt&&K.instanceColor!==null,instancingMorph:mt&&K.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Ue===null?s.outputColorSpace:Ue.isXRRenderTarget===!0?Ue.texture.colorSpace:cs,alphaToCoverage:!!C.alphaToCoverage,map:Tt,matcap:Me,envMap:Ne,envMapMode:Ne&&Q.mapping,envMapCubeUVHeight:Y,aoMap:W,lightMap:nt,bumpMap:Re,normalMap:Ge,displacementMap:g&&ze,emissiveMap:ut,normalMapObjectSpace:Ge&&C.normalMapType===Cx,normalMapTangentSpace:Ge&&C.normalMapType===wr,metalnessMap:He,roughnessMap:H,anisotropy:N,anisotropyMap:Ve,clearcoat:re,clearcoatMap:qe,clearcoatNormalMap:Ut,clearcoatRoughnessMap:Le,dispersion:ve,iridescence:be,iridescenceMap:et,iridescenceThicknessMap:st,sheen:_e,sheenColorMap:tt,sheenRoughnessMap:Ke,specularMap:Mt,specularColorMap:lt,specularIntensityMap:gt,transmission:it,transmissionMap:$,thicknessMap:de,gradientMap:pe,opaque:C.transparent===!1&&C.blending===_a&&C.alphaToCoverage===!1,alphaMap:Ee,alphaTest:ke,alphaHash:Xe,combine:C.combine,mapUv:Tt&&M(C.map.channel),aoMapUv:W&&M(C.aoMap.channel),lightMapUv:nt&&M(C.lightMap.channel),bumpMapUv:Re&&M(C.bumpMap.channel),normalMapUv:Ge&&M(C.normalMap.channel),displacementMapUv:ze&&M(C.displacementMap.channel),emissiveMapUv:ut&&M(C.emissiveMap.channel),metalnessMapUv:He&&M(C.metalnessMap.channel),roughnessMapUv:H&&M(C.roughnessMap.channel),anisotropyMapUv:Ve&&M(C.anisotropyMap.channel),clearcoatMapUv:qe&&M(C.clearcoatMap.channel),clearcoatNormalMapUv:Ut&&M(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Le&&M(C.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&M(C.iridescenceMap.channel),iridescenceThicknessMapUv:st&&M(C.iridescenceThicknessMap.channel),sheenColorMapUv:tt&&M(C.sheenColorMap.channel),sheenRoughnessMapUv:Ke&&M(C.sheenRoughnessMap.channel),specularMapUv:Mt&&M(C.specularMap.channel),specularColorMapUv:lt&&M(C.specularColorMap.channel),specularIntensityMapUv:gt&&M(C.specularIntensityMap.channel),transmissionMapUv:$&&M(C.transmissionMap.channel),thicknessMapUv:de&&M(C.thicknessMap.channel),alphaMapUv:Ee&&M(C.alphaMap.channel),vertexTangents:!!oe.attributes.tangent&&(Ge||N),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!oe.attributes.color&&oe.attributes.color.itemSize===4,pointsUvs:K.isPoints===!0&&!!oe.attributes.uv&&(Tt||Ee),fog:!!J,useFog:C.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:je,skinning:K.isSkinnedMesh===!0,morphTargets:oe.morphAttributes.position!==void 0,morphNormals:oe.morphAttributes.normal!==void 0,morphColors:oe.morphAttributes.color!==void 0,morphTargetsCount:xe,morphTextureStride:Ae,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&F.length>0,shadowMapType:s.shadowMap.type,toneMapping:Kt,decodeVideoTexture:Tt&&C.map.isVideoTexture===!0&&Ft.getTransfer(C.map.colorSpace)===Qt,decodeVideoTextureEmissive:ut&&C.emissiveMap.isVideoTexture===!0&&Ft.getTransfer(C.emissiveMap.colorSpace)===Qt,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===os,flipSided:C.side===ei,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:xt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(xt&&C.extensions.multiDraw===!0||ft)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return fn.vertexUv1s=f.has(1),fn.vertexUv2s=f.has(2),fn.vertexUv3s=f.has(3),f.clear(),fn}function _(C){const R=[];if(C.shaderID?R.push(C.shaderID):(R.push(C.customVertexShaderID),R.push(C.customFragmentShaderID)),C.defines!==void 0)for(const F in C.defines)R.push(F),R.push(C.defines[F]);return C.isRawShaderMaterial===!1&&(b(R,C),A(R,C),R.push(s.outputColorSpace)),R.push(C.customProgramCacheKey),R.join()}function b(C,R){C.push(R.precision),C.push(R.outputColorSpace),C.push(R.envMapMode),C.push(R.envMapCubeUVHeight),C.push(R.mapUv),C.push(R.alphaMapUv),C.push(R.lightMapUv),C.push(R.aoMapUv),C.push(R.bumpMapUv),C.push(R.normalMapUv),C.push(R.displacementMapUv),C.push(R.emissiveMapUv),C.push(R.metalnessMapUv),C.push(R.roughnessMapUv),C.push(R.anisotropyMapUv),C.push(R.clearcoatMapUv),C.push(R.clearcoatNormalMapUv),C.push(R.clearcoatRoughnessMapUv),C.push(R.iridescenceMapUv),C.push(R.iridescenceThicknessMapUv),C.push(R.sheenColorMapUv),C.push(R.sheenRoughnessMapUv),C.push(R.specularMapUv),C.push(R.specularColorMapUv),C.push(R.specularIntensityMapUv),C.push(R.transmissionMapUv),C.push(R.thicknessMapUv),C.push(R.combine),C.push(R.fogExp2),C.push(R.sizeAttenuation),C.push(R.morphTargetsCount),C.push(R.morphAttributeCount),C.push(R.numDirLights),C.push(R.numPointLights),C.push(R.numSpotLights),C.push(R.numSpotLightMaps),C.push(R.numHemiLights),C.push(R.numRectAreaLights),C.push(R.numDirLightShadows),C.push(R.numPointLightShadows),C.push(R.numSpotLightShadows),C.push(R.numSpotLightShadowsWithMaps),C.push(R.numLightProbes),C.push(R.shadowMapType),C.push(R.toneMapping),C.push(R.numClippingPlanes),C.push(R.numClipIntersection),C.push(R.depthPacking)}function A(C,R){c.disableAll(),R.supportsVertexTextures&&c.enable(0),R.instancing&&c.enable(1),R.instancingColor&&c.enable(2),R.instancingMorph&&c.enable(3),R.matcap&&c.enable(4),R.envMap&&c.enable(5),R.normalMapObjectSpace&&c.enable(6),R.normalMapTangentSpace&&c.enable(7),R.clearcoat&&c.enable(8),R.iridescence&&c.enable(9),R.alphaTest&&c.enable(10),R.vertexColors&&c.enable(11),R.vertexAlphas&&c.enable(12),R.vertexUv1s&&c.enable(13),R.vertexUv2s&&c.enable(14),R.vertexUv3s&&c.enable(15),R.vertexTangents&&c.enable(16),R.anisotropy&&c.enable(17),R.alphaHash&&c.enable(18),R.batching&&c.enable(19),R.dispersion&&c.enable(20),R.batchingColor&&c.enable(21),C.push(c.mask),c.disableAll(),R.fog&&c.enable(0),R.useFog&&c.enable(1),R.flatShading&&c.enable(2),R.logarithmicDepthBuffer&&c.enable(3),R.reverseDepthBuffer&&c.enable(4),R.skinning&&c.enable(5),R.morphTargets&&c.enable(6),R.morphNormals&&c.enable(7),R.morphColors&&c.enable(8),R.premultipliedAlpha&&c.enable(9),R.shadowMapEnabled&&c.enable(10),R.doubleSided&&c.enable(11),R.flipSided&&c.enable(12),R.useDepthPacking&&c.enable(13),R.dithering&&c.enable(14),R.transmission&&c.enable(15),R.sheen&&c.enable(16),R.opaque&&c.enable(17),R.pointsUvs&&c.enable(18),R.decodeVideoTexture&&c.enable(19),R.decodeVideoTextureEmissive&&c.enable(20),R.alphaToCoverage&&c.enable(21),C.push(c.mask)}function T(C){const R=x[C.type];let F;if(R){const ee=as[R];F=Gx.clone(ee.uniforms)}else F=C.uniforms;return F}function z(C,R){let F;for(let ee=0,K=p.length;ee<K;ee++){const J=p[ee];if(J.cacheKey===R){F=J,++F.usedTimes;break}}return F===void 0&&(F=new oR(s,R,C,a),p.push(F)),F}function D(C){if(--C.usedTimes===0){const R=p.indexOf(C);p[R]=p[p.length-1],p.pop(),C.destroy()}}function O(C){h.remove(C)}function L(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:T,acquireProgram:z,releaseProgram:D,releaseShaderCache:O,programs:p,dispose:L}}function fR(){let s=new WeakMap;function e(l){return s.has(l)}function t(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function a(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:a}}function dR(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function C_(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function R_(){const s=[];let e=0;const t=[],n=[],i=[];function a(){e=0,t.length=0,n.length=0,i.length=0}function l(m,g,v,x,M,S){let _=s[e];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:M,group:S},s[e]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=M,_.group=S),e++,_}function c(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function h(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function f(m,g){t.length>1&&t.sort(m||dR),n.length>1&&n.sort(g||C_),i.length>1&&i.sort(g||C_)}function p(){for(let m=e,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:a,push:c,unshift:h,finish:p,sort:f}}function pR(){let s=new WeakMap;function e(n,i){const a=s.get(n);let l;return a===void 0?(l=new R_,s.set(n,[l])):i>=a.length?(l=new R_,a.push(l)):l=a[i],l}function t(){s=new WeakMap}return{get:e,dispose:t}}function mR(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new G,color:new $e};break;case"SpotLight":t={position:new G,direction:new G,color:new $e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new G,color:new $e,distance:0,decay:0};break;case"HemisphereLight":t={direction:new G,skyColor:new $e,groundColor:new $e};break;case"RectAreaLight":t={color:new $e,position:new G,halfWidth:new G,halfHeight:new G};break}return s[e.id]=t,t}}}function gR(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let vR=0;function _R(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function yR(s){const e=new mR,t=gR(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new G);const i=new G,a=new _t,l=new _t;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,M=0,S=0,_=0,b=0,A=0,T=0,z=0,D=0,O=0;f.sort(_R);for(let C=0,R=f.length;C<R;C++){const F=f[C],ee=F.color,K=F.intensity,J=F.distance,oe=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)p+=ee.r*K,m+=ee.g*K,g+=ee.b*K;else if(F.isLightProbe){for(let B=0;B<9;B++)n.probe[B].addScaledVector(F.sh.coefficients[B],K);O++}else if(F.isDirectionalLight){const B=e.get(F);if(B.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const Q=F.shadow,Y=t.get(F);Y.shadowIntensity=Q.intensity,Y.shadowBias=Q.bias,Y.shadowNormalBias=Q.normalBias,Y.shadowRadius=Q.radius,Y.shadowMapSize=Q.mapSize,n.directionalShadow[v]=Y,n.directionalShadowMap[v]=oe,n.directionalShadowMatrix[v]=F.shadow.matrix,b++}n.directional[v]=B,v++}else if(F.isSpotLight){const B=e.get(F);B.position.setFromMatrixPosition(F.matrixWorld),B.color.copy(ee).multiplyScalar(K),B.distance=J,B.coneCos=Math.cos(F.angle),B.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),B.decay=F.decay,n.spot[M]=B;const Q=F.shadow;if(F.map&&(n.spotLightMap[z]=F.map,z++,Q.updateMatrices(F),F.castShadow&&D++),n.spotLightMatrix[M]=Q.matrix,F.castShadow){const Y=t.get(F);Y.shadowIntensity=Q.intensity,Y.shadowBias=Q.bias,Y.shadowNormalBias=Q.normalBias,Y.shadowRadius=Q.radius,Y.shadowMapSize=Q.mapSize,n.spotShadow[M]=Y,n.spotShadowMap[M]=oe,T++}M++}else if(F.isRectAreaLight){const B=e.get(F);B.color.copy(ee).multiplyScalar(K),B.halfWidth.set(F.width*.5,0,0),B.halfHeight.set(0,F.height*.5,0),n.rectArea[S]=B,S++}else if(F.isPointLight){const B=e.get(F);if(B.color.copy(F.color).multiplyScalar(F.intensity),B.distance=F.distance,B.decay=F.decay,F.castShadow){const Q=F.shadow,Y=t.get(F);Y.shadowIntensity=Q.intensity,Y.shadowBias=Q.bias,Y.shadowNormalBias=Q.normalBias,Y.shadowRadius=Q.radius,Y.shadowMapSize=Q.mapSize,Y.shadowCameraNear=Q.camera.near,Y.shadowCameraFar=Q.camera.far,n.pointShadow[x]=Y,n.pointShadowMap[x]=oe,n.pointShadowMatrix[x]=F.shadow.matrix,A++}n.point[x]=B,x++}else if(F.isHemisphereLight){const B=e.get(F);B.skyColor.copy(F.color).multiplyScalar(K),B.groundColor.copy(F.groundColor).multiplyScalar(K),n.hemi[_]=B,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=We.LTC_FLOAT_1,n.rectAreaLTC2=We.LTC_FLOAT_2):(n.rectAreaLTC1=We.LTC_HALF_1,n.rectAreaLTC2=We.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const L=n.hash;(L.directionalLength!==v||L.pointLength!==x||L.spotLength!==M||L.rectAreaLength!==S||L.hemiLength!==_||L.numDirectionalShadows!==b||L.numPointShadows!==A||L.numSpotShadows!==T||L.numSpotMaps!==z||L.numLightProbes!==O)&&(n.directional.length=v,n.spot.length=M,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=T+z-D,n.spotLightMap.length=z,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=O,L.directionalLength=v,L.pointLength=x,L.spotLength=M,L.rectAreaLength=S,L.hemiLength=_,L.numDirectionalShadows=b,L.numPointShadows=A,L.numSpotShadows=T,L.numSpotMaps=z,L.numLightProbes=O,n.version=vR++)}function h(f,p){let m=0,g=0,v=0,x=0,M=0;const S=p.matrixWorldInverse;for(let _=0,b=f.length;_<b;_++){const A=f[_];if(A.isDirectionalLight){const T=n.directional[m];T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),m++}else if(A.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),T.direction.setFromMatrixPosition(A.matrixWorld),i.setFromMatrixPosition(A.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(S),v++}else if(A.isRectAreaLight){const T=n.rectArea[x];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),l.identity(),a.copy(A.matrixWorld),a.premultiply(S),l.extractRotation(a),T.halfWidth.set(A.width*.5,0,0),T.halfHeight.set(0,A.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),x++}else if(A.isPointLight){const T=n.point[g];T.position.setFromMatrixPosition(A.matrixWorld),T.position.applyMatrix4(S),g++}else if(A.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(A.matrixWorld),T.direction.transformDirection(S),M++}}}return{setup:c,setupView:h,state:n}}function U_(s){const e=new yR(s),t=[],n=[];function i(p){f.camera=p,t.length=0,n.length=0}function a(p){t.push(p)}function l(p){n.push(p)}function c(){e.setup(t)}function h(p){e.setupView(t,p)}const f={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:a,pushShadow:l}}function xR(s){let e=new WeakMap;function t(i,a=0){const l=e.get(i);let c;return l===void 0?(c=new U_(s),e.set(i,[c])):a>=l.length?(c=new U_(s),l.push(c)):c=l[a],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Zm extends ni{static get type(){return"MeshDepthMaterial"}constructor(e){super(),this.isMeshDepthMaterial=!0,this.depthPacking=Ax,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Km extends ni{static get type(){return"MeshDistanceMaterial"}constructor(e){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const SR=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,MR=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ER(s,e,t){let n=new mc;const i=new Te,a=new Te,l=new kt,c=new Zm({depthPacking:wx}),h=new Km,f={},p=t.maxTextureSize,m={[Ks]:ei,[ei]:Ks,[os]:os},g=new Mi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Te},radius:{value:4}},vertexShader:SR,fragmentShader:MR}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new Rt;x.setAttribute("position",new an(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new _n(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=jh;let _=this.type;this.render=function(D,O,L){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),R=s.getActiveCubeFace(),F=s.getActiveMipmapLevel(),ee=s.state;ee.setBlending(xs),ee.buffers.color.setClear(1,1,1,1),ee.buffers.depth.setTest(!0),ee.setScissorTest(!1);const K=_!==rs&&this.type===rs,J=_===rs&&this.type!==rs;for(let oe=0,B=D.length;oe<B;oe++){const Q=D[oe],Y=Q.shadow;if(Y===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(Y.autoUpdate===!1&&Y.needsUpdate===!1)continue;i.copy(Y.mapSize);const le=Y.getFrameExtents();if(i.multiply(le),a.copy(Y.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(a.x=Math.floor(p/le.x),i.x=a.x*le.x,Y.mapSize.x=a.x),i.y>p&&(a.y=Math.floor(p/le.y),i.y=a.y*le.y,Y.mapSize.y=a.y)),Y.map===null||K===!0||J===!0){const xe=this.type!==rs?{minFilter:Wn,magFilter:Wn}:{};Y.map!==null&&Y.map.dispose(),Y.map=new zi(i.x,i.y,xe),Y.map.texture.name=Q.name+".shadowMap",Y.camera.updateProjectionMatrix()}s.setRenderTarget(Y.map),s.clear();const he=Y.getViewportCount();for(let xe=0;xe<he;xe++){const Ae=Y.getViewport(xe);l.set(a.x*Ae.x,a.y*Ae.y,a.x*Ae.z,a.y*Ae.w),ee.viewport(l),Y.updateMatrices(Q,xe),n=Y.getFrustum(),T(O,L,Y.camera,Q,this.type)}Y.isPointLightShadow!==!0&&this.type===rs&&b(Y,L),Y.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,R,F)};function b(D,O){const L=e.update(M);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new zi(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(O,null,L,g,M,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(O,null,L,v,M,null)}function A(D,O,L,C){let R=null;const F=L.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(F!==void 0)R=F;else if(R=L.isPointLight===!0?h:c,s.localClippingEnabled&&O.clipShadows===!0&&Array.isArray(O.clippingPlanes)&&O.clippingPlanes.length!==0||O.displacementMap&&O.displacementScale!==0||O.alphaMap&&O.alphaTest>0||O.map&&O.alphaTest>0){const ee=R.uuid,K=O.uuid;let J=f[ee];J===void 0&&(J={},f[ee]=J);let oe=J[K];oe===void 0&&(oe=R.clone(),J[K]=oe,O.addEventListener("dispose",z)),R=oe}if(R.visible=O.visible,R.wireframe=O.wireframe,C===rs?R.side=O.shadowSide!==null?O.shadowSide:O.side:R.side=O.shadowSide!==null?O.shadowSide:m[O.side],R.alphaMap=O.alphaMap,R.alphaTest=O.alphaTest,R.map=O.map,R.clipShadows=O.clipShadows,R.clippingPlanes=O.clippingPlanes,R.clipIntersection=O.clipIntersection,R.displacementMap=O.displacementMap,R.displacementScale=O.displacementScale,R.displacementBias=O.displacementBias,R.wireframeLinewidth=O.wireframeLinewidth,R.linewidth=O.linewidth,L.isPointLight===!0&&R.isMeshDistanceMaterial===!0){const ee=s.properties.get(R);ee.light=L}return R}function T(D,O,L,C,R){if(D.visible===!1)return;if(D.layers.test(O.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&R===rs)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,D.matrixWorld);const K=e.update(D),J=D.material;if(Array.isArray(J)){const oe=K.groups;for(let B=0,Q=oe.length;B<Q;B++){const Y=oe[B],le=J[Y.materialIndex];if(le&&le.visible){const he=A(D,le,C,R);D.onBeforeShadow(s,D,O,L,K,he,Y),s.renderBufferDirect(L,null,K,he,D,Y),D.onAfterShadow(s,D,O,L,K,he,Y)}}}else if(J.visible){const oe=A(D,J,C,R);D.onBeforeShadow(s,D,O,L,K,oe,null),s.renderBufferDirect(L,null,K,oe,D,null),D.onAfterShadow(s,D,O,L,K,oe,null)}}const ee=D.children;for(let K=0,J=ee.length;K<J;K++)T(ee[K],O,L,C,R)}function z(D){D.target.removeEventListener("dispose",z);for(const L in f){const C=f[L],R=D.target.uuid;R in C&&(C[R].dispose(),delete C[R])}}}const bR={[oh]:lh,[ch]:fh,[uh]:dh,[Ma]:hh,[lh]:oh,[fh]:ch,[dh]:uh,[hh]:Ma};function TR(s,e){function t(){let $=!1;const de=new kt;let pe=null;const Ee=new kt(0,0,0,0);return{setMask:function(ke){pe!==ke&&!$&&(s.colorMask(ke,ke,ke,ke),pe=ke)},setLocked:function(ke){$=ke},setClear:function(ke,Xe,xt,Kt,fn){fn===!0&&(ke*=Kt,Xe*=Kt,xt*=Kt),de.set(ke,Xe,xt,Kt),Ee.equals(de)===!1&&(s.clearColor(ke,Xe,xt,Kt),Ee.copy(de))},reset:function(){$=!1,pe=null,Ee.set(-1,0,0,0)}}}function n(){let $=!1,de=!1,pe=null,Ee=null,ke=null;return{setReversed:function(Xe){if(de!==Xe){const xt=e.get("EXT_clip_control");de?xt.clipControlEXT(xt.LOWER_LEFT_EXT,xt.ZERO_TO_ONE_EXT):xt.clipControlEXT(xt.LOWER_LEFT_EXT,xt.NEGATIVE_ONE_TO_ONE_EXT);const Kt=ke;ke=null,this.setClear(Kt)}de=Xe},getReversed:function(){return de},setTest:function(Xe){Xe?Ue(s.DEPTH_TEST):je(s.DEPTH_TEST)},setMask:function(Xe){pe!==Xe&&!$&&(s.depthMask(Xe),pe=Xe)},setFunc:function(Xe){if(de&&(Xe=bR[Xe]),Ee!==Xe){switch(Xe){case oh:s.depthFunc(s.NEVER);break;case lh:s.depthFunc(s.ALWAYS);break;case ch:s.depthFunc(s.LESS);break;case Ma:s.depthFunc(s.LEQUAL);break;case uh:s.depthFunc(s.EQUAL);break;case hh:s.depthFunc(s.GEQUAL);break;case fh:s.depthFunc(s.GREATER);break;case dh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ee=Xe}},setLocked:function(Xe){$=Xe},setClear:function(Xe){ke!==Xe&&(de&&(Xe=1-Xe),s.clearDepth(Xe),ke=Xe)},reset:function(){$=!1,pe=null,Ee=null,ke=null,de=!1}}}function i(){let $=!1,de=null,pe=null,Ee=null,ke=null,Xe=null,xt=null,Kt=null,fn=null;return{setTest:function(Bt){$||(Bt?Ue(s.STENCIL_TEST):je(s.STENCIL_TEST))},setMask:function(Bt){de!==Bt&&!$&&(s.stencilMask(Bt),de=Bt)},setFunc:function(Bt,Xn,di){(pe!==Bt||Ee!==Xn||ke!==di)&&(s.stencilFunc(Bt,Xn,di),pe=Bt,Ee=Xn,ke=di)},setOp:function(Bt,Xn,di){(Xe!==Bt||xt!==Xn||Kt!==di)&&(s.stencilOp(Bt,Xn,di),Xe=Bt,xt=Xn,Kt=di)},setLocked:function(Bt){$=Bt},setClear:function(Bt){fn!==Bt&&(s.clearStencil(Bt),fn=Bt)},reset:function(){$=!1,de=null,pe=null,Ee=null,ke=null,Xe=null,xt=null,Kt=null,fn=null}}}const a=new t,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,b=null,A=null,T=null,z=null,D=null,O=new $e(0,0,0),L=0,C=!1,R=null,F=null,ee=null,K=null,J=null;const oe=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,Q=0;const Y=s.getParameter(s.VERSION);Y.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(Y)[1]),B=Q>=1):Y.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),B=Q>=2);let le=null,he={};const xe=s.getParameter(s.SCISSOR_BOX),Ae=s.getParameter(s.VIEWPORT),Ze=new kt().fromArray(xe),se=new kt().fromArray(Ae);function Se($,de,pe,Ee){const ke=new Uint8Array(4),Xe=s.createTexture();s.bindTexture($,Xe),s.texParameteri($,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri($,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let xt=0;xt<pe;xt++)$===s.TEXTURE_3D||$===s.TEXTURE_2D_ARRAY?s.texImage3D(de,0,s.RGBA,1,1,Ee,0,s.RGBA,s.UNSIGNED_BYTE,ke):s.texImage2D(de+xt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,ke);return Xe}const De={};De[s.TEXTURE_2D]=Se(s.TEXTURE_2D,s.TEXTURE_2D,1),De[s.TEXTURE_CUBE_MAP]=Se(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),De[s.TEXTURE_2D_ARRAY]=Se(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),De[s.TEXTURE_3D]=Se(s.TEXTURE_3D,s.TEXTURE_3D,1,1),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ue(s.DEPTH_TEST),l.setFunc(Ma),Re(!1),Ge(rm),Ue(s.CULL_FACE),W(xs);function Ue($){p[$]!==!0&&(s.enable($),p[$]=!0)}function je($){p[$]!==!1&&(s.disable($),p[$]=!1)}function mt($,de){return m[$]!==de?(s.bindFramebuffer($,de),m[$]=de,$===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=de),$===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=de),!0):!1}function ft($,de){let pe=v,Ee=!1;if($){pe=g.get(de),pe===void 0&&(pe=[],g.set(de,pe));const ke=$.textures;if(pe.length!==ke.length||pe[0]!==s.COLOR_ATTACHMENT0){for(let Xe=0,xt=ke.length;Xe<xt;Xe++)pe[Xe]=s.COLOR_ATTACHMENT0+Xe;pe.length=ke.length,Ee=!0}}else pe[0]!==s.BACK&&(pe[0]=s.BACK,Ee=!0);Ee&&s.drawBuffers(pe)}function Tt($){return x!==$?(s.useProgram($),x=$,!0):!1}const Me={[Mr]:s.FUNC_ADD,[Jy]:s.FUNC_SUBTRACT,[Qy]:s.FUNC_REVERSE_SUBTRACT};Me[$y]=s.MIN,Me[ex]=s.MAX;const Ne={[tx]:s.ZERO,[nx]:s.ONE,[ix]:s.SRC_COLOR,[rh]:s.SRC_ALPHA,[cx]:s.SRC_ALPHA_SATURATE,[ox]:s.DST_COLOR,[rx]:s.DST_ALPHA,[sx]:s.ONE_MINUS_SRC_COLOR,[ah]:s.ONE_MINUS_SRC_ALPHA,[lx]:s.ONE_MINUS_DST_COLOR,[ax]:s.ONE_MINUS_DST_ALPHA,[ux]:s.CONSTANT_COLOR,[hx]:s.ONE_MINUS_CONSTANT_COLOR,[fx]:s.CONSTANT_ALPHA,[dx]:s.ONE_MINUS_CONSTANT_ALPHA};function W($,de,pe,Ee,ke,Xe,xt,Kt,fn,Bt){if($===xs){M===!0&&(je(s.BLEND),M=!1);return}if(M===!1&&(Ue(s.BLEND),M=!0),$!==jy){if($!==S||Bt!==C){if((_!==Mr||T!==Mr)&&(s.blendEquation(s.FUNC_ADD),_=Mr,T=Mr),Bt)switch($){case _a:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case am:s.blendFunc(s.ONE,s.ONE);break;case om:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case lm:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}else switch($){case _a:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case am:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case om:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case lm:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}b=null,A=null,z=null,D=null,O.set(0,0,0),L=0,S=$,C=Bt}return}ke=ke||de,Xe=Xe||pe,xt=xt||Ee,(de!==_||ke!==T)&&(s.blendEquationSeparate(Me[de],Me[ke]),_=de,T=ke),(pe!==b||Ee!==A||Xe!==z||xt!==D)&&(s.blendFuncSeparate(Ne[pe],Ne[Ee],Ne[Xe],Ne[xt]),b=pe,A=Ee,z=Xe,D=xt),(Kt.equals(O)===!1||fn!==L)&&(s.blendColor(Kt.r,Kt.g,Kt.b,fn),O.copy(Kt),L=fn),S=$,C=!1}function nt($,de){$.side===os?je(s.CULL_FACE):Ue(s.CULL_FACE);let pe=$.side===ei;de&&(pe=!pe),Re(pe),$.blending===_a&&$.transparent===!1?W(xs):W($.blending,$.blendEquation,$.blendSrc,$.blendDst,$.blendEquationAlpha,$.blendSrcAlpha,$.blendDstAlpha,$.blendColor,$.blendAlpha,$.premultipliedAlpha),l.setFunc($.depthFunc),l.setTest($.depthTest),l.setMask($.depthWrite),a.setMask($.colorWrite);const Ee=$.stencilWrite;c.setTest(Ee),Ee&&(c.setMask($.stencilWriteMask),c.setFunc($.stencilFunc,$.stencilRef,$.stencilFuncMask),c.setOp($.stencilFail,$.stencilZFail,$.stencilZPass)),ut($.polygonOffset,$.polygonOffsetFactor,$.polygonOffsetUnits),$.alphaToCoverage===!0?Ue(s.SAMPLE_ALPHA_TO_COVERAGE):je(s.SAMPLE_ALPHA_TO_COVERAGE)}function Re($){R!==$&&($?s.frontFace(s.CW):s.frontFace(s.CCW),R=$)}function Ge($){$!==Yy?(Ue(s.CULL_FACE),$!==F&&($===rm?s.cullFace(s.BACK):$===Zy?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):je(s.CULL_FACE),F=$}function ze($){$!==ee&&(B&&s.lineWidth($),ee=$)}function ut($,de,pe){$?(Ue(s.POLYGON_OFFSET_FILL),(K!==de||J!==pe)&&(s.polygonOffset(de,pe),K=de,J=pe)):je(s.POLYGON_OFFSET_FILL)}function He($){$?Ue(s.SCISSOR_TEST):je(s.SCISSOR_TEST)}function H($){$===void 0&&($=s.TEXTURE0+oe-1),le!==$&&(s.activeTexture($),le=$)}function N($,de,pe){pe===void 0&&(le===null?pe=s.TEXTURE0+oe-1:pe=le);let Ee=he[pe];Ee===void 0&&(Ee={type:void 0,texture:void 0},he[pe]=Ee),(Ee.type!==$||Ee.texture!==de)&&(le!==pe&&(s.activeTexture(pe),le=pe),s.bindTexture($,de||De[$]),Ee.type=$,Ee.texture=de)}function re(){const $=he[le];$!==void 0&&$.type!==void 0&&(s.bindTexture($.type,null),$.type=void 0,$.texture=void 0)}function ve(){try{s.compressedTexImage2D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function be(){try{s.compressedTexImage3D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function _e(){try{s.texSubImage2D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function it(){try{s.texSubImage3D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Ve(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function qe(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Ut(){try{s.texStorage2D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Le(){try{s.texStorage3D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function et(){try{s.texImage2D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function st(){try{s.texImage3D.apply(s,arguments)}catch($){console.error("THREE.WebGLState:",$)}}function tt($){Ze.equals($)===!1&&(s.scissor($.x,$.y,$.z,$.w),Ze.copy($))}function Ke($){se.equals($)===!1&&(s.viewport($.x,$.y,$.z,$.w),se.copy($))}function Mt($,de){let pe=f.get(de);pe===void 0&&(pe=new WeakMap,f.set(de,pe));let Ee=pe.get($);Ee===void 0&&(Ee=s.getUniformBlockIndex(de,$.name),pe.set($,Ee))}function lt($,de){const Ee=f.get(de).get($);h.get(de)!==Ee&&(s.uniformBlockBinding(de,Ee,$.__bindingPointIndex),h.set(de,Ee))}function gt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},le=null,he={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,b=null,A=null,T=null,z=null,D=null,O=new $e(0,0,0),L=0,C=!1,R=null,F=null,ee=null,K=null,J=null,Ze.set(0,0,s.canvas.width,s.canvas.height),se.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Ue,disable:je,bindFramebuffer:mt,drawBuffers:ft,useProgram:Tt,setBlending:W,setMaterial:nt,setFlipSided:Re,setCullFace:Ge,setLineWidth:ze,setPolygonOffset:ut,setScissorTest:He,activeTexture:H,bindTexture:N,unbindTexture:re,compressedTexImage2D:ve,compressedTexImage3D:be,texImage2D:et,texImage3D:st,updateUBOMapping:Mt,uniformBlockBinding:lt,texStorage2D:Ut,texStorage3D:Le,texSubImage2D:_e,texSubImage3D:it,compressedTexSubImage2D:Ve,compressedTexSubImage3D:qe,scissor:tt,viewport:Ke,reset:gt}}function AR(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function wR(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function CR(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function mm(s,e,t,n){const i=RR(n);switch(t){case Lm:return s*e;case Pm:return s*e;case Om:return s*e*2;case hc:return s*e/i.components*i.byteLength;case fc:return s*e/i.components*i.byteLength;case Bm:return s*e*2/i.components*i.byteLength;case tf:return s*e*2/i.components*i.byteLength;case Im:return s*e*3/i.components*i.byteLength;case Tn:return s*e*4/i.components*i.byteLength;case nf:return s*e*4/i.components*i.byteLength;case Ll:case Il:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case Pl:case Ol:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case mh:case vh:return Math.max(s,16)*Math.max(e,8)/4;case ph:case gh:return Math.max(s,8)*Math.max(e,8)/2;case _h:case yh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case xh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Sh:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Mh:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Eh:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case bh:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Th:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Ah:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case wh:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Ch:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Rh:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Uh:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Dh:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Nh:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Lh:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Ih:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case Bl:case Ph:case Oh:return Math.ceil(s/4)*Math.ceil(e/4)*16;case zm:case Bh:return Math.ceil(s/4)*Math.ceil(e/4)*8;case zh:case Fh:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function RR(s){switch(s){case Si:case Jh:return{byteLength:1,components:1};case No:case Qh:case Fn:return{byteLength:2,components:1};case $h:case ef:return{byteLength:2,components:4};case bs:case uc:case vn:return{byteLength:4,components:1};case Nm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}const UR={contain:AR,cover:wR,fill:CR,getByteLength:mm};function DR(s,e,t,n,i,a,l){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new Te,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(H,N){return v?new OffscreenCanvas(H,N):jl("canvas")}function M(H,N,re){let ve=1;const be=He(H);if((be.width>re||be.height>re)&&(ve=re/Math.max(be.width,be.height)),ve<1)if(typeof HTMLImageElement<"u"&&H instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&H instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&H instanceof ImageBitmap||typeof VideoFrame<"u"&&H instanceof VideoFrame){const _e=Math.floor(ve*be.width),it=Math.floor(ve*be.height);m===void 0&&(m=x(_e,it));const Ve=N?x(_e,it):m;return Ve.width=_e,Ve.height=it,Ve.getContext("2d").drawImage(H,0,0,_e,it),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+be.width+"x"+be.height+") to ("+_e+"x"+it+")."),Ve}else return"data"in H&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+be.width+"x"+be.height+")."),H;return H}function S(H){return H.generateMipmaps}function _(H){s.generateMipmap(H)}function b(H){return H.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:H.isWebGL3DRenderTarget?s.TEXTURE_3D:H.isWebGLArrayRenderTarget||H.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function A(H,N,re,ve,be=!1){if(H!==null){if(s[H]!==void 0)return s[H];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+H+"'")}let _e=N;if(N===s.RED&&(re===s.FLOAT&&(_e=s.R32F),re===s.HALF_FLOAT&&(_e=s.R16F),re===s.UNSIGNED_BYTE&&(_e=s.R8)),N===s.RED_INTEGER&&(re===s.UNSIGNED_BYTE&&(_e=s.R8UI),re===s.UNSIGNED_SHORT&&(_e=s.R16UI),re===s.UNSIGNED_INT&&(_e=s.R32UI),re===s.BYTE&&(_e=s.R8I),re===s.SHORT&&(_e=s.R16I),re===s.INT&&(_e=s.R32I)),N===s.RG&&(re===s.FLOAT&&(_e=s.RG32F),re===s.HALF_FLOAT&&(_e=s.RG16F),re===s.UNSIGNED_BYTE&&(_e=s.RG8)),N===s.RG_INTEGER&&(re===s.UNSIGNED_BYTE&&(_e=s.RG8UI),re===s.UNSIGNED_SHORT&&(_e=s.RG16UI),re===s.UNSIGNED_INT&&(_e=s.RG32UI),re===s.BYTE&&(_e=s.RG8I),re===s.SHORT&&(_e=s.RG16I),re===s.INT&&(_e=s.RG32I)),N===s.RGB_INTEGER&&(re===s.UNSIGNED_BYTE&&(_e=s.RGB8UI),re===s.UNSIGNED_SHORT&&(_e=s.RGB16UI),re===s.UNSIGNED_INT&&(_e=s.RGB32UI),re===s.BYTE&&(_e=s.RGB8I),re===s.SHORT&&(_e=s.RGB16I),re===s.INT&&(_e=s.RGB32I)),N===s.RGBA_INTEGER&&(re===s.UNSIGNED_BYTE&&(_e=s.RGBA8UI),re===s.UNSIGNED_SHORT&&(_e=s.RGBA16UI),re===s.UNSIGNED_INT&&(_e=s.RGBA32UI),re===s.BYTE&&(_e=s.RGBA8I),re===s.SHORT&&(_e=s.RGBA16I),re===s.INT&&(_e=s.RGBA32I)),N===s.RGB&&re===s.UNSIGNED_INT_5_9_9_9_REV&&(_e=s.RGB9_E5),N===s.RGBA){const it=be?dc:Ft.getTransfer(ve);re===s.FLOAT&&(_e=s.RGBA32F),re===s.HALF_FLOAT&&(_e=s.RGBA16F),re===s.UNSIGNED_BYTE&&(_e=it===Qt?s.SRGB8_ALPHA8:s.RGBA8),re===s.UNSIGNED_SHORT_4_4_4_4&&(_e=s.RGBA4),re===s.UNSIGNED_SHORT_5_5_5_1&&(_e=s.RGB5_A1)}return(_e===s.R16F||_e===s.R32F||_e===s.RG16F||_e===s.RG32F||_e===s.RGBA16F||_e===s.RGBA32F)&&e.get("EXT_color_buffer_float"),_e}function T(H,N){let re;return H?N===null||N===bs||N===Ea?re=s.DEPTH24_STENCIL8:N===vn?re=s.DEPTH32F_STENCIL8:N===No&&(re=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):N===null||N===bs||N===Ea?re=s.DEPTH_COMPONENT24:N===vn?re=s.DEPTH_COMPONENT32F:N===No&&(re=s.DEPTH_COMPONENT16),re}function z(H,N){return S(H)===!0||H.isFramebufferTexture&&H.minFilter!==Wn&&H.minFilter!==$t?Math.log2(Math.max(N.width,N.height))+1:H.mipmaps!==void 0&&H.mipmaps.length>0?H.mipmaps.length:H.isCompressedTexture&&Array.isArray(H.image)?N.mipmaps.length:1}function D(H){const N=H.target;N.removeEventListener("dispose",D),L(N),N.isVideoTexture&&p.delete(N)}function O(H){const N=H.target;N.removeEventListener("dispose",O),R(N)}function L(H){const N=n.get(H);if(N.__webglInit===void 0)return;const re=H.source,ve=g.get(re);if(ve){const be=ve[N.__cacheKey];be.usedTimes--,be.usedTimes===0&&C(H),Object.keys(ve).length===0&&g.delete(re)}n.remove(H)}function C(H){const N=n.get(H);s.deleteTexture(N.__webglTexture);const re=H.source,ve=g.get(re);delete ve[N.__cacheKey],l.memory.textures--}function R(H){const N=n.get(H);if(H.depthTexture&&(H.depthTexture.dispose(),n.remove(H.depthTexture)),H.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++){if(Array.isArray(N.__webglFramebuffer[ve]))for(let be=0;be<N.__webglFramebuffer[ve].length;be++)s.deleteFramebuffer(N.__webglFramebuffer[ve][be]);else s.deleteFramebuffer(N.__webglFramebuffer[ve]);N.__webglDepthbuffer&&s.deleteRenderbuffer(N.__webglDepthbuffer[ve])}else{if(Array.isArray(N.__webglFramebuffer))for(let ve=0;ve<N.__webglFramebuffer.length;ve++)s.deleteFramebuffer(N.__webglFramebuffer[ve]);else s.deleteFramebuffer(N.__webglFramebuffer);if(N.__webglDepthbuffer&&s.deleteRenderbuffer(N.__webglDepthbuffer),N.__webglMultisampledFramebuffer&&s.deleteFramebuffer(N.__webglMultisampledFramebuffer),N.__webglColorRenderbuffer)for(let ve=0;ve<N.__webglColorRenderbuffer.length;ve++)N.__webglColorRenderbuffer[ve]&&s.deleteRenderbuffer(N.__webglColorRenderbuffer[ve]);N.__webglDepthRenderbuffer&&s.deleteRenderbuffer(N.__webglDepthRenderbuffer)}const re=H.textures;for(let ve=0,be=re.length;ve<be;ve++){const _e=n.get(re[ve]);_e.__webglTexture&&(s.deleteTexture(_e.__webglTexture),l.memory.textures--),n.remove(re[ve])}n.remove(H)}let F=0;function ee(){F=0}function K(){const H=F;return H>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+H+" texture units while this GPU supports only "+i.maxTextures),F+=1,H}function J(H){const N=[];return N.push(H.wrapS),N.push(H.wrapT),N.push(H.wrapR||0),N.push(H.magFilter),N.push(H.minFilter),N.push(H.anisotropy),N.push(H.internalFormat),N.push(H.format),N.push(H.type),N.push(H.generateMipmaps),N.push(H.premultiplyAlpha),N.push(H.flipY),N.push(H.unpackAlignment),N.push(H.colorSpace),N.join()}function oe(H,N){const re=n.get(H);if(H.isVideoTexture&&ze(H),H.isRenderTargetTexture===!1&&H.version>0&&re.__version!==H.version){const ve=H.image;if(ve===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ve.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{se(re,H,N);return}}t.bindTexture(s.TEXTURE_2D,re.__webglTexture,s.TEXTURE0+N)}function B(H,N){const re=n.get(H);if(H.version>0&&re.__version!==H.version){se(re,H,N);return}t.bindTexture(s.TEXTURE_2D_ARRAY,re.__webglTexture,s.TEXTURE0+N)}function Q(H,N){const re=n.get(H);if(H.version>0&&re.__version!==H.version){se(re,H,N);return}t.bindTexture(s.TEXTURE_3D,re.__webglTexture,s.TEXTURE0+N)}function Y(H,N){const re=n.get(H);if(H.version>0&&re.__version!==H.version){Se(re,H,N);return}t.bindTexture(s.TEXTURE_CUBE_MAP,re.__webglTexture,s.TEXTURE0+N)}const le={[Wl]:s.REPEAT,[Rn]:s.CLAMP_TO_EDGE,[Xl]:s.MIRRORED_REPEAT},he={[Wn]:s.NEAREST,[Dm]:s.NEAREST_MIPMAP_NEAREST,[bo]:s.NEAREST_MIPMAP_LINEAR,[$t]:s.LINEAR,[Nl]:s.LINEAR_MIPMAP_NEAREST,[_s]:s.LINEAR_MIPMAP_LINEAR},xe={[Rx]:s.NEVER,[Px]:s.ALWAYS,[Ux]:s.LESS,[Hm]:s.LEQUAL,[Dx]:s.EQUAL,[Ix]:s.GEQUAL,[Nx]:s.GREATER,[Lx]:s.NOTEQUAL};function Ae(H,N){if(N.type===vn&&e.has("OES_texture_float_linear")===!1&&(N.magFilter===$t||N.magFilter===Nl||N.magFilter===bo||N.magFilter===_s||N.minFilter===$t||N.minFilter===Nl||N.minFilter===bo||N.minFilter===_s)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(H,s.TEXTURE_WRAP_S,le[N.wrapS]),s.texParameteri(H,s.TEXTURE_WRAP_T,le[N.wrapT]),(H===s.TEXTURE_3D||H===s.TEXTURE_2D_ARRAY)&&s.texParameteri(H,s.TEXTURE_WRAP_R,le[N.wrapR]),s.texParameteri(H,s.TEXTURE_MAG_FILTER,he[N.magFilter]),s.texParameteri(H,s.TEXTURE_MIN_FILTER,he[N.minFilter]),N.compareFunction&&(s.texParameteri(H,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(H,s.TEXTURE_COMPARE_FUNC,xe[N.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(N.magFilter===Wn||N.minFilter!==bo&&N.minFilter!==_s||N.type===vn&&e.has("OES_texture_float_linear")===!1)return;if(N.anisotropy>1||n.get(N).__currentAnisotropy){const re=e.get("EXT_texture_filter_anisotropic");s.texParameterf(H,re.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(N.anisotropy,i.getMaxAnisotropy())),n.get(N).__currentAnisotropy=N.anisotropy}}}function Ze(H,N){let re=!1;H.__webglInit===void 0&&(H.__webglInit=!0,N.addEventListener("dispose",D));const ve=N.source;let be=g.get(ve);be===void 0&&(be={},g.set(ve,be));const _e=J(N);if(_e!==H.__cacheKey){be[_e]===void 0&&(be[_e]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,re=!0),be[_e].usedTimes++;const it=be[H.__cacheKey];it!==void 0&&(be[H.__cacheKey].usedTimes--,it.usedTimes===0&&C(N)),H.__cacheKey=_e,H.__webglTexture=be[_e].texture}return re}function se(H,N,re){let ve=s.TEXTURE_2D;(N.isDataArrayTexture||N.isCompressedArrayTexture)&&(ve=s.TEXTURE_2D_ARRAY),N.isData3DTexture&&(ve=s.TEXTURE_3D);const be=Ze(H,N),_e=N.source;t.bindTexture(ve,H.__webglTexture,s.TEXTURE0+re);const it=n.get(_e);if(_e.version!==it.__version||be===!0){t.activeTexture(s.TEXTURE0+re);const Ve=Ft.getPrimaries(Ft.workingColorSpace),qe=N.colorSpace===Xs?null:Ft.getPrimaries(N.colorSpace),Ut=N.colorSpace===Xs||Ve===qe?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,N.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,N.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,N.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ut);let Le=M(N.image,!1,i.maxTextureSize);Le=ut(N,Le);const et=a.convert(N.format,N.colorSpace),st=a.convert(N.type);let tt=A(N.internalFormat,et,st,N.colorSpace,N.isVideoTexture);Ae(ve,N);let Ke;const Mt=N.mipmaps,lt=N.isVideoTexture!==!0,gt=it.__version===void 0||be===!0,$=_e.dataReady,de=z(N,Le);if(N.isDepthTexture)tt=T(N.format===ba,N.type),gt&&(lt?t.texStorage2D(s.TEXTURE_2D,1,tt,Le.width,Le.height):t.texImage2D(s.TEXTURE_2D,0,tt,Le.width,Le.height,0,et,st,null));else if(N.isDataTexture)if(Mt.length>0){lt&&gt&&t.texStorage2D(s.TEXTURE_2D,de,tt,Mt[0].width,Mt[0].height);for(let pe=0,Ee=Mt.length;pe<Ee;pe++)Ke=Mt[pe],lt?$&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,Ke.width,Ke.height,et,st,Ke.data):t.texImage2D(s.TEXTURE_2D,pe,tt,Ke.width,Ke.height,0,et,st,Ke.data);N.generateMipmaps=!1}else lt?(gt&&t.texStorage2D(s.TEXTURE_2D,de,tt,Le.width,Le.height),$&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Le.width,Le.height,et,st,Le.data)):t.texImage2D(s.TEXTURE_2D,0,tt,Le.width,Le.height,0,et,st,Le.data);else if(N.isCompressedTexture)if(N.isCompressedArrayTexture){lt&&gt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,de,tt,Mt[0].width,Mt[0].height,Le.depth);for(let pe=0,Ee=Mt.length;pe<Ee;pe++)if(Ke=Mt[pe],N.format!==Tn)if(et!==null)if(lt){if($)if(N.layerUpdates.size>0){const ke=mm(Ke.width,Ke.height,N.format,N.type);for(const Xe of N.layerUpdates){const xt=Ke.data.subarray(Xe*ke/Ke.data.BYTES_PER_ELEMENT,(Xe+1)*ke/Ke.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,Xe,Ke.width,Ke.height,1,et,xt)}N.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,0,Ke.width,Ke.height,Le.depth,et,Ke.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,pe,tt,Ke.width,Ke.height,Le.depth,0,Ke.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else lt?$&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,pe,0,0,0,Ke.width,Ke.height,Le.depth,et,st,Ke.data):t.texImage3D(s.TEXTURE_2D_ARRAY,pe,tt,Ke.width,Ke.height,Le.depth,0,et,st,Ke.data)}else{lt&&gt&&t.texStorage2D(s.TEXTURE_2D,de,tt,Mt[0].width,Mt[0].height);for(let pe=0,Ee=Mt.length;pe<Ee;pe++)Ke=Mt[pe],N.format!==Tn?et!==null?lt?$&&t.compressedTexSubImage2D(s.TEXTURE_2D,pe,0,0,Ke.width,Ke.height,et,Ke.data):t.compressedTexImage2D(s.TEXTURE_2D,pe,tt,Ke.width,Ke.height,0,Ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):lt?$&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,Ke.width,Ke.height,et,st,Ke.data):t.texImage2D(s.TEXTURE_2D,pe,tt,Ke.width,Ke.height,0,et,st,Ke.data)}else if(N.isDataArrayTexture)if(lt){if(gt&&t.texStorage3D(s.TEXTURE_2D_ARRAY,de,tt,Le.width,Le.height,Le.depth),$)if(N.layerUpdates.size>0){const pe=mm(Le.width,Le.height,N.format,N.type);for(const Ee of N.layerUpdates){const ke=Le.data.subarray(Ee*pe/Le.data.BYTES_PER_ELEMENT,(Ee+1)*pe/Le.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Ee,Le.width,Le.height,1,et,st,ke)}N.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Le.width,Le.height,Le.depth,et,st,Le.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,tt,Le.width,Le.height,Le.depth,0,et,st,Le.data);else if(N.isData3DTexture)lt?(gt&&t.texStorage3D(s.TEXTURE_3D,de,tt,Le.width,Le.height,Le.depth),$&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Le.width,Le.height,Le.depth,et,st,Le.data)):t.texImage3D(s.TEXTURE_3D,0,tt,Le.width,Le.height,Le.depth,0,et,st,Le.data);else if(N.isFramebufferTexture){if(gt)if(lt)t.texStorage2D(s.TEXTURE_2D,de,tt,Le.width,Le.height);else{let pe=Le.width,Ee=Le.height;for(let ke=0;ke<de;ke++)t.texImage2D(s.TEXTURE_2D,ke,tt,pe,Ee,0,et,st,null),pe>>=1,Ee>>=1}}else if(Mt.length>0){if(lt&&gt){const pe=He(Mt[0]);t.texStorage2D(s.TEXTURE_2D,de,tt,pe.width,pe.height)}for(let pe=0,Ee=Mt.length;pe<Ee;pe++)Ke=Mt[pe],lt?$&&t.texSubImage2D(s.TEXTURE_2D,pe,0,0,et,st,Ke):t.texImage2D(s.TEXTURE_2D,pe,tt,et,st,Ke);N.generateMipmaps=!1}else if(lt){if(gt){const pe=He(Le);t.texStorage2D(s.TEXTURE_2D,de,tt,pe.width,pe.height)}$&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,et,st,Le)}else t.texImage2D(s.TEXTURE_2D,0,tt,et,st,Le);S(N)&&_(ve),it.__version=_e.version,N.onUpdate&&N.onUpdate(N)}H.__version=N.version}function Se(H,N,re){if(N.image.length!==6)return;const ve=Ze(H,N),be=N.source;t.bindTexture(s.TEXTURE_CUBE_MAP,H.__webglTexture,s.TEXTURE0+re);const _e=n.get(be);if(be.version!==_e.__version||ve===!0){t.activeTexture(s.TEXTURE0+re);const it=Ft.getPrimaries(Ft.workingColorSpace),Ve=N.colorSpace===Xs?null:Ft.getPrimaries(N.colorSpace),qe=N.colorSpace===Xs||it===Ve?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,N.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,N.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,N.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);const Ut=N.isCompressedTexture||N.image[0].isCompressedTexture,Le=N.image[0]&&N.image[0].isDataTexture,et=[];for(let Ee=0;Ee<6;Ee++)!Ut&&!Le?et[Ee]=M(N.image[Ee],!0,i.maxCubemapSize):et[Ee]=Le?N.image[Ee].image:N.image[Ee],et[Ee]=ut(N,et[Ee]);const st=et[0],tt=a.convert(N.format,N.colorSpace),Ke=a.convert(N.type),Mt=A(N.internalFormat,tt,Ke,N.colorSpace),lt=N.isVideoTexture!==!0,gt=_e.__version===void 0||ve===!0,$=be.dataReady;let de=z(N,st);Ae(s.TEXTURE_CUBE_MAP,N);let pe;if(Ut){lt&&gt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,de,Mt,st.width,st.height);for(let Ee=0;Ee<6;Ee++){pe=et[Ee].mipmaps;for(let ke=0;ke<pe.length;ke++){const Xe=pe[ke];N.format!==Tn?tt!==null?lt?$&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke,0,0,Xe.width,Xe.height,tt,Xe.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke,Mt,Xe.width,Xe.height,0,Xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):lt?$&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke,0,0,Xe.width,Xe.height,tt,Ke,Xe.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke,Mt,Xe.width,Xe.height,0,tt,Ke,Xe.data)}}}else{if(pe=N.mipmaps,lt&&gt){pe.length>0&&de++;const Ee=He(et[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,de,Mt,Ee.width,Ee.height)}for(let Ee=0;Ee<6;Ee++)if(Le){lt?$&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,0,0,0,et[Ee].width,et[Ee].height,tt,Ke,et[Ee].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,0,Mt,et[Ee].width,et[Ee].height,0,tt,Ke,et[Ee].data);for(let ke=0;ke<pe.length;ke++){const xt=pe[ke].image[Ee].image;lt?$&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke+1,0,0,xt.width,xt.height,tt,Ke,xt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke+1,Mt,xt.width,xt.height,0,tt,Ke,xt.data)}}else{lt?$&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,0,0,0,tt,Ke,et[Ee]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,0,Mt,tt,Ke,et[Ee]);for(let ke=0;ke<pe.length;ke++){const Xe=pe[ke];lt?$&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke+1,0,0,tt,Ke,Xe.image[Ee]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Ee,ke+1,Mt,tt,Ke,Xe.image[Ee])}}}S(N)&&_(s.TEXTURE_CUBE_MAP),_e.__version=be.version,N.onUpdate&&N.onUpdate(N)}H.__version=N.version}function De(H,N,re,ve,be,_e){const it=a.convert(re.format,re.colorSpace),Ve=a.convert(re.type),qe=A(re.internalFormat,it,Ve,re.colorSpace),Ut=n.get(N),Le=n.get(re);if(Le.__renderTarget=N,!Ut.__hasExternalTextures){const et=Math.max(1,N.width>>_e),st=Math.max(1,N.height>>_e);be===s.TEXTURE_3D||be===s.TEXTURE_2D_ARRAY?t.texImage3D(be,_e,qe,et,st,N.depth,0,it,Ve,null):t.texImage2D(be,_e,qe,et,st,0,it,Ve,null)}t.bindFramebuffer(s.FRAMEBUFFER,H),Ge(N)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ve,be,Le.__webglTexture,0,Re(N)):(be===s.TEXTURE_2D||be>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&be<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ve,be,Le.__webglTexture,_e),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ue(H,N,re){if(s.bindRenderbuffer(s.RENDERBUFFER,H),N.depthBuffer){const ve=N.depthTexture,be=ve&&ve.isDepthTexture?ve.type:null,_e=T(N.stencilBuffer,be),it=N.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ve=Re(N);Ge(N)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ve,_e,N.width,N.height):re?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ve,_e,N.width,N.height):s.renderbufferStorage(s.RENDERBUFFER,_e,N.width,N.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,it,s.RENDERBUFFER,H)}else{const ve=N.textures;for(let be=0;be<ve.length;be++){const _e=ve[be],it=a.convert(_e.format,_e.colorSpace),Ve=a.convert(_e.type),qe=A(_e.internalFormat,it,Ve,_e.colorSpace),Ut=Re(N);re&&Ge(N)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Ut,qe,N.width,N.height):Ge(N)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ut,qe,N.width,N.height):s.renderbufferStorage(s.RENDERBUFFER,qe,N.width,N.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function je(H,N){if(N&&N.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,H),!(N.depthTexture&&N.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ve=n.get(N.depthTexture);ve.__renderTarget=N,(!ve.__webglTexture||N.depthTexture.image.width!==N.width||N.depthTexture.image.height!==N.height)&&(N.depthTexture.image.width=N.width,N.depthTexture.image.height=N.height,N.depthTexture.needsUpdate=!0),oe(N.depthTexture,0);const be=ve.__webglTexture,_e=Re(N);if(N.depthTexture.format===ya)Ge(N)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,be,0,_e):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,be,0);else if(N.depthTexture.format===ba)Ge(N)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,be,0,_e):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,be,0);else throw new Error("Unknown depthTexture format")}function mt(H){const N=n.get(H),re=H.isWebGLCubeRenderTarget===!0;if(N.__boundDepthTexture!==H.depthTexture){const ve=H.depthTexture;if(N.__depthDisposeCallback&&N.__depthDisposeCallback(),ve){const be=()=>{delete N.__boundDepthTexture,delete N.__depthDisposeCallback,ve.removeEventListener("dispose",be)};ve.addEventListener("dispose",be),N.__depthDisposeCallback=be}N.__boundDepthTexture=ve}if(H.depthTexture&&!N.__autoAllocateDepthBuffer){if(re)throw new Error("target.depthTexture not supported in Cube render targets");je(N.__webglFramebuffer,H)}else if(re){N.__webglDepthbuffer=[];for(let ve=0;ve<6;ve++)if(t.bindFramebuffer(s.FRAMEBUFFER,N.__webglFramebuffer[ve]),N.__webglDepthbuffer[ve]===void 0)N.__webglDepthbuffer[ve]=s.createRenderbuffer(),Ue(N.__webglDepthbuffer[ve],H,!1);else{const be=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,_e=N.__webglDepthbuffer[ve];s.bindRenderbuffer(s.RENDERBUFFER,_e),s.framebufferRenderbuffer(s.FRAMEBUFFER,be,s.RENDERBUFFER,_e)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,N.__webglFramebuffer),N.__webglDepthbuffer===void 0)N.__webglDepthbuffer=s.createRenderbuffer(),Ue(N.__webglDepthbuffer,H,!1);else{const ve=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,be=N.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,be),s.framebufferRenderbuffer(s.FRAMEBUFFER,ve,s.RENDERBUFFER,be)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function ft(H,N,re){const ve=n.get(H);N!==void 0&&De(ve.__webglFramebuffer,H,H.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),re!==void 0&&mt(H)}function Tt(H){const N=H.texture,re=n.get(H),ve=n.get(N);H.addEventListener("dispose",O);const be=H.textures,_e=H.isWebGLCubeRenderTarget===!0,it=be.length>1;if(it||(ve.__webglTexture===void 0&&(ve.__webglTexture=s.createTexture()),ve.__version=N.version,l.memory.textures++),_e){re.__webglFramebuffer=[];for(let Ve=0;Ve<6;Ve++)if(N.mipmaps&&N.mipmaps.length>0){re.__webglFramebuffer[Ve]=[];for(let qe=0;qe<N.mipmaps.length;qe++)re.__webglFramebuffer[Ve][qe]=s.createFramebuffer()}else re.__webglFramebuffer[Ve]=s.createFramebuffer()}else{if(N.mipmaps&&N.mipmaps.length>0){re.__webglFramebuffer=[];for(let Ve=0;Ve<N.mipmaps.length;Ve++)re.__webglFramebuffer[Ve]=s.createFramebuffer()}else re.__webglFramebuffer=s.createFramebuffer();if(it)for(let Ve=0,qe=be.length;Ve<qe;Ve++){const Ut=n.get(be[Ve]);Ut.__webglTexture===void 0&&(Ut.__webglTexture=s.createTexture(),l.memory.textures++)}if(H.samples>0&&Ge(H)===!1){re.__webglMultisampledFramebuffer=s.createFramebuffer(),re.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,re.__webglMultisampledFramebuffer);for(let Ve=0;Ve<be.length;Ve++){const qe=be[Ve];re.__webglColorRenderbuffer[Ve]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,re.__webglColorRenderbuffer[Ve]);const Ut=a.convert(qe.format,qe.colorSpace),Le=a.convert(qe.type),et=A(qe.internalFormat,Ut,Le,qe.colorSpace,H.isXRRenderTarget===!0),st=Re(H);s.renderbufferStorageMultisample(s.RENDERBUFFER,st,et,H.width,H.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.RENDERBUFFER,re.__webglColorRenderbuffer[Ve])}s.bindRenderbuffer(s.RENDERBUFFER,null),H.depthBuffer&&(re.__webglDepthRenderbuffer=s.createRenderbuffer(),Ue(re.__webglDepthRenderbuffer,H,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(_e){t.bindTexture(s.TEXTURE_CUBE_MAP,ve.__webglTexture),Ae(s.TEXTURE_CUBE_MAP,N);for(let Ve=0;Ve<6;Ve++)if(N.mipmaps&&N.mipmaps.length>0)for(let qe=0;qe<N.mipmaps.length;qe++)De(re.__webglFramebuffer[Ve][qe],H,N,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,qe);else De(re.__webglFramebuffer[Ve],H,N,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0);S(N)&&_(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(it){for(let Ve=0,qe=be.length;Ve<qe;Ve++){const Ut=be[Ve],Le=n.get(Ut);t.bindTexture(s.TEXTURE_2D,Le.__webglTexture),Ae(s.TEXTURE_2D,Ut),De(re.__webglFramebuffer,H,Ut,s.COLOR_ATTACHMENT0+Ve,s.TEXTURE_2D,0),S(Ut)&&_(s.TEXTURE_2D)}t.unbindTexture()}else{let Ve=s.TEXTURE_2D;if((H.isWebGL3DRenderTarget||H.isWebGLArrayRenderTarget)&&(Ve=H.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Ve,ve.__webglTexture),Ae(Ve,N),N.mipmaps&&N.mipmaps.length>0)for(let qe=0;qe<N.mipmaps.length;qe++)De(re.__webglFramebuffer[qe],H,N,s.COLOR_ATTACHMENT0,Ve,qe);else De(re.__webglFramebuffer,H,N,s.COLOR_ATTACHMENT0,Ve,0);S(N)&&_(Ve),t.unbindTexture()}H.depthBuffer&&mt(H)}function Me(H){const N=H.textures;for(let re=0,ve=N.length;re<ve;re++){const be=N[re];if(S(be)){const _e=b(H),it=n.get(be).__webglTexture;t.bindTexture(_e,it),_(_e),t.unbindTexture()}}}const Ne=[],W=[];function nt(H){if(H.samples>0){if(Ge(H)===!1){const N=H.textures,re=H.width,ve=H.height;let be=s.COLOR_BUFFER_BIT;const _e=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,it=n.get(H),Ve=N.length>1;if(Ve)for(let qe=0;qe<N.length;qe++)t.bindFramebuffer(s.FRAMEBUFFER,it.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+qe,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,it.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+qe,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,it.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,it.__webglFramebuffer);for(let qe=0;qe<N.length;qe++){if(H.resolveDepthBuffer&&(H.depthBuffer&&(be|=s.DEPTH_BUFFER_BIT),H.stencilBuffer&&H.resolveStencilBuffer&&(be|=s.STENCIL_BUFFER_BIT)),Ve){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,it.__webglColorRenderbuffer[qe]);const Ut=n.get(N[qe]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ut,0)}s.blitFramebuffer(0,0,re,ve,0,0,re,ve,be,s.NEAREST),h===!0&&(Ne.length=0,W.length=0,Ne.push(s.COLOR_ATTACHMENT0+qe),H.depthBuffer&&H.resolveDepthBuffer===!1&&(Ne.push(_e),W.push(_e),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,W)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ne))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ve)for(let qe=0;qe<N.length;qe++){t.bindFramebuffer(s.FRAMEBUFFER,it.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+qe,s.RENDERBUFFER,it.__webglColorRenderbuffer[qe]);const Ut=n.get(N[qe]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,it.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+qe,s.TEXTURE_2D,Ut,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,it.__webglMultisampledFramebuffer)}else if(H.depthBuffer&&H.resolveDepthBuffer===!1&&h){const N=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[N])}}}function Re(H){return Math.min(i.maxSamples,H.samples)}function Ge(H){const N=n.get(H);return H.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&N.__useRenderToTexture!==!1}function ze(H){const N=l.render.frame;p.get(H)!==N&&(p.set(H,N),H.update())}function ut(H,N){const re=H.colorSpace,ve=H.format,be=H.type;return H.isCompressedTexture===!0||H.isVideoTexture===!0||re!==cs&&re!==Xs&&(Ft.getTransfer(re)===Qt?(ve!==Tn||be!==Si)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",re)),N}function He(H){return typeof HTMLImageElement<"u"&&H instanceof HTMLImageElement?(f.width=H.naturalWidth||H.width,f.height=H.naturalHeight||H.height):typeof VideoFrame<"u"&&H instanceof VideoFrame?(f.width=H.displayWidth,f.height=H.displayHeight):(f.width=H.width,f.height=H.height),f}this.allocateTextureUnit=K,this.resetTextureUnits=ee,this.setTexture2D=oe,this.setTexture2DArray=B,this.setTexture3D=Q,this.setTextureCube=Y,this.rebindTextures=ft,this.setupRenderTarget=Tt,this.updateRenderTargetMipmap=Me,this.updateMultisampleRenderTarget=nt,this.setupDepthRenderbuffer=mt,this.setupFrameBufferTexture=De,this.useMultisampledRTT=Ge}function Kx(s,e){function t(n,i=Xs){let a;const l=Ft.getTransfer(i);if(n===Si)return s.UNSIGNED_BYTE;if(n===$h)return s.UNSIGNED_SHORT_4_4_4_4;if(n===ef)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Nm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===Jh)return s.BYTE;if(n===Qh)return s.SHORT;if(n===No)return s.UNSIGNED_SHORT;if(n===uc)return s.INT;if(n===bs)return s.UNSIGNED_INT;if(n===vn)return s.FLOAT;if(n===Fn)return s.HALF_FLOAT;if(n===Lm)return s.ALPHA;if(n===Im)return s.RGB;if(n===Tn)return s.RGBA;if(n===Pm)return s.LUMINANCE;if(n===Om)return s.LUMINANCE_ALPHA;if(n===ya)return s.DEPTH_COMPONENT;if(n===ba)return s.DEPTH_STENCIL;if(n===hc)return s.RED;if(n===fc)return s.RED_INTEGER;if(n===Bm)return s.RG;if(n===tf)return s.RG_INTEGER;if(n===nf)return s.RGBA_INTEGER;if(n===Ll||n===Il||n===Pl||n===Ol)if(l===Qt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(n===Ll)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Il)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Pl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ol)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(n===Ll)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Il)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Pl)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ol)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===ph||n===mh||n===gh||n===vh)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(n===ph)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===mh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===gh)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===vh)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===_h||n===yh||n===xh)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(n===_h||n===yh)return l===Qt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===xh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Sh||n===Mh||n===Eh||n===bh||n===Th||n===Ah||n===wh||n===Ch||n===Rh||n===Uh||n===Dh||n===Nh||n===Lh||n===Ih)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(n===Sh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Mh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Eh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===bh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Th)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ah)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===wh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Ch)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Rh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Uh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Dh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Nh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Lh)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ih)return l===Qt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Bl||n===Ph||n===Oh)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(n===Bl)return l===Qt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Ph)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Oh)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===zm||n===Bh||n===zh||n===Fh)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(n===Bl)return a.COMPRESSED_RED_RGTC1_EXT;if(n===Bh)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===zh)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Fh)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Ea?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}class jx extends zn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class wo extends Wt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const NR={type:"move"};class Ep{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new wo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new wo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new G,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new G),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new wo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new G,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new G),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,a=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){l=!0;for(const M of e.hand.values()){const S=t.getJointPose(M,n),_=this._getHandJoint(f,M);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else h!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(h.matrix.fromArray(a.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,a.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(a.linearVelocity)):h.hasLinearVelocity=!1,a.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(a.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&a!==null&&(i=a),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(NR)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=a!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new wo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const LR=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,IR=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class PR{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new rn,a=e.properties.get(i);a.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Mi({vertexShader:LR,fragmentShader:IR,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new _n(new Cr(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class OR extends Ts{constructor(e,t){super();const n=this;let i=null,a=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const M=new PR,S=t.getContextAttributes();let _=null,b=null;const A=[],T=[],z=new Te;let D=null;const O=new zn;O.viewport=new kt;const L=new zn;L.viewport=new kt;const C=[O,L],R=new jx;let F=null,ee=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(se){let Se=A[se];return Se===void 0&&(Se=new Ep,A[se]=Se),Se.getTargetRaySpace()},this.getControllerGrip=function(se){let Se=A[se];return Se===void 0&&(Se=new Ep,A[se]=Se),Se.getGripSpace()},this.getHand=function(se){let Se=A[se];return Se===void 0&&(Se=new Ep,A[se]=Se),Se.getHandSpace()};function K(se){const Se=T.indexOf(se.inputSource);if(Se===-1)return;const De=A[Se];De!==void 0&&(De.update(se.inputSource,se.frame,f||l),De.dispatchEvent({type:se.type,data:se.inputSource}))}function J(){i.removeEventListener("select",K),i.removeEventListener("selectstart",K),i.removeEventListener("selectend",K),i.removeEventListener("squeeze",K),i.removeEventListener("squeezestart",K),i.removeEventListener("squeezeend",K),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",oe);for(let se=0;se<A.length;se++){const Se=T[se];Se!==null&&(T[se]=null,A[se].disconnect(Se))}F=null,ee=null,M.reset(),e.setRenderTarget(_),v=null,g=null,m=null,i=null,b=null,Ze.stop(),n.isPresenting=!1,e.setPixelRatio(D),e.setSize(z.width,z.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(se){a=se,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(se){c=se,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(se){f=se},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(se){if(i=se,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",K),i.addEventListener("selectstart",K),i.addEventListener("selectend",K),i.addEventListener("squeeze",K),i.addEventListener("squeezestart",K),i.addEventListener("squeezeend",K),i.addEventListener("end",J),i.addEventListener("inputsourceschange",oe),S.xrCompatible!==!0&&await t.makeXRCompatible(),D=e.getPixelRatio(),e.getSize(z),i.renderState.layers===void 0){const Se={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:a};v=new XRWebGLLayer(i,t,Se),i.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),b=new zi(v.framebufferWidth,v.framebufferHeight,{format:Tn,type:Si,colorSpace:e.outputColorSpace,stencilBuffer:S.stencil})}else{let Se=null,De=null,Ue=null;S.depth&&(Ue=S.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Se=S.stencil?ba:ya,De=S.stencil?Ea:bs);const je={colorFormat:t.RGBA8,depthFormat:Ue,scaleFactor:a};m=new XRWebGLBinding(i,t),g=m.createProjectionLayer(je),i.updateRenderState({layers:[g]}),e.setPixelRatio(1),e.setSize(g.textureWidth,g.textureHeight,!1),b=new zi(g.textureWidth,g.textureHeight,{format:Tn,type:Si,depthTexture:new Ym(g.textureWidth,g.textureHeight,De,void 0,void 0,void 0,void 0,void 0,void 0,Se),stencilBuffer:S.stencil,colorSpace:e.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),Ze.setContext(i),Ze.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function oe(se){for(let Se=0;Se<se.removed.length;Se++){const De=se.removed[Se],Ue=T.indexOf(De);Ue>=0&&(T[Ue]=null,A[Ue].disconnect(De))}for(let Se=0;Se<se.added.length;Se++){const De=se.added[Se];let Ue=T.indexOf(De);if(Ue===-1){for(let mt=0;mt<A.length;mt++)if(mt>=T.length){T.push(De),Ue=mt;break}else if(T[mt]===null){T[mt]=De,Ue=mt;break}if(Ue===-1)break}const je=A[Ue];je&&je.connect(De)}}const B=new G,Q=new G;function Y(se,Se,De){B.setFromMatrixPosition(Se.matrixWorld),Q.setFromMatrixPosition(De.matrixWorld);const Ue=B.distanceTo(Q),je=Se.projectionMatrix.elements,mt=De.projectionMatrix.elements,ft=je[14]/(je[10]-1),Tt=je[14]/(je[10]+1),Me=(je[9]+1)/je[5],Ne=(je[9]-1)/je[5],W=(je[8]-1)/je[0],nt=(mt[8]+1)/mt[0],Re=ft*W,Ge=ft*nt,ze=Ue/(-W+nt),ut=ze*-W;if(Se.matrixWorld.decompose(se.position,se.quaternion,se.scale),se.translateX(ut),se.translateZ(ze),se.matrixWorld.compose(se.position,se.quaternion,se.scale),se.matrixWorldInverse.copy(se.matrixWorld).invert(),je[10]===-1)se.projectionMatrix.copy(Se.projectionMatrix),se.projectionMatrixInverse.copy(Se.projectionMatrixInverse);else{const He=ft+ze,H=Tt+ze,N=Re-ut,re=Ge+(Ue-ut),ve=Me*Tt/H*He,be=Ne*Tt/H*He;se.projectionMatrix.makePerspective(N,re,ve,be,He,H),se.projectionMatrixInverse.copy(se.projectionMatrix).invert()}}function le(se,Se){Se===null?se.matrixWorld.copy(se.matrix):se.matrixWorld.multiplyMatrices(Se.matrixWorld,se.matrix),se.matrixWorldInverse.copy(se.matrixWorld).invert()}this.updateCamera=function(se){if(i===null)return;let Se=se.near,De=se.far;M.texture!==null&&(M.depthNear>0&&(Se=M.depthNear),M.depthFar>0&&(De=M.depthFar)),R.near=L.near=O.near=Se,R.far=L.far=O.far=De,(F!==R.near||ee!==R.far)&&(i.updateRenderState({depthNear:R.near,depthFar:R.far}),F=R.near,ee=R.far),O.layers.mask=se.layers.mask|2,L.layers.mask=se.layers.mask|4,R.layers.mask=O.layers.mask|L.layers.mask;const Ue=se.parent,je=R.cameras;le(R,Ue);for(let mt=0;mt<je.length;mt++)le(je[mt],Ue);je.length===2?Y(R,O,L):R.projectionMatrix.copy(O.projectionMatrix),he(se,R,Ue)};function he(se,Se,De){De===null?se.matrix.copy(Se.matrixWorld):(se.matrix.copy(De.matrixWorld),se.matrix.invert(),se.matrix.multiply(Se.matrixWorld)),se.matrix.decompose(se.position,se.quaternion,se.scale),se.updateMatrixWorld(!0),se.projectionMatrix.copy(Se.projectionMatrix),se.projectionMatrixInverse.copy(Se.projectionMatrixInverse),se.isPerspectiveCamera&&(se.fov=Lo*2*Math.atan(1/se.projectionMatrix.elements[5]),se.zoom=1)}this.getCamera=function(){return R},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(se){h=se,g!==null&&(g.fixedFoveation=se),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=se)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(R)};let xe=null;function Ae(se,Se){if(p=Se.getViewerPose(f||l),x=Se,p!==null){const De=p.views;v!==null&&(e.setRenderTargetFramebuffer(b,v.framebuffer),e.setRenderTarget(b));let Ue=!1;De.length!==R.cameras.length&&(R.cameras.length=0,Ue=!0);for(let mt=0;mt<De.length;mt++){const ft=De[mt];let Tt=null;if(v!==null)Tt=v.getViewport(ft);else{const Ne=m.getViewSubImage(g,ft);Tt=Ne.viewport,mt===0&&(e.setRenderTargetTextures(b,Ne.colorTexture,g.ignoreDepthValues?void 0:Ne.depthStencilTexture),e.setRenderTarget(b))}let Me=C[mt];Me===void 0&&(Me=new zn,Me.layers.enable(mt),Me.viewport=new kt,C[mt]=Me),Me.matrix.fromArray(ft.transform.matrix),Me.matrix.decompose(Me.position,Me.quaternion,Me.scale),Me.projectionMatrix.fromArray(ft.projectionMatrix),Me.projectionMatrixInverse.copy(Me.projectionMatrix).invert(),Me.viewport.set(Tt.x,Tt.y,Tt.width,Tt.height),mt===0&&(R.matrix.copy(Me.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale)),Ue===!0&&R.cameras.push(Me)}const je=i.enabledFeatures;if(je&&je.includes("depth-sensing")){const mt=m.getDepthInformation(De[0]);mt&&mt.isValid&&mt.texture&&M.init(e,mt,i.renderState)}}for(let De=0;De<A.length;De++){const Ue=T[De],je=A[De];Ue!==null&&je!==void 0&&je.update(Ue,Se,f||l)}xe&&xe(se,Se),Se.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Se}),x=null}const Ze=new Wx;Ze.setAnimationLoop(Ae),this.setAnimationLoop=function(se){xe=se},this.dispose=function(){}}}const ta=new Fi,BR=new _t;function zR(s,e){function t(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,Vx(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,b,A,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?a(S,_):_.isMeshToonMaterial?(a(S,_),m(S,_)):_.isMeshPhongMaterial?(a(S,_),p(S,_)):_.isMeshStandardMaterial?(a(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,T)):_.isMeshMatcapMaterial?(a(S,_),x(S,_)):_.isMeshDepthMaterial?a(S,_):_.isMeshDistanceMaterial?(a(S,_),M(S,_)):_.isMeshNormalMaterial?a(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,b,A):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function a(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,t(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,t(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===ei&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,t(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===ei&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,t(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,t(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const b=e.get(_),A=b.envMap,T=b.envMapRotation;A&&(S.envMap.value=A,ta.copy(T),ta.x*=-1,ta.y*=-1,ta.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(ta.y*=-1,ta.z*=-1),S.envMapRotation.value.setFromMatrix4(BR.makeRotationFromEuler(ta)),S.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,t(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,t(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,b,A){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*b,S.scale.value=A*.5,_.map&&(S.map.value=_.map,t(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,t(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,t(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,b){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===ei&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=b.texture,S.transmissionSamplerSize.value.set(b.width,b.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function M(S,_){const b=e.get(_).light;S.referencePosition.value.setFromMatrixPosition(b.matrixWorld),S.nearDistance.value=b.shadow.camera.near,S.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function FR(s,e,t,n){let i={},a={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(b,A){const T=A.program;n.uniformBlockBinding(b,T)}function f(b,A){let T=i[b.id];T===void 0&&(x(b),T=p(b),i[b.id]=T,b.addEventListener("dispose",S));const z=A.program;n.updateUBOMapping(b,z);const D=e.render.frame;a[b.id]!==D&&(g(b),a[b.id]=D)}function p(b){const A=m();b.__bindingPointIndex=A;const T=s.createBuffer(),z=b.__size,D=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,z,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,A,T),T}function m(){for(let b=0;b<c;b++)if(l.indexOf(b)===-1)return l.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(b){const A=i[b.id],T=b.uniforms,z=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,A);for(let D=0,O=T.length;D<O;D++){const L=Array.isArray(T[D])?T[D]:[T[D]];for(let C=0,R=L.length;C<R;C++){const F=L[C];if(v(F,D,C,z)===!0){const ee=F.__offset,K=Array.isArray(F.value)?F.value:[F.value];let J=0;for(let oe=0;oe<K.length;oe++){const B=K[oe],Q=M(B);typeof B=="number"||typeof B=="boolean"?(F.__data[0]=B,s.bufferSubData(s.UNIFORM_BUFFER,ee+J,F.__data)):B.isMatrix3?(F.__data[0]=B.elements[0],F.__data[1]=B.elements[1],F.__data[2]=B.elements[2],F.__data[3]=0,F.__data[4]=B.elements[3],F.__data[5]=B.elements[4],F.__data[6]=B.elements[5],F.__data[7]=0,F.__data[8]=B.elements[6],F.__data[9]=B.elements[7],F.__data[10]=B.elements[8],F.__data[11]=0):(B.toArray(F.__data,J),J+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,ee,F.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(b,A,T,z){const D=b.value,O=A+"_"+T;if(z[O]===void 0)return typeof D=="number"||typeof D=="boolean"?z[O]=D:z[O]=D.clone(),!0;{const L=z[O];if(typeof D=="number"||typeof D=="boolean"){if(L!==D)return z[O]=D,!0}else if(L.equals(D)===!1)return L.copy(D),!0}return!1}function x(b){const A=b.uniforms;let T=0;const z=16;for(let O=0,L=A.length;O<L;O++){const C=Array.isArray(A[O])?A[O]:[A[O]];for(let R=0,F=C.length;R<F;R++){const ee=C[R],K=Array.isArray(ee.value)?ee.value:[ee.value];for(let J=0,oe=K.length;J<oe;J++){const B=K[J],Q=M(B),Y=T%z,le=Y%Q.boundary,he=Y+le;T+=le,he!==0&&z-he<Q.storage&&(T+=z-he),ee.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),ee.__offset=T,T+=Q.storage}}}const D=T%z;return D>0&&(T+=z-D),b.__size=T,b.__cache={},this}function M(b){const A={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(A.boundary=4,A.storage=4):b.isVector2?(A.boundary=8,A.storage=8):b.isVector3||b.isColor?(A.boundary=16,A.storage=12):b.isVector4?(A.boundary=16,A.storage=16):b.isMatrix3?(A.boundary=48,A.storage=48):b.isMatrix4?(A.boundary=64,A.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),A}function S(b){const A=b.target;A.removeEventListener("dispose",S);const T=l.indexOf(A.__bindingPointIndex);l.splice(T,1),s.deleteBuffer(i[A.id]),delete i[A.id],delete a[A.id]}function _(){for(const b in i)s.deleteBuffer(i[b]);l=[],i={},a={}}return{bind:h,update:f,dispose:_}}class jm{constructor(e={}){const{canvas:t=Bx(),context:n=null,depth:i=!0,stencil:a=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=e;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),M=new Int32Array(4);let S=null,_=null;const b=[],A=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=kn,this.toneMapping=Ss,this.toneMappingExposure=1;const T=this;let z=!1,D=0,O=0,L=null,C=-1,R=null;const F=new kt,ee=new kt;let K=null;const J=new $e(0);let oe=0,B=t.width,Q=t.height,Y=1,le=null,he=null;const xe=new kt(0,0,B,Q),Ae=new kt(0,0,B,Q);let Ze=!1;const se=new mc;let Se=!1,De=!1;const Ue=new _t,je=new _t,mt=new G,ft=new kt,Tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Me=!1;function Ne(){return L===null?Y:1}let W=n;function nt(w,k){return t.getContext(w,k)}try{const w={alpha:!0,depth:i,stencil:a,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${lc}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",ke,!1),t.addEventListener("webglcontextcreationerror",Xe,!1),W===null){const k="webgl2";if(W=nt(k,w),W===null)throw nt(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let Re,Ge,ze,ut,He,H,N,re,ve,be,_e,it,Ve,qe,Ut,Le,et,st,tt,Ke,Mt,lt,gt,$;function de(){Re=new Xw(W),Re.init(),lt=new Kx(W,Re),Ge=new Fw(W,Re,e,lt),ze=new TR(W,Re),Ge.reverseDepthBuffer&&g&&ze.buffers.depth.setReversed(!0),ut=new Zw(W),He=new fR,H=new DR(W,Re,ze,He,Ge,lt,ut),N=new Vw(T),re=new Ww(T),ve=new tT(W),gt=new Bw(W,ve),be=new qw(W,ve,ut,gt),_e=new jw(W,be,ve,ut),tt=new Kw(W,Ge,H),Le=new Hw(He),it=new hR(T,N,re,Re,Ge,gt,Le),Ve=new zR(T,He),qe=new pR,Ut=new xR(Re),st=new Ow(T,N,re,ze,_e,v,h),et=new ER(T,_e,Ge),$=new FR(W,ut,Ge,ze),Ke=new zw(W,Re,ut),Mt=new Yw(W,Re,ut),ut.programs=it.programs,T.capabilities=Ge,T.extensions=Re,T.properties=He,T.renderLists=qe,T.shadowMap=et,T.state=ze,T.info=ut}de();const pe=new OR(T,W);this.xr=pe,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const w=Re.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=Re.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(w){w!==void 0&&(Y=w,this.setSize(B,Q,!1))},this.getSize=function(w){return w.set(B,Q)},this.setSize=function(w,k,X=!0){if(pe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=w,Q=k,t.width=Math.floor(w*Y),t.height=Math.floor(k*Y),X===!0&&(t.style.width=w+"px",t.style.height=k+"px"),this.setViewport(0,0,w,k)},this.getDrawingBufferSize=function(w){return w.set(B*Y,Q*Y).floor()},this.setDrawingBufferSize=function(w,k,X){B=w,Q=k,Y=X,t.width=Math.floor(w*X),t.height=Math.floor(k*X),this.setViewport(0,0,w,k)},this.getCurrentViewport=function(w){return w.copy(F)},this.getViewport=function(w){return w.copy(xe)},this.setViewport=function(w,k,X,q){w.isVector4?xe.set(w.x,w.y,w.z,w.w):xe.set(w,k,X,q),ze.viewport(F.copy(xe).multiplyScalar(Y).round())},this.getScissor=function(w){return w.copy(Ae)},this.setScissor=function(w,k,X,q){w.isVector4?Ae.set(w.x,w.y,w.z,w.w):Ae.set(w,k,X,q),ze.scissor(ee.copy(Ae).multiplyScalar(Y).round())},this.getScissorTest=function(){return Ze},this.setScissorTest=function(w){ze.setScissorTest(Ze=w)},this.setOpaqueSort=function(w){le=w},this.setTransparentSort=function(w){he=w},this.getClearColor=function(w){return w.copy(st.getClearColor())},this.setClearColor=function(){st.setClearColor.apply(st,arguments)},this.getClearAlpha=function(){return st.getClearAlpha()},this.setClearAlpha=function(){st.setClearAlpha.apply(st,arguments)},this.clear=function(w=!0,k=!0,X=!0){let q=0;if(w){let V=!1;if(L!==null){const ne=L.texture.format;V=ne===nf||ne===tf||ne===fc}if(V){const ne=L.texture.type,ae=ne===Si||ne===bs||ne===No||ne===Ea||ne===$h||ne===ef,Be=st.getClearColor(),ge=st.getClearAlpha(),we=Be.r,Pe=Be.g,Ce=Be.b;ae?(x[0]=we,x[1]=Pe,x[2]=Ce,x[3]=ge,W.clearBufferuiv(W.COLOR,0,x)):(M[0]=we,M[1]=Pe,M[2]=Ce,M[3]=ge,W.clearBufferiv(W.COLOR,0,M))}else q|=W.COLOR_BUFFER_BIT}k&&(q|=W.DEPTH_BUFFER_BIT),X&&(q|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",ke,!1),t.removeEventListener("webglcontextcreationerror",Xe,!1),qe.dispose(),Ut.dispose(),He.dispose(),N.dispose(),re.dispose(),_e.dispose(),gt.dispose(),$.dispose(),it.dispose(),pe.dispose(),pe.removeEventListener("sessionstart",Dr),pe.removeEventListener("sessionend",Js),qn.stop()};function Ee(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),z=!0}function ke(){console.log("THREE.WebGLRenderer: Context Restored."),z=!1;const w=ut.autoReset,k=et.enabled,X=et.autoUpdate,q=et.needsUpdate,V=et.type;de(),ut.autoReset=w,et.enabled=k,et.autoUpdate=X,et.needsUpdate=q,et.type=V}function Xe(w){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",w.statusMessage)}function xt(w){const k=w.target;k.removeEventListener("dispose",xt),Kt(k)}function Kt(w){fn(w),He.remove(w)}function fn(w){const k=He.get(w).programs;k!==void 0&&(k.forEach(function(X){it.releaseProgram(X)}),w.isShaderMaterial&&it.releaseShaderCache(w))}this.renderBufferDirect=function(w,k,X,q,V,ne){k===null&&(k=Tt);const ae=V.isMesh&&V.matrixWorld.determinant()<0,Be=j(w,k,X,q,V);ze.setMaterial(q,ae);let ge=X.index,we=1;if(q.wireframe===!0){if(ge=be.getWireframeAttribute(X),ge===void 0)return;we=2}const Pe=X.drawRange,Ce=X.attributes.position;let rt=Pe.start*we,ct=(Pe.start+Pe.count)*we;ne!==null&&(rt=Math.max(rt,ne.start*we),ct=Math.min(ct,(ne.start+ne.count)*we)),ge!==null?(rt=Math.max(rt,0),ct=Math.min(ct,ge.count)):Ce!=null&&(rt=Math.max(rt,0),ct=Math.min(ct,Ce.count));const vt=ct-rt;if(vt<0||vt===1/0)return;gt.setup(V,q,Be,X,ge);let Vt,ot=Ke;if(ge!==null&&(Vt=ve.get(ge),ot=Mt,ot.setIndex(Vt)),V.isMesh)q.wireframe===!0?(ze.setLineWidth(q.wireframeLinewidth*Ne()),ot.setMode(W.LINES)):ot.setMode(W.TRIANGLES);else if(V.isLine){let Je=q.linewidth;Je===void 0&&(Je=1),ze.setLineWidth(Je*Ne()),V.isLineSegments?ot.setMode(W.LINES):V.isLineLoop?ot.setMode(W.LINE_LOOP):ot.setMode(W.LINE_STRIP)}else V.isPoints?ot.setMode(W.POINTS):V.isSprite&&ot.setMode(W.TRIANGLES);if(V.isBatchedMesh)if(V._multiDrawInstances!==null)ot.renderMultiDrawInstances(V._multiDrawStarts,V._multiDrawCounts,V._multiDrawCount,V._multiDrawInstances);else if(Re.get("WEBGL_multi_draw"))ot.renderMultiDraw(V._multiDrawStarts,V._multiDrawCounts,V._multiDrawCount);else{const Je=V._multiDrawStarts,Dt=V._multiDrawCounts,dt=V._multiDrawCount,pn=ge?ve.get(ge).bytesPerElement:1,ii=He.get(q).currentProgram.getUniforms();for(let jt=0;jt<dt;jt++)ii.setValue(W,"_gl_DrawID",jt),ot.render(Je[jt]/pn,Dt[jt])}else if(V.isInstancedMesh)ot.renderInstances(rt,vt,V.count);else if(X.isInstancedBufferGeometry){const Je=X._maxInstanceCount!==void 0?X._maxInstanceCount:1/0,Dt=Math.min(X.instanceCount,Je);ot.renderInstances(rt,vt,Dt)}else ot.render(rt,vt)};function Bt(w,k,X){w.transparent===!0&&w.side===os&&w.forceSinglePass===!1?(w.side=ei,w.needsUpdate=!0,en(w,k,X),w.side=Ks,w.needsUpdate=!0,en(w,k,X),w.side=os):en(w,k,X)}this.compile=function(w,k,X=null){X===null&&(X=w),_=Ut.get(X),_.init(k),A.push(_),X.traverseVisible(function(V){V.isLight&&V.layers.test(k.layers)&&(_.pushLight(V),V.castShadow&&_.pushShadow(V))}),w!==X&&w.traverseVisible(function(V){V.isLight&&V.layers.test(k.layers)&&(_.pushLight(V),V.castShadow&&_.pushShadow(V))}),_.setupLights();const q=new Set;return w.traverse(function(V){if(!(V.isMesh||V.isPoints||V.isLine||V.isSprite))return;const ne=V.material;if(ne)if(Array.isArray(ne))for(let ae=0;ae<ne.length;ae++){const Be=ne[ae];Bt(Be,X,V),q.add(Be)}else Bt(ne,X,V),q.add(ne)}),A.pop(),_=null,q},this.compileAsync=function(w,k,X=null){const q=this.compile(w,k,X);return new Promise(V=>{function ne(){if(q.forEach(function(ae){He.get(ae).currentProgram.isReady()&&q.delete(ae)}),q.size===0){V(w);return}setTimeout(ne,10)}Re.get("KHR_parallel_shader_compile")!==null?ne():setTimeout(ne,10)})};let Xn=null;function di(w){Xn&&Xn(w)}function Dr(){qn.stop()}function Js(){qn.start()}const qn=new Wx;qn.setAnimationLoop(di),typeof self<"u"&&qn.setContext(self),this.setAnimationLoop=function(w){Xn=w,pe.setAnimationLoop(w),w===null?qn.stop():qn.start()},pe.addEventListener("sessionstart",Dr),pe.addEventListener("sessionend",Js),this.render=function(w,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(z===!0)return;if(w.matrixWorldAutoUpdate===!0&&w.updateMatrixWorld(),k.parent===null&&k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),pe.enabled===!0&&pe.isPresenting===!0&&(pe.cameraAutoUpdate===!0&&pe.updateCamera(k),k=pe.getCamera()),w.isScene===!0&&w.onBeforeRender(T,w,k,L),_=Ut.get(w,A.length),_.init(k),A.push(_),je.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),se.setFromProjectionMatrix(je),De=this.localClippingEnabled,Se=Le.init(this.clippingPlanes,De),S=qe.get(w,b.length),S.init(),b.push(S),pe.enabled===!0&&pe.isPresenting===!0){const ne=T.xr.getDepthSensingMesh();ne!==null&&pi(ne,k,-1/0,T.sortObjects)}pi(w,k,0,T.sortObjects),S.finish(),T.sortObjects===!0&&S.sort(le,he),Me=pe.enabled===!1||pe.isPresenting===!1||pe.hasDepthSensing()===!1,Me&&st.addToRenderList(S,w),this.info.render.frame++,Se===!0&&Le.beginShadows();const X=_.state.shadowsArray;et.render(X,w,k),Se===!0&&Le.endShadows(),this.info.autoReset===!0&&this.info.reset();const q=S.opaque,V=S.transmissive;if(_.setupLights(),k.isArrayCamera){const ne=k.cameras;if(V.length>0)for(let ae=0,Be=ne.length;ae<Be;ae++){const ge=ne[ae];Hn(q,V,w,ge)}Me&&st.render(w);for(let ae=0,Be=ne.length;ae<Be;ae++){const ge=ne[ae];ji(S,w,ge,ge.viewport)}}else V.length>0&&Hn(q,V,w,k),Me&&st.render(w),ji(S,w,k);L!==null&&(H.updateMultisampleRenderTarget(L),H.updateRenderTargetMipmap(L)),w.isScene===!0&&w.onAfterRender(T,w,k),gt.resetDefaultState(),C=-1,R=null,A.pop(),A.length>0?(_=A[A.length-1],Se===!0&&Le.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,b.pop(),b.length>0?S=b[b.length-1]:S=null};function pi(w,k,X,q){if(w.visible===!1)return;if(w.layers.test(k.layers)){if(w.isGroup)X=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(k);else if(w.isLight)_.pushLight(w),w.castShadow&&_.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||se.intersectsSprite(w)){q&&ft.setFromMatrixPosition(w.matrixWorld).applyMatrix4(je);const ae=_e.update(w),Be=w.material;Be.visible&&S.push(w,ae,Be,X,ft.z,null)}}else if((w.isMesh||w.isLine||w.isPoints)&&(!w.frustumCulled||se.intersectsObject(w))){const ae=_e.update(w),Be=w.material;if(q&&(w.boundingSphere!==void 0?(w.boundingSphere===null&&w.computeBoundingSphere(),ft.copy(w.boundingSphere.center)):(ae.boundingSphere===null&&ae.computeBoundingSphere(),ft.copy(ae.boundingSphere.center)),ft.applyMatrix4(w.matrixWorld).applyMatrix4(je)),Array.isArray(Be)){const ge=ae.groups;for(let we=0,Pe=ge.length;we<Pe;we++){const Ce=ge[we],rt=Be[Ce.materialIndex];rt&&rt.visible&&S.push(w,ae,rt,X,ft.z,Ce)}}else Be.visible&&S.push(w,ae,Be,X,ft.z,null)}}const ne=w.children;for(let ae=0,Be=ne.length;ae<Be;ae++)pi(ne[ae],k,X,q)}function ji(w,k,X,q){const V=w.opaque,ne=w.transmissive,ae=w.transparent;_.setupLightsView(X),Se===!0&&Le.setGlobalState(T.clippingPlanes,X),q&&ze.viewport(F.copy(q)),V.length>0&&pt(V,k,X),ne.length>0&&pt(ne,k,X),ae.length>0&&pt(ae,k,X),ze.buffers.depth.setTest(!0),ze.buffers.depth.setMask(!0),ze.buffers.color.setMask(!0),ze.setPolygonOffset(!1)}function Hn(w,k,X,q){if((X.isScene===!0?X.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[q.id]===void 0&&(_.state.transmissionRenderTarget[q.id]=new zi(1,1,{generateMipmaps:!0,type:Re.has("EXT_color_buffer_half_float")||Re.has("EXT_color_buffer_float")?Fn:Si,minFilter:_s,samples:4,stencilBuffer:a,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ft.workingColorSpace}));const ne=_.state.transmissionRenderTarget[q.id],ae=q.viewport||F;ne.setSize(ae.z,ae.w);const Be=T.getRenderTarget();T.setRenderTarget(ne),T.getClearColor(J),oe=T.getClearAlpha(),oe<1&&T.setClearColor(16777215,.5),T.clear(),Me&&st.render(X);const ge=T.toneMapping;T.toneMapping=Ss;const we=q.viewport;if(q.viewport!==void 0&&(q.viewport=void 0),_.setupLightsView(q),Se===!0&&Le.setGlobalState(T.clippingPlanes,q),pt(w,X,q),H.updateMultisampleRenderTarget(ne),H.updateRenderTargetMipmap(ne),Re.has("WEBGL_multisampled_render_to_texture")===!1){let Pe=!1;for(let Ce=0,rt=k.length;Ce<rt;Ce++){const ct=k[Ce],vt=ct.object,Vt=ct.geometry,ot=ct.material,Je=ct.group;if(ot.side===os&&vt.layers.test(q.layers)){const Dt=ot.side;ot.side=ei,ot.needsUpdate=!0,fs(vt,X,q,Vt,ot,Je),ot.side=Dt,ot.needsUpdate=!0,Pe=!0}}Pe===!0&&(H.updateMultisampleRenderTarget(ne),H.updateRenderTargetMipmap(ne))}T.setRenderTarget(Be),T.setClearColor(J,oe),we!==void 0&&(q.viewport=we),T.toneMapping=ge}function pt(w,k,X){const q=k.isScene===!0?k.overrideMaterial:null;for(let V=0,ne=w.length;V<ne;V++){const ae=w[V],Be=ae.object,ge=ae.geometry,we=q===null?ae.material:q,Pe=ae.group;Be.layers.test(X.layers)&&fs(Be,k,X,ge,we,Pe)}}function fs(w,k,X,q,V,ne){w.onBeforeRender(T,k,X,q,V,ne),w.modelViewMatrix.multiplyMatrices(X.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),V.onBeforeRender(T,k,X,q,w,ne),V.transparent===!0&&V.side===os&&V.forceSinglePass===!1?(V.side=ei,V.needsUpdate=!0,T.renderBufferDirect(X,k,q,V,w,ne),V.side=Ks,V.needsUpdate=!0,T.renderBufferDirect(X,k,q,V,w,ne),V.side=os):T.renderBufferDirect(X,k,q,V,w,ne),w.onAfterRender(T,k,X,q,V,ne)}function en(w,k,X){k.isScene!==!0&&(k=Tt);const q=He.get(w),V=_.state.lights,ne=_.state.shadowsArray,ae=V.state.version,Be=it.getParameters(w,V.state,ne,k,X),ge=it.getProgramCacheKey(Be);let we=q.programs;q.environment=w.isMeshStandardMaterial?k.environment:null,q.fog=k.fog,q.envMap=(w.isMeshStandardMaterial?re:N).get(w.envMap||q.environment),q.envMapRotation=q.environment!==null&&w.envMap===null?k.environmentRotation:w.envMapRotation,we===void 0&&(w.addEventListener("dispose",xt),we=new Map,q.programs=we);let Pe=we.get(ge);if(Pe!==void 0){if(q.currentProgram===Pe&&q.lightsStateVersion===ae)return P(w,Be),Pe}else Be.uniforms=it.getUniforms(w),w.onBeforeCompile(Be,T),Pe=it.acquireProgram(Be,ge),we.set(ge,Pe),q.uniforms=Be.uniforms;const Ce=q.uniforms;return(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(Ce.clippingPlanes=Le.uniform),P(w,Be),q.needsLights=me(w),q.lightsStateVersion=ae,q.needsLights&&(Ce.ambientLightColor.value=V.state.ambient,Ce.lightProbe.value=V.state.probe,Ce.directionalLights.value=V.state.directional,Ce.directionalLightShadows.value=V.state.directionalShadow,Ce.spotLights.value=V.state.spot,Ce.spotLightShadows.value=V.state.spotShadow,Ce.rectAreaLights.value=V.state.rectArea,Ce.ltc_1.value=V.state.rectAreaLTC1,Ce.ltc_2.value=V.state.rectAreaLTC2,Ce.pointLights.value=V.state.point,Ce.pointLightShadows.value=V.state.pointShadow,Ce.hemisphereLights.value=V.state.hemi,Ce.directionalShadowMap.value=V.state.directionalShadowMap,Ce.directionalShadowMatrix.value=V.state.directionalShadowMatrix,Ce.spotShadowMap.value=V.state.spotShadowMap,Ce.spotLightMatrix.value=V.state.spotLightMatrix,Ce.spotLightMap.value=V.state.spotLightMap,Ce.pointShadowMap.value=V.state.pointShadowMap,Ce.pointShadowMatrix.value=V.state.pointShadowMatrix),q.currentProgram=Pe,q.uniformsList=null,Pe}function U(w){if(w.uniformsList===null){const k=w.currentProgram.getUniforms();w.uniformsList=nh.seqWithValue(k.seq,w.uniforms)}return w.uniformsList}function P(w,k){const X=He.get(w);X.outputColorSpace=k.outputColorSpace,X.batching=k.batching,X.batchingColor=k.batchingColor,X.instancing=k.instancing,X.instancingColor=k.instancingColor,X.instancingMorph=k.instancingMorph,X.skinning=k.skinning,X.morphTargets=k.morphTargets,X.morphNormals=k.morphNormals,X.morphColors=k.morphColors,X.morphTargetsCount=k.morphTargetsCount,X.numClippingPlanes=k.numClippingPlanes,X.numIntersection=k.numClipIntersection,X.vertexAlphas=k.vertexAlphas,X.vertexTangents=k.vertexTangents,X.toneMapping=k.toneMapping}function j(w,k,X,q,V){k.isScene!==!0&&(k=Tt),H.resetTextureUnits();const ne=k.fog,ae=q.isMeshStandardMaterial?k.environment:null,Be=L===null?T.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:cs,ge=(q.isMeshStandardMaterial?re:N).get(q.envMap||ae),we=q.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,Pe=!!X.attributes.tangent&&(!!q.normalMap||q.anisotropy>0),Ce=!!X.morphAttributes.position,rt=!!X.morphAttributes.normal,ct=!!X.morphAttributes.color;let vt=Ss;q.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(vt=T.toneMapping);const Vt=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,ot=Vt!==void 0?Vt.length:0,Je=He.get(q),Dt=_.state.lights;if(Se===!0&&(De===!0||w!==R)){const tn=w===R&&q.id===C;Le.setState(q,w,tn)}let dt=!1;q.version===Je.__version?(Je.needsLights&&Je.lightsStateVersion!==Dt.state.version||Je.outputColorSpace!==Be||V.isBatchedMesh&&Je.batching===!1||!V.isBatchedMesh&&Je.batching===!0||V.isBatchedMesh&&Je.batchingColor===!0&&V.colorTexture===null||V.isBatchedMesh&&Je.batchingColor===!1&&V.colorTexture!==null||V.isInstancedMesh&&Je.instancing===!1||!V.isInstancedMesh&&Je.instancing===!0||V.isSkinnedMesh&&Je.skinning===!1||!V.isSkinnedMesh&&Je.skinning===!0||V.isInstancedMesh&&Je.instancingColor===!0&&V.instanceColor===null||V.isInstancedMesh&&Je.instancingColor===!1&&V.instanceColor!==null||V.isInstancedMesh&&Je.instancingMorph===!0&&V.morphTexture===null||V.isInstancedMesh&&Je.instancingMorph===!1&&V.morphTexture!==null||Je.envMap!==ge||q.fog===!0&&Je.fog!==ne||Je.numClippingPlanes!==void 0&&(Je.numClippingPlanes!==Le.numPlanes||Je.numIntersection!==Le.numIntersection)||Je.vertexAlphas!==we||Je.vertexTangents!==Pe||Je.morphTargets!==Ce||Je.morphNormals!==rt||Je.morphColors!==ct||Je.toneMapping!==vt||Je.morphTargetsCount!==ot)&&(dt=!0):(dt=!0,Je.__version=q.version);let pn=Je.currentProgram;dt===!0&&(pn=en(q,k,V));let ii=!1,jt=!1,zt=!1;const St=pn.getUniforms(),Lt=Je.uniforms;if(ze.useProgram(pn.program)&&(ii=!0,jt=!0,zt=!0),q.id!==C&&(C=q.id,jt=!0),ii||R!==w){ze.buffers.depth.getReversed()?(Ue.copy(w.projectionMatrix),wb(Ue),Cb(Ue),St.setValue(W,"projectionMatrix",Ue)):St.setValue(W,"projectionMatrix",w.projectionMatrix),St.setValue(W,"viewMatrix",w.matrixWorldInverse);const Un=St.map.cameraPosition;Un!==void 0&&Un.setValue(W,mt.setFromMatrixPosition(w.matrixWorld)),Ge.logarithmicDepthBuffer&&St.setValue(W,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&St.setValue(W,"isOrthographic",w.isOrthographicCamera===!0),R!==w&&(R=w,jt=!0,zt=!0)}if(V.isSkinnedMesh){St.setOptional(W,V,"bindMatrix"),St.setOptional(W,V,"bindMatrixInverse");const tn=V.skeleton;tn&&(tn.boneTexture===null&&tn.computeBoneTexture(),St.setValue(W,"boneTexture",tn.boneTexture,H))}V.isBatchedMesh&&(St.setOptional(W,V,"batchingTexture"),St.setValue(W,"batchingTexture",V._matricesTexture,H),St.setOptional(W,V,"batchingIdTexture"),St.setValue(W,"batchingIdTexture",V._indirectTexture,H),St.setOptional(W,V,"batchingColorTexture"),V._colorsTexture!==null&&St.setValue(W,"batchingColorTexture",V._colorsTexture,H));const It=X.morphAttributes;if((It.position!==void 0||It.normal!==void 0||It.color!==void 0)&&tt.update(V,X,pn),(jt||Je.receiveShadow!==V.receiveShadow)&&(Je.receiveShadow=V.receiveShadow,St.setValue(W,"receiveShadow",V.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(Lt.envMap.value=ge,Lt.flipEnvMap.value=ge.isCubeTexture&&ge.isRenderTargetTexture===!1?-1:1),q.isMeshStandardMaterial&&q.envMap===null&&k.environment!==null&&(Lt.envMapIntensity.value=k.environmentIntensity),jt&&(St.setValue(W,"toneMappingExposure",T.toneMappingExposure),Je.needsLights&&ue(Lt,zt),ne&&q.fog===!0&&Ve.refreshFogUniforms(Lt,ne),Ve.refreshMaterialUniforms(Lt,q,Y,Q,_.state.transmissionRenderTarget[w.id]),nh.upload(W,U(Je),Lt,H)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(nh.upload(W,U(Je),Lt,H),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&St.setValue(W,"center",V.center),St.setValue(W,"modelViewMatrix",V.modelViewMatrix),St.setValue(W,"normalMatrix",V.normalMatrix),St.setValue(W,"modelMatrix",V.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const tn=q.uniformsGroups;for(let Un=0,cn=tn.length;Un<cn;Un++){const Ei=tn[Un];$.update(Ei,pn),$.bind(Ei,pn)}}return pn}function ue(w,k){w.ambientLightColor.needsUpdate=k,w.lightProbe.needsUpdate=k,w.directionalLights.needsUpdate=k,w.directionalLightShadows.needsUpdate=k,w.pointLights.needsUpdate=k,w.pointLightShadows.needsUpdate=k,w.spotLights.needsUpdate=k,w.spotLightShadows.needsUpdate=k,w.rectAreaLights.needsUpdate=k,w.hemisphereLights.needsUpdate=k}function me(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return O},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(w,k,X){He.get(w.texture).__webglTexture=k,He.get(w.depthTexture).__webglTexture=X;const q=He.get(w);q.__hasExternalTextures=!0,q.__autoAllocateDepthBuffer=X===void 0,q.__autoAllocateDepthBuffer||Re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(w,k){const X=He.get(w);X.__webglFramebuffer=k,X.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(w,k=0,X=0){L=w,D=k,O=X;let q=!0,V=null,ne=!1,ae=!1;if(w){const ge=He.get(w);if(ge.__useDefaultFramebuffer!==void 0)ze.bindFramebuffer(W.FRAMEBUFFER,null),q=!1;else if(ge.__webglFramebuffer===void 0)H.setupRenderTarget(w);else if(ge.__hasExternalTextures)H.rebindTextures(w,He.get(w.texture).__webglTexture,He.get(w.depthTexture).__webglTexture);else if(w.depthBuffer){const Ce=w.depthTexture;if(ge.__boundDepthTexture!==Ce){if(Ce!==null&&He.has(Ce)&&(w.width!==Ce.image.width||w.height!==Ce.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");H.setupDepthRenderbuffer(w)}}const we=w.texture;(we.isData3DTexture||we.isDataArrayTexture||we.isCompressedArrayTexture)&&(ae=!0);const Pe=He.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(Array.isArray(Pe[k])?V=Pe[k][X]:V=Pe[k],ne=!0):w.samples>0&&H.useMultisampledRTT(w)===!1?V=He.get(w).__webglMultisampledFramebuffer:Array.isArray(Pe)?V=Pe[X]:V=Pe,F.copy(w.viewport),ee.copy(w.scissor),K=w.scissorTest}else F.copy(xe).multiplyScalar(Y).floor(),ee.copy(Ae).multiplyScalar(Y).floor(),K=Ze;if(ze.bindFramebuffer(W.FRAMEBUFFER,V)&&q&&ze.drawBuffers(w,V),ze.viewport(F),ze.scissor(ee),ze.setScissorTest(K),ne){const ge=He.get(w.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+k,ge.__webglTexture,X)}else if(ae){const ge=He.get(w.texture),we=k||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,ge.__webglTexture,X||0,we)}C=-1},this.readRenderTargetPixels=function(w,k,X,q,V,ne,ae){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=He.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&ae!==void 0&&(Be=Be[ae]),Be){ze.bindFramebuffer(W.FRAMEBUFFER,Be);try{const ge=w.texture,we=ge.format,Pe=ge.type;if(!Ge.textureFormatReadable(we)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Ge.textureTypeReadable(Pe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=w.width-q&&X>=0&&X<=w.height-V&&W.readPixels(k,X,q,V,lt.convert(we),lt.convert(Pe),ne)}finally{const ge=L!==null?He.get(L).__webglFramebuffer:null;ze.bindFramebuffer(W.FRAMEBUFFER,ge)}}},this.readRenderTargetPixelsAsync=async function(w,k,X,q,V,ne,ae){if(!(w&&w.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Be=He.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&ae!==void 0&&(Be=Be[ae]),Be){const ge=w.texture,we=ge.format,Pe=ge.type;if(!Ge.textureFormatReadable(we))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Ge.textureTypeReadable(Pe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(k>=0&&k<=w.width-q&&X>=0&&X<=w.height-V){ze.bindFramebuffer(W.FRAMEBUFFER,Be);const Ce=W.createBuffer();W.bindBuffer(W.PIXEL_PACK_BUFFER,Ce),W.bufferData(W.PIXEL_PACK_BUFFER,ne.byteLength,W.STREAM_READ),W.readPixels(k,X,q,V,lt.convert(we),lt.convert(Pe),0);const rt=L!==null?He.get(L).__webglFramebuffer:null;ze.bindFramebuffer(W.FRAMEBUFFER,rt);const ct=W.fenceSync(W.SYNC_GPU_COMMANDS_COMPLETE,0);return W.flush(),await Ab(W,ct,4),W.bindBuffer(W.PIXEL_PACK_BUFFER,Ce),W.getBufferSubData(W.PIXEL_PACK_BUFFER,0,ne),W.deleteBuffer(Ce),W.deleteSync(ct),ne}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(w,k=null,X=0){w.isTexture!==!0&&(Cl("WebGLRenderer: copyFramebufferToTexture function signature has changed."),k=arguments[0]||null,w=arguments[1]);const q=Math.pow(2,-X),V=Math.floor(w.image.width*q),ne=Math.floor(w.image.height*q),ae=k!==null?k.x:0,Be=k!==null?k.y:0;H.setTexture2D(w,0),W.copyTexSubImage2D(W.TEXTURE_2D,X,0,0,ae,Be,V,ne),ze.unbindTexture()},this.copyTextureToTexture=function(w,k,X=null,q=null,V=0){w.isTexture!==!0&&(Cl("WebGLRenderer: copyTextureToTexture function signature has changed."),q=arguments[0]||null,w=arguments[1],k=arguments[2],V=arguments[3]||0,X=null);let ne,ae,Be,ge,we,Pe,Ce,rt,ct;const vt=w.isCompressedTexture?w.mipmaps[V]:w.image;X!==null?(ne=X.max.x-X.min.x,ae=X.max.y-X.min.y,Be=X.isBox3?X.max.z-X.min.z:1,ge=X.min.x,we=X.min.y,Pe=X.isBox3?X.min.z:0):(ne=vt.width,ae=vt.height,Be=vt.depth||1,ge=0,we=0,Pe=0),q!==null?(Ce=q.x,rt=q.y,ct=q.z):(Ce=0,rt=0,ct=0);const Vt=lt.convert(k.format),ot=lt.convert(k.type);let Je;k.isData3DTexture?(H.setTexture3D(k,0),Je=W.TEXTURE_3D):k.isDataArrayTexture||k.isCompressedArrayTexture?(H.setTexture2DArray(k,0),Je=W.TEXTURE_2D_ARRAY):(H.setTexture2D(k,0),Je=W.TEXTURE_2D),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,k.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,k.unpackAlignment);const Dt=W.getParameter(W.UNPACK_ROW_LENGTH),dt=W.getParameter(W.UNPACK_IMAGE_HEIGHT),pn=W.getParameter(W.UNPACK_SKIP_PIXELS),ii=W.getParameter(W.UNPACK_SKIP_ROWS),jt=W.getParameter(W.UNPACK_SKIP_IMAGES);W.pixelStorei(W.UNPACK_ROW_LENGTH,vt.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,vt.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,ge),W.pixelStorei(W.UNPACK_SKIP_ROWS,we),W.pixelStorei(W.UNPACK_SKIP_IMAGES,Pe);const zt=w.isDataArrayTexture||w.isData3DTexture,St=k.isDataArrayTexture||k.isData3DTexture;if(w.isRenderTargetTexture||w.isDepthTexture){const Lt=He.get(w),It=He.get(k),tn=He.get(Lt.__renderTarget),Un=He.get(It.__renderTarget);ze.bindFramebuffer(W.READ_FRAMEBUFFER,tn.__webglFramebuffer),ze.bindFramebuffer(W.DRAW_FRAMEBUFFER,Un.__webglFramebuffer);for(let cn=0;cn<Be;cn++)zt&&W.framebufferTextureLayer(W.READ_FRAMEBUFFER,W.COLOR_ATTACHMENT0,He.get(w).__webglTexture,V,Pe+cn),w.isDepthTexture?(St&&W.framebufferTextureLayer(W.DRAW_FRAMEBUFFER,W.COLOR_ATTACHMENT0,He.get(k).__webglTexture,V,ct+cn),W.blitFramebuffer(ge,we,ne,ae,Ce,rt,ne,ae,W.DEPTH_BUFFER_BIT,W.NEAREST)):St?W.copyTexSubImage3D(Je,V,Ce,rt,ct+cn,ge,we,ne,ae):W.copyTexSubImage2D(Je,V,Ce,rt,ct+cn,ge,we,ne,ae);ze.bindFramebuffer(W.READ_FRAMEBUFFER,null),ze.bindFramebuffer(W.DRAW_FRAMEBUFFER,null)}else St?w.isDataTexture||w.isData3DTexture?W.texSubImage3D(Je,V,Ce,rt,ct,ne,ae,Be,Vt,ot,vt.data):k.isCompressedArrayTexture?W.compressedTexSubImage3D(Je,V,Ce,rt,ct,ne,ae,Be,Vt,vt.data):W.texSubImage3D(Je,V,Ce,rt,ct,ne,ae,Be,Vt,ot,vt):w.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,V,Ce,rt,ne,ae,Vt,ot,vt.data):w.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,V,Ce,rt,vt.width,vt.height,Vt,vt.data):W.texSubImage2D(W.TEXTURE_2D,V,Ce,rt,ne,ae,Vt,ot,vt);W.pixelStorei(W.UNPACK_ROW_LENGTH,Dt),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,dt),W.pixelStorei(W.UNPACK_SKIP_PIXELS,pn),W.pixelStorei(W.UNPACK_SKIP_ROWS,ii),W.pixelStorei(W.UNPACK_SKIP_IMAGES,jt),V===0&&k.generateMipmaps&&W.generateMipmap(Je),ze.unbindTexture()},this.copyTextureToTexture3D=function(w,k,X=null,q=null,V=0){return w.isTexture!==!0&&(Cl("WebGLRenderer: copyTextureToTexture3D function signature has changed."),X=arguments[0]||null,q=arguments[1]||null,w=arguments[2],k=arguments[3],V=arguments[4]||0),Cl('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(w,k,X,q,V)},this.initRenderTarget=function(w){He.get(w).__webglFramebuffer===void 0&&H.setupRenderTarget(w)},this.initTexture=function(w){w.isCubeTexture?H.setTextureCube(w,0):w.isData3DTexture?H.setTexture3D(w,0):w.isDataArrayTexture||w.isCompressedArrayTexture?H.setTexture2DArray(w,0):H.setTexture2D(w,0),ze.unbindTexture()},this.resetState=function(){D=0,O=0,L=null,ze.reset(),gt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ys}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Ft._getDrawingBufferColorSpace(e),t.unpackColorSpace=Ft._getUnpackColorSpace()}}class lf{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new $e(e),this.density=t}clone(){return new lf(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class cf{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new $e(e),this.near=t,this.far=n}clone(){return new cf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class gc extends Wt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Fi,this.environmentIntensity=1,this.environmentRotation=new Fi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class uf{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Zl,this.updateRanges=[],this.version=0,this.uuid=Oi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,a=this.stride;i<a;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ai=new G;class Ta{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.applyMatrix4(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.applyNormalMatrix(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ai.fromBufferAttribute(this,t),ai.transformDirection(e),this.setXYZ(t,ai.x,ai.y,ai.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ci(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=wt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=wt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=wt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=wt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=wt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ci(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ci(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ci(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ci(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,a){return e=e*this.data.stride+this.offset,this.normalized&&(t=wt(t,this.array),n=wt(n,this.array),i=wt(i,this.array),a=wt(a,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[i+a])}return new an(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ta(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[i+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Jm extends ni{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let go;const _l=new G,vo=new G,_o=new G,yo=new Te,yl=new Te,Jx=new _t,Au=new G,xl=new G,wu=new G,D_=new Te,bp=new Te,N_=new Te;class Qx extends Wt{constructor(e=new Jm){if(super(),this.isSprite=!0,this.type="Sprite",go===void 0){go=new Rt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new uf(t,5);go.setIndex([0,1,2,0,2,3]),go.setAttribute("position",new Ta(n,3,0,!1)),go.setAttribute("uv",new Ta(n,2,3,!1))}this.geometry=go,this.material=e,this.center=new Te(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),vo.setFromMatrixScale(this.matrixWorld),Jx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_o.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&vo.multiplyScalar(-_o.z);const n=this.material.rotation;let i,a;n!==0&&(a=Math.cos(n),i=Math.sin(n));const l=this.center;Cu(Au.set(-.5,-.5,0),_o,l,vo,i,a),Cu(xl.set(.5,-.5,0),_o,l,vo,i,a),Cu(wu.set(.5,.5,0),_o,l,vo,i,a),D_.set(0,0),bp.set(1,0),N_.set(1,1);let c=e.ray.intersectTriangle(Au,xl,wu,!1,_l);if(c===null&&(Cu(xl.set(-.5,.5,0),_o,l,vo,i,a),bp.set(0,1),c=e.ray.intersectTriangle(Au,wu,xl,!1,_l),c===null))return;const h=e.ray.origin.distanceTo(_l);h<e.near||h>e.far||t.push({distance:h,point:_l.clone(),uv:yi.getInterpolation(_l,Au,xl,wu,D_,bp,N_,new Te),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Cu(s,e,t,n,i,a){yo.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(yl.x=a*yo.x-i*yo.y,yl.y=i*yo.x+a*yo.y):yl.copy(yo),s.copy(e),s.x+=yl.x,s.y+=yl.y,s.applyMatrix4(Jx)}const Ru=new G,L_=new G;class $x extends Wt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const a=t[n];this.addLevel(a.object.clone(),a.distance,a.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let a;for(a=0;a<i.length&&!(t<i[a].distance);a++);return i.splice(a,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let a=t[n].distance;if(t[n].object.visible&&(a-=a*t[n].hysteresis),e<a)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Ru.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ru);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Ru.setFromMatrixPosition(e.matrixWorld),L_.setFromMatrixPosition(this.matrixWorld);const n=Ru.distanceTo(L_)/e.zoom;t[0].object.visible=!0;let i,a;for(i=1,a=t.length;i<a;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<a;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,a=n.length;i<a;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const I_=new G,P_=new kt,O_=new kt,HR=new G,B_=new _t,Uu=new G,Tp=new ti,z_=new _t,Ap=new Ho;class eS extends _n{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=cm,this.bindMatrix=new _t,this.bindMatrixInverse=new _t,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ui),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Uu),this.boundingBox.expandByPoint(Uu)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new ti),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Uu),this.boundingSphere.expandByPoint(Uu)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Tp.copy(this.boundingSphere),Tp.applyMatrix4(i),e.ray.intersectsSphere(Tp)!==!1&&(z_.copy(i).invert(),Ap.copy(e.ray).applyMatrix4(z_),!(this.boundingBox!==null&&Ap.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Ap)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new kt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===cm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Mx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;P_.fromBufferAttribute(i.attributes.skinIndex,e),O_.fromBufferAttribute(i.attributes.skinWeight,e),I_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let a=0;a<4;a++){const l=O_.getComponent(a);if(l!==0){const c=P_.getComponent(a);B_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(HR.copy(I_).applyMatrix4(B_),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Qm extends Wt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ls extends rn{constructor(e=null,t=1,n=1,i,a,l,c,h,f=Wn,p=Wn,m,g){super(null,l,c,h,f,p,i,a,m,g),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const F_=new _t,VR=new _t;class hf{constructor(e=[],t=[]){this.uuid=Oi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new _t)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new _t;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let a=0,l=e.length;a<l;a++){const c=e[a]?e[a].matrixWorld:VR;F_.multiplyMatrices(c,t[a]),F_.toArray(n,a*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new hf(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ls(t,e,e,Tn,vn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const a=e.bones[n];let l=t[a];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),l=new Qm),this.bones.push(l),this.boneInverses.push(new _t().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,a=t.length;i<a;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Oo extends an{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const xo=new _t,H_=new _t,Du=[],V_=new ui,GR=new _t,Sl=new _n,Ml=new ti;class tS extends _n{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Oo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,GR)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ui),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,xo),V_.copy(e.boundingBox).applyMatrix4(xo),this.boundingBox.union(V_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new ti),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,xo),Ml.copy(e.boundingSphere).applyMatrix4(xo),this.boundingSphere.union(Ml)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,a=n.length+1,l=e*a+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Sl.geometry=this.geometry,Sl.material=this.material,Sl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ml.copy(this.boundingSphere),Ml.applyMatrix4(n),e.ray.intersectsSphere(Ml)!==!1))for(let a=0;a<i;a++){this.getMatrixAt(a,xo),H_.multiplyMatrices(n,xo),Sl.matrixWorld=H_,Sl.raycast(e,Du);for(let l=0,c=Du.length;l<c;l++){const h=Du[l];h.instanceId=a,h.object=this,t.push(h)}Du.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Oo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new ls(new Float32Array(i*this.count),i,this.count,hc,vn));const a=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*e;a[h]=c,a.set(n,h+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function wp(s,e){return s-e}function kR(s,e){return s.z-e.z}function WR(s,e){return e.z-s.z}class XR{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const a=this.pool,l=this.list;this.index>=a.length&&a.push({start:-1,count:-1,z:-1,index:-1});const c=a[this.index];l.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const vi=new _t,qR=new $e(1,1,1),Cp=new mc,Nu=new ui,na=new ti,El=new G,G_=new G,YR=new G,Rp=new XR,$n=new _n,Lu=[];function ZR(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let a=0;a<i;a++)for(let l=0;l<n;l++)e.setComponent(a+t,l,s.getComponent(a,l))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function ia(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class nS extends _n{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new Rt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ls(t,e,e,Tn,vn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new ls(t,e,e,fc,bs);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new ls(t,e,e,Tn,vn);n.colorSpace=Ft.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const a in e.attributes){const l=e.getAttribute(a),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new an(p,h,f);t.setAttribute(a,m)}if(e.getIndex()!==null){const a=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new an(a,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),a=t.getAttribute(n);if(i.itemSize!==a.itemSize||i.normalized!==a.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ui);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const a=t[n].geometryIndex;this.getMatrixAt(n,vi),this.getBoundingBoxAt(a,Nu).applyMatrix4(vi),e.union(Nu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ti);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const a=t[n].geometryIndex;this.getMatrixAt(n,vi),this.getBoundingSphereAt(a,na).applyMatrix4(vi),e.union(na)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(wp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const a=this._matricesTexture;vi.identity().toArray(a.image.data,i*16),a.needsUpdate=!0;const l=this._colorsTexture;return l&&(qR.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},a=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const l=e.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(wp),h=this._availableGeometryIds.shift(),a[h]=i):(h=this._geometryCount,this._geometryCount++,a.push(i)),this.setGeometryAt(h,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,a=n.getIndex(),l=t.getIndex(),c=this._geometryInfo[e];if(i&&l.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const p in n.attributes){const m=t.getAttribute(p),g=n.getAttribute(p);ZR(m,g,h);const v=m.itemSize;for(let x=m.count,M=f;x<M;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let g=0;g<l.count;g++)a.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)a.setX(p+g,h);a.needsUpdate=!0,a.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,a=n.length;i<a;i++)n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?this:(t[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this)}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),a=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(a.index!==null){if(f.indexStart!==t){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=a.index,x=v.array,M=e-m;for(let S=p;S<p+g;S++)x[S]=x[S]+M;v.array.copyWithin(t,p,p+g),v.addUpdateRange(t,g),f.indexStart=t}t+=f.reservedIndexCount}if(f.vertexStart!==e){const{vertexStart:p,reservedVertexCount:m}=f,g=a.attributes;for(const v in g){const x=g[v],{array:M,itemSize:S}=x;M.copyWithin(e*S,p*S,(p+m)*S),x.addUpdateRange(e*S,m*S)}f.vertexStart=e}e+=f.reservedVertexCount,f.start=a.index?f.indexStart:f.vertexStart,this._nextIndexStart=a.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const a=new ui,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),a.expandByPoint(El.fromBufferAttribute(c,p))}i.boundingBox=a}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const a=new ti;this.getBoundingBoxAt(e,Nu),Nu.getCenter(a.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),El.fromBufferAttribute(c,m),h=Math.max(h,a.center.distanceToSquared(El))}a.radius=Math.sqrt(h),i.boundingSphere=a}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture,a=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?this:(t.toArray(a,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?null:t.fromArray(i,e*16)}setColorAt(e,t){this._colorsTexture===null&&this._initColorsTexture();const n=this._colorsTexture,i=this._colorsTexture.image.data,a=this._instanceInfo;return e>=a.length||a[e].active===!1?this:(t.toArray(i,e*4),n.needsUpdate=!0,this)}getColorAt(e,t){const n=this._colorsTexture.image.data,i=this._instanceInfo;return e>=i.length||i[e].active===!1?null:t.fromArray(n,e*4)}setVisibleAt(e,t){const n=this._instanceInfo;return e>=n.length||n[e].active===!1||n[e].visible===t?this:(n[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?!1:t[e].visible}setGeometryIdAt(e,t){const n=this._instanceInfo,i=this._geometryInfo;return e>=n.length||n[e].active===!1||t>=i.length||i[t].active===!1?null:(n[e].geometryIndex=t,this)}getGeometryIdAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?-1:t[e].geometryIndex}getGeometryRangeAt(e,t={}){if(e<0||e>=this._geometryCount)return null;const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(wp);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),a=new Int32Array(e);ia(this._multiDrawCounts,i),ia(this._multiDrawStarts,a),this._multiDrawCounts=i,this._multiDrawStarts=a,this._maxInstanceCount=e;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),ia(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),ia(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),ia(h.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const a=this.geometry;a.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Rt,this._initializeGeometry(a));const l=this.geometry;a.index&&ia(a.index.array,l.index.array);for(const c in a.attributes)ia(a.attributes[c].array,l.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,a=this.matrixWorld,l=this.geometry;$n.material=this.material,$n.geometry.index=l.index,$n.geometry.attributes=l.attributes,$n.geometry.boundingBox===null&&($n.geometry.boundingBox=new ui),$n.geometry.boundingSphere===null&&($n.geometry.boundingSphere=new ti);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];$n.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,$n.matrixWorld).premultiply(a),this.getBoundingBoxAt(f,$n.geometry.boundingBox),this.getBoundingSphereAt(f,$n.geometry.boundingSphere),$n.raycast(e,Lu);for(let m=0,g=Lu.length;m<g;m++){const v=Lu[m];v.object=this,v.batchId=c,t.push(v)}Lu.length=0}$n.material=null,$n.geometry.index=null,$n.geometry.attributes={},$n.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,a){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data;g&&(vi.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Cp.setFromProjectionMatrix(vi,e.coordinateSystem));let M=0;if(this.sortObjects){vi.copy(this.matrixWorld).invert(),El.setFromMatrixPosition(n.matrixWorld).applyMatrix4(vi),G_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(vi);for(let b=0,A=h.length;b<A;b++)if(h[b].visible&&h[b].active){const T=h[b].geometryIndex;this.getMatrixAt(b,vi),this.getBoundingSphereAt(T,na).applyMatrix4(vi);let z=!1;if(g&&(z=!Cp.intersectsSphere(na)),!z){const D=m[T],O=YR.subVectors(na.center,El).dot(G_);Rp.push(D.start,D.count,O,b)}}const S=Rp.list,_=this.customSort;_===null?S.sort(a.transparent?WR:kR):_.call(this,S,n);for(let b=0,A=S.length;b<A;b++){const T=S[b];f[M]=T.start*c,p[M]=T.count,x[M]=T.index,M++}Rp.reset()}else for(let S=0,_=h.length;S<_;S++)if(h[S].visible&&h[S].active){const b=h[S].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(S,vi),this.getBoundingSphereAt(b,na).applyMatrix4(vi),A=!Cp.intersectsSphere(na)),!A){const T=m[b];f[M]=T.start*c,p[M]=T.count,x[M]=S,M++}}v.needsUpdate=!0,this._multiDrawCount=M,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,a,l){this.onBeforeRender(e,null,i,a,l)}}class hi extends ni{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new $e(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Vh=new G,Gh=new G,k_=new _t,bl=new Ho,Iu=new ti,Up=new G,W_=new G;class Ar extends Wt{constructor(e=new Rt,t=new hi){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,a=t.count;i<a;i++)Vh.fromBufferAttribute(t,i-1),Gh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Vh.distanceTo(Gh);e.setAttribute("lineDistance",new at(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,a=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Iu.copy(n.boundingSphere),Iu.applyMatrix4(i),Iu.radius+=a,e.ray.intersectsSphere(Iu)===!1)return;k_.copy(i).invert(),bl.copy(e.ray).applyMatrix4(k_);const c=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=p.getX(M),b=p.getX(M+1),A=Pu(this,e,bl,h,_,b);A&&t.push(A)}if(this.isLineLoop){const M=p.getX(x-1),S=p.getX(v),_=Pu(this,e,bl,h,M,S);_&&t.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=Pu(this,e,bl,h,M,M+1);_&&t.push(_)}if(this.isLineLoop){const M=Pu(this,e,bl,h,x-1,v);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=i.length;a<l;a++){const c=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}}function Pu(s,e,t,n,i,a){const l=s.geometry.attributes.position;if(Vh.fromBufferAttribute(l,i),Gh.fromBufferAttribute(l,a),t.distanceSqToSegment(Vh,Gh,Up,W_)>n)return;Up.applyMatrix4(s.matrixWorld);const h=e.ray.origin.distanceTo(Up);if(!(h<e.near||h>e.far))return{distance:h,point:W_.clone().applyMatrix4(s.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:s}}const X_=new G,q_=new G;class As extends Ar{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,a=t.count;i<a;i+=2)X_.fromBufferAttribute(t,i),q_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+X_.distanceTo(q_);e.setAttribute("lineDistance",new at(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class iS extends Ar{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class $m extends ni{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Y_=new _t,gm=new Ho,Ou=new ti,Bu=new G;class sS extends Wt{constructor(e=new Rt,t=new $m){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,a=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ou.copy(n.boundingSphere),Ou.applyMatrix4(i),Ou.radius+=a,e.ray.intersectsSphere(Ou)===!1)return;Y_.copy(i).invert(),gm.copy(e.ray).applyMatrix4(Y_);const c=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,M=v;x<M;x++){const S=f.getX(x);Bu.fromBufferAttribute(m,S),Z_(Bu,S,h,i,e,t,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,M=v;x<M;x++)Bu.fromBufferAttribute(m,x),Z_(Bu,x,h,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,l=i.length;a<l;a++){const c=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=a}}}}}function Z_(s,e,t,n,i,a,l){const c=gm.distanceSqToPoint(s);if(c<t){const h=new G;gm.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;a.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:e,face:null,faceIndex:null,barycoord:null,object:l})}}class KR extends rn{constructor(e,t,n,i,a,l,c,h,f){super(e,t,n,i,a,l,c,h,f),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:$t,this.magFilter=a!==void 0?a:$t,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class jR extends rn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Wn,this.minFilter=Wn,this.generateMipmaps=!1,this.needsUpdate=!0}}class ff extends rn{constructor(e,t,n,i,a,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,a,m,g),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class JR extends ff{constructor(e,t,n,i,a,l){super(e,t,n,a,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Rn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class QR extends ff{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Es),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class $R extends rn{constructor(e,t,n,i,a,l,c,h,f){super(e,t,n,i,a,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class us{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),a=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),a+=n.distanceTo(i),t.push(a),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const a=n.length;let l;t?l=t:l=e*n[a-1];let c=0,h=a-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(a-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(a-1)}getTangent(e,t){let i=e-1e-4,a=e+1e-4;i<0&&(i=0),a>1&&(a=1);const l=this.getPoint(i),c=this.getPoint(a),h=t||(l.isVector2?new Te:new G);return h.copy(c).sub(l).normalize(),h}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new G,i=[],a=[],l=[],c=new G,h=new _t;for(let v=0;v<=e;v++){const x=v/e;i[v]=this.getTangentAt(x,new G)}a[0]=new G,l[0]=new G;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),a[0].crossVectors(i[0],c),l[0].crossVectors(i[0],a[0]);for(let v=1;v<=e;v++){if(a[v]=a[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(En(i[v-1].dot(i[v]),-1,1));a[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],a[v])}if(t===!0){let v=Math.acos(En(a[0].dot(a[e]),-1,1));v/=e,i[0].dot(c.crossVectors(a[0],a[e]))>0&&(v=-v);for(let x=1;x<=e;x++)a[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],a[x])}return{tangents:i,normals:a,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class df extends us{constructor(e=0,t=0,n=1,i=1,a=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=a,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(e,t=new Te){const n=t,i=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const l=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=i;for(;a>i;)a-=i;a<Number.EPSILON&&(l?a=0:a=i),this.aClockwise===!0&&!l&&(a===i?a=-i:a=a-i);const c=this.aStartAngle+e*a;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class rS extends df{constructor(e,t,n,i,a,l){super(e,t,n,n,i,a,l),this.isArcCurve=!0,this.type="ArcCurve"}}function eg(){let s=0,e=0,t=0,n=0;function i(a,l,c,h){s=a,e=c,t=-3*a+3*l-2*c-h,n=2*a-2*l+c+h}return{initCatmullRom:function(a,l,c,h,f){i(l,c,f*(c-a),f*(h-l))},initNonuniformCatmullRom:function(a,l,c,h,f,p,m){let g=(l-a)/f-(c-a)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(a){const l=a*a,c=l*a;return s+e*a+t*l+n*c}}}const zu=new G,Dp=new eg,Np=new eg,Lp=new eg;class aS extends us{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new G){const n=t,i=this.points,a=i.length,l=(a-(this.closed?0:1))*e;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/a)+1)*a:h===0&&c===a-1&&(c=a-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%a]:(zu.subVectors(i[0],i[1]).add(i[0]),f=zu);const m=i[c%a],g=i[(c+1)%a];if(this.closed||c+2<a?p=i[(c+2)%a]:(zu.subVectors(i[a-1],i[a-2]).add(i[a-1]),p=zu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),M=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);M<1e-4&&(M=1),x<1e-4&&(x=M),S<1e-4&&(S=M),Dp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,M,S),Np.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,M,S),Lp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,M,S)}else this.curveType==="catmullrom"&&(Dp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),Np.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Lp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(Dp.calc(h),Np.calc(h),Lp.calc(h)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new G().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function K_(s,e,t,n,i){const a=(n-e)*.5,l=(i-t)*.5,c=s*s,h=s*c;return(2*t-2*n+a+l)*h+(-3*t+3*n-2*a-l)*c+a*s+t}function e2(s,e){const t=1-s;return t*t*e}function t2(s,e){return 2*(1-s)*s*e}function n2(s,e){return s*s*e}function Fl(s,e,t,n){return e2(s,e)+t2(s,t)+n2(s,n)}function i2(s,e){const t=1-s;return t*t*t*e}function s2(s,e){const t=1-s;return 3*t*t*s*e}function r2(s,e){return 3*(1-s)*s*s*e}function a2(s,e){return s*s*s*e}function Hl(s,e,t,n,i){return i2(s,e)+s2(s,t)+r2(s,n)+a2(s,i)}class tg extends us{constructor(e=new Te,t=new Te,n=new Te,i=new Te){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new Te){const n=t,i=this.v0,a=this.v1,l=this.v2,c=this.v3;return n.set(Hl(e,i.x,a.x,l.x,c.x),Hl(e,i.y,a.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class oS extends us{constructor(e=new G,t=new G,n=new G,i=new G){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new G){const n=t,i=this.v0,a=this.v1,l=this.v2,c=this.v3;return n.set(Hl(e,i.x,a.x,l.x,c.x),Hl(e,i.y,a.y,l.y,c.y),Hl(e,i.z,a.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ng extends us{constructor(e=new Te,t=new Te){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Te){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Te){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lS extends us{constructor(e=new G,t=new G){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new G){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new G){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ig extends us{constructor(e=new Te,t=new Te,n=new Te){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Te){const n=t,i=this.v0,a=this.v1,l=this.v2;return n.set(Fl(e,i.x,a.x,l.x),Fl(e,i.y,a.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sg extends us{constructor(e=new G,t=new G,n=new G){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new G){const n=t,i=this.v0,a=this.v1,l=this.v2;return n.set(Fl(e,i.x,a.x,l.x),Fl(e,i.y,a.y,l.y),Fl(e,i.z,a.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class rg extends us{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Te){const n=t,i=this.points,a=(i.length-1)*e,l=Math.floor(a),c=a-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(K_(c,h.x,f.x,p.x,m.x),K_(c,h.y,f.y,p.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new Te().fromArray(i))}return this}}var kh=Object.freeze({__proto__:null,ArcCurve:rS,CatmullRomCurve3:aS,CubicBezierCurve:tg,CubicBezierCurve3:oS,EllipseCurve:df,LineCurve:ng,LineCurve3:lS,QuadraticBezierCurve:ig,QuadraticBezierCurve3:sg,SplineCurve:rg});class cS extends us{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new kh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let a=0;for(;a<i.length;){if(i[a]>=n){const l=i[a]-n,c=this.curves[a],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,t)}a++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,a=this.curves;i<a.length;i++){const l=a[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new kh[i.type]().fromJSON(i))}return this}}class Jl extends cS{constructor(e){super(),this.type="Path",this.currentPoint=new Te,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ng(this.currentPoint.clone(),new Te(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const a=new ig(this.currentPoint.clone(),new Te(e,t),new Te(n,i));return this.curves.push(a),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,a,l){const c=new tg(this.currentPoint.clone(),new Te(e,t),new Te(n,i),new Te(a,l));return this.curves.push(c),this.currentPoint.set(a,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new rg(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(e+c,t+h,n,i,a,l),this}absarc(e,t,n,i,a,l){return this.absellipse(e,t,n,n,i,a,l),this}ellipse(e,t,n,i,a,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+f,t+p,n,i,a,l,c,h),this}absellipse(e,t,n,i,a,l,c,h){const f=new df(e,t,n,i,a,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class vc extends Rt{constructor(e=[new Te(0,-.5),new Te(.5,0),new Te(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=En(i,0,Math.PI*2);const a=[],l=[],c=[],h=[],f=[],p=1/t,m=new G,g=new Te,v=new G,x=new G,M=new G;let S=0,_=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:S=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,v.x=_*1,v.y=-S,v.z=_*0,M.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case e.length-1:h.push(M.x,M.y,M.z);break;default:S=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=M.x,v.y+=M.y,v.z+=M.z,v.normalize(),h.push(v.x,v.y,v.z),M.copy(x)}for(let b=0;b<=t;b++){const A=n+b*p*i,T=Math.sin(A),z=Math.cos(A);for(let D=0;D<=e.length-1;D++){m.x=e[D].x*T,m.y=e[D].y,m.z=e[D].x*z,l.push(m.x,m.y,m.z),g.x=b/t,g.y=D/(e.length-1),c.push(g.x,g.y);const O=h[3*D+0]*T,L=h[3*D+1],C=h[3*D+0]*z;f.push(O,L,C)}}for(let b=0;b<t;b++)for(let A=0;A<e.length-1;A++){const T=A+b*e.length,z=T,D=T+e.length,O=T+e.length+1,L=T+1;a.push(z,D,L),a.push(O,L,D)}this.setIndex(a),this.setAttribute("position",new at(l,3)),this.setAttribute("uv",new at(c,2)),this.setAttribute("normal",new at(f,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vc(e.points,e.segments,e.phiStart,e.phiLength)}}class pf extends vc{constructor(e=1,t=1,n=4,i=8){const a=new Jl;a.absarc(0,-t/2,e,Math.PI*1.5,0),a.absarc(0,t/2,e,0,Math.PI*.5),super(a.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new pf(e.radius,e.length,e.capSegments,e.radialSegments)}}class mf extends Rt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const a=[],l=[],c=[],h=[],f=new G,p=new Te;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=t;m++,g+=3){const v=n+m/t*i;f.x=e*Math.cos(v),f.y=e*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/e+1)/2,p.y=(l[g+1]/e+1)/2,h.push(p.x,p.y)}for(let m=1;m<=t;m++)a.push(m,m+1,0);this.setIndex(a),this.setAttribute("position",new at(l,3)),this.setAttribute("normal",new at(c,3)),this.setAttribute("uv",new at(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new mf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ko extends Rt{constructor(e=1,t=1,n=1,i=32,a=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:a,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),a=Math.floor(a);const p=[],m=[],g=[],v=[];let x=0;const M=[],S=n/2;let _=0;b(),l===!1&&(e>0&&A(!0),t>0&&A(!1)),this.setIndex(p),this.setAttribute("position",new at(m,3)),this.setAttribute("normal",new at(g,3)),this.setAttribute("uv",new at(v,2));function b(){const T=new G,z=new G;let D=0;const O=(t-e)/n;for(let L=0;L<=a;L++){const C=[],R=L/a,F=R*(t-e)+e;for(let ee=0;ee<=i;ee++){const K=ee/i,J=K*h+c,oe=Math.sin(J),B=Math.cos(J);z.x=F*oe,z.y=-R*n+S,z.z=F*B,m.push(z.x,z.y,z.z),T.set(oe,O,B).normalize(),g.push(T.x,T.y,T.z),v.push(K,1-R),C.push(x++)}M.push(C)}for(let L=0;L<i;L++)for(let C=0;C<a;C++){const R=M[C][L],F=M[C+1][L],ee=M[C+1][L+1],K=M[C][L+1];(e>0||C!==0)&&(p.push(R,F,K),D+=3),(t>0||C!==a-1)&&(p.push(F,ee,K),D+=3)}f.addGroup(_,D,0),_+=D}function A(T){const z=x,D=new Te,O=new G;let L=0;const C=T===!0?e:t,R=T===!0?1:-1;for(let ee=1;ee<=i;ee++)m.push(0,S*R,0),g.push(0,R,0),v.push(.5,.5),x++;const F=x;for(let ee=0;ee<=i;ee++){const J=ee/i*h+c,oe=Math.cos(J),B=Math.sin(J);O.x=C*B,O.y=S*R,O.z=C*oe,m.push(O.x,O.y,O.z),g.push(0,R,0),D.x=oe*.5+.5,D.y=B*.5*R+.5,v.push(D.x,D.y),x++}for(let ee=0;ee<i;ee++){const K=z+ee,J=F+ee;T===!0?p.push(J,J+1,K):p.push(J+1,J,K),L+=3}f.addGroup(_,L,T===!0?1:2),_+=L}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ko(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class gf extends ko{constructor(e=1,t=1,n=32,i=1,a=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,a,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:l,thetaLength:c}}static fromJSON(e){return new gf(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Rr extends Rt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const a=[],l=[];c(i),f(n),p(),this.setAttribute("position",new at(a,3)),this.setAttribute("normal",new at(a.slice(),3)),this.setAttribute("uv",new at(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const A=new G,T=new G,z=new G;for(let D=0;D<t.length;D+=3)v(t[D+0],A),v(t[D+1],T),v(t[D+2],z),h(A,T,z,b)}function h(b,A,T,z){const D=z+1,O=[];for(let L=0;L<=D;L++){O[L]=[];const C=b.clone().lerp(T,L/D),R=A.clone().lerp(T,L/D),F=D-L;for(let ee=0;ee<=F;ee++)ee===0&&L===D?O[L][ee]=C:O[L][ee]=C.clone().lerp(R,ee/F)}for(let L=0;L<D;L++)for(let C=0;C<2*(D-L)-1;C++){const R=Math.floor(C/2);C%2===0?(g(O[L][R+1]),g(O[L+1][R]),g(O[L][R])):(g(O[L][R+1]),g(O[L+1][R+1]),g(O[L+1][R]))}}function f(b){const A=new G;for(let T=0;T<a.length;T+=3)A.x=a[T+0],A.y=a[T+1],A.z=a[T+2],A.normalize().multiplyScalar(b),a[T+0]=A.x,a[T+1]=A.y,a[T+2]=A.z}function p(){const b=new G;for(let A=0;A<a.length;A+=3){b.x=a[A+0],b.y=a[A+1],b.z=a[A+2];const T=S(b)/2/Math.PI+.5,z=_(b)/Math.PI+.5;l.push(T,1-z)}x(),m()}function m(){for(let b=0;b<l.length;b+=6){const A=l[b+0],T=l[b+2],z=l[b+4],D=Math.max(A,T,z),O=Math.min(A,T,z);D>.9&&O<.1&&(A<.2&&(l[b+0]+=1),T<.2&&(l[b+2]+=1),z<.2&&(l[b+4]+=1))}}function g(b){a.push(b.x,b.y,b.z)}function v(b,A){const T=b*3;A.x=e[T+0],A.y=e[T+1],A.z=e[T+2]}function x(){const b=new G,A=new G,T=new G,z=new G,D=new Te,O=new Te,L=new Te;for(let C=0,R=0;C<a.length;C+=9,R+=6){b.set(a[C+0],a[C+1],a[C+2]),A.set(a[C+3],a[C+4],a[C+5]),T.set(a[C+6],a[C+7],a[C+8]),D.set(l[R+0],l[R+1]),O.set(l[R+2],l[R+3]),L.set(l[R+4],l[R+5]),z.copy(b).add(A).add(T).divideScalar(3);const F=S(z);M(D,R+0,b,F),M(O,R+2,A,F),M(L,R+4,T,F)}}function M(b,A,T,z){z<0&&b.x===1&&(l[A]=b.x-1),T.x===0&&T.z===0&&(l[A]=z/2/Math.PI+.5)}function S(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rr(e.vertices,e.indices,e.radius,e.details)}}class vf extends Rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,a=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(a,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vf(e.radius,e.detail)}}const Fu=new G,Hu=new G,Ip=new G,Vu=new yi;class uS extends Rt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),a=Math.cos(xa*t),l=e.getIndex(),c=e.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:M,b:S,c:_}=Vu;if(M.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Vu.getNormal(Ip),m[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let b=0;b<3;b++){const A=(b+1)%3,T=m[b],z=m[A],D=Vu[p[b]],O=Vu[p[A]],L=`${T}_${z}`,C=`${z}_${T}`;C in g&&g[C]?(Ip.dot(g[C].normal)<=a&&(v.push(D.x,D.y,D.z),v.push(O.x,O.y,O.z)),g[C]=null):L in g||(g[L]={index0:f[b],index1:f[A],normal:Ip.clone()})}}for(const x in g)if(g[x]){const{index0:M,index1:S}=g[x];Fu.fromBufferAttribute(c,M),Hu.fromBufferAttribute(c,S),v.push(Fu.x,Fu.y,Fu.z),v.push(Hu.x,Hu.y,Hu.z)}this.setAttribute("position",new at(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Sa extends Jl{constructor(e){super(e),this.uuid=Oi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Jl().fromJSON(i))}return this}}const o2={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let a=hS(s,0,i,t,!0);const l=[];if(!a||a.next===a.prev)return l;let c,h,f,p,m,g,v;if(n&&(a=f2(s,e,a,t)),s.length>80*t){c=f=s[0],h=p=s[1];for(let x=t;x<i;x+=t)m=s[x],g=s[x+1],m<c&&(c=m),g<h&&(h=g),m>f&&(f=m),g>p&&(p=g);v=Math.max(f-c,p-h),v=v!==0?32767/v:0}return Ql(a,l,t,c,h,v,0),l}};function hS(s,e,t,n,i){let a,l;if(i===E2(s,e,t,n)>0)for(a=e;a<t;a+=n)l=j_(a,s[a],s[a+1],l);else for(a=t-n;a>=e;a-=n)l=j_(a,s[a],s[a+1],l);return l&&_f(l,l.next)&&(ec(l),l=l.next),l}function Aa(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(_f(t,t.next)||gn(t.prev,t,t.next)===0)){if(ec(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ql(s,e,t,n,i,a,l){if(!s)return;!l&&a&&v2(s,n,i,a);let c=s,h,f;for(;s.prev!==s.next;){if(h=s.prev,f=s.next,a?c2(s,n,i,a):l2(s)){e.push(h.i/t|0),e.push(s.i/t|0),e.push(f.i/t|0),ec(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=u2(Aa(s),e,t),Ql(s,e,t,n,i,a,2)):l===2&&h2(s,e,t,n,i,a):Ql(Aa(s),e,t,n,i,a,1);break}}}function l2(s){const e=s.prev,t=s,n=s.next;if(gn(e,t,n)>=0)return!1;const i=e.x,a=t.x,l=n.x,c=e.y,h=t.y,f=n.y,p=i<a?i<l?i:l:a<l?a:l,m=c<h?c<f?c:f:h<f?h:f,g=i>a?i>l?i:l:a>l?a:l,v=c>h?c>f?c:f:h>f?h:f;let x=n.next;for(;x!==e;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Co(i,c,a,h,l,f,x.x,x.y)&&gn(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function c2(s,e,t,n){const i=s.prev,a=s,l=s.next;if(gn(i,a,l)>=0)return!1;const c=i.x,h=a.x,f=l.x,p=i.y,m=a.y,g=l.y,v=c<h?c<f?c:f:h<f?h:f,x=p<m?p<g?p:g:m<g?m:g,M=c>h?c>f?c:f:h>f?h:f,S=p>m?p>g?p:g:m>g?m:g,_=vm(v,x,e,t,n),b=vm(M,S,e,t,n);let A=s.prevZ,T=s.nextZ;for(;A&&A.z>=_&&T&&T.z<=b;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Co(c,p,h,m,f,g,A.x,A.y)&&gn(A.prev,A,A.next)>=0||(A=A.prevZ,T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Co(c,p,h,m,f,g,T.x,T.y)&&gn(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;A&&A.z>=_;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Co(c,p,h,m,f,g,A.x,A.y)&&gn(A.prev,A,A.next)>=0)return!1;A=A.prevZ}for(;T&&T.z<=b;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Co(c,p,h,m,f,g,T.x,T.y)&&gn(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function u2(s,e,t){let n=s;do{const i=n.prev,a=n.next.next;!_f(i,a)&&fS(i,n,n.next,a)&&$l(i,a)&&$l(a,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(a.i/t|0),ec(n),ec(n.next),n=s=a),n=n.next}while(n!==s);return Aa(n)}function h2(s,e,t,n,i,a){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&x2(l,c)){let h=dS(l,c);l=Aa(l,l.next),h=Aa(h,h.next),Ql(l,e,t,n,i,a,0),Ql(h,e,t,n,i,a,0);return}c=c.next}l=l.next}while(l!==s)}function f2(s,e,t,n){const i=[];let a,l,c,h,f;for(a=0,l=e.length;a<l;a++)c=e[a]*n,h=a<l-1?e[a+1]*n:s.length,f=hS(s,c,h,n,!1),f===f.next&&(f.steiner=!0),i.push(y2(f));for(i.sort(d2),a=0;a<i.length;a++)t=p2(i[a],t);return t}function d2(s,e){return s.x-e.x}function p2(s,e){const t=m2(s,e);if(!t)return e;const n=dS(t,s);return Aa(n,n.next),Aa(t,t.next)}function m2(s,e){let t=e,n=-1/0,i;const a=s.x,l=s.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const g=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(g<=a&&g>n&&(n=g,i=t.x<t.next.x?t:t.next,g===a))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,h=i.x,f=i.y;let p=1/0,m;t=i;do a>=t.x&&t.x>=h&&a!==t.x&&Co(l<f?a:n,l,h,f,l<f?n:a,l,t.x,t.y)&&(m=Math.abs(l-t.y)/(a-t.x),$l(t,s)&&(m<p||m===p&&(t.x>i.x||t.x===i.x&&g2(i,t)))&&(i=t,p=m)),t=t.next;while(t!==c);return i}function g2(s,e){return gn(s.prev,s,e.prev)<0&&gn(e.next,s,s.next)<0}function v2(s,e,t,n){let i=s;do i.z===0&&(i.z=vm(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,_2(i)}function _2(s){let e,t,n,i,a,l,c,h,f=1;do{for(t=s,s=null,a=null,l=0;t;){for(l++,n=t,c=0,e=0;e<f&&(c++,n=n.nextZ,!!n);e++);for(h=f;c>0||h>0&&n;)c!==0&&(h===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,h--),a?a.nextZ=i:s=i,i.prevZ=a,a=i;t=n}a.nextZ=null,f*=2}while(l>1);return s}function vm(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function y2(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Co(s,e,t,n,i,a,l,c){return(i-l)*(e-c)>=(s-l)*(a-c)&&(s-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(a-c)>=(i-l)*(n-c)}function x2(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!S2(s,e)&&($l(s,e)&&$l(e,s)&&M2(s,e)&&(gn(s.prev,s,e.prev)||gn(s,e.prev,e))||_f(s,e)&&gn(s.prev,s,s.next)>0&&gn(e.prev,e,e.next)>0)}function gn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function _f(s,e){return s.x===e.x&&s.y===e.y}function fS(s,e,t,n){const i=ku(gn(s,e,t)),a=ku(gn(s,e,n)),l=ku(gn(t,n,s)),c=ku(gn(t,n,e));return!!(i!==a&&l!==c||i===0&&Gu(s,t,e)||a===0&&Gu(s,n,e)||l===0&&Gu(t,s,n)||c===0&&Gu(t,e,n))}function Gu(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function ku(s){return s>0?1:s<0?-1:0}function S2(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&fS(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function $l(s,e){return gn(s.prev,s,s.next)<0?gn(s,e,s.next)>=0&&gn(s,s.prev,e)>=0:gn(s,e,s.prev)<0||gn(s,s.next,e)<0}function M2(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,a=(s.y+e.y)/2;do t.y>a!=t.next.y>a&&t.next.y!==t.y&&i<(t.next.x-t.x)*(a-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function dS(s,e){const t=new _m(s.i,s.x,s.y),n=new _m(e.i,e.x,e.y),i=s.next,a=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,a.next=n,n.prev=a,n}function j_(s,e,t,n){const i=new _m(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ec(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function _m(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function E2(s,e,t,n){let i=0;for(let a=e,l=t-n;a<t;a+=n)i+=(s[l]-s[a])*(s[a+1]+s[l+1]),l=a;return i}class Ms{static area(e){const t=e.length;let n=0;for(let i=t-1,a=0;a<t;i=a++)n+=e[i].x*e[a].y-e[a].x*e[i].y;return n*.5}static isClockWise(e){return Ms.area(e)<0}static triangulateShape(e,t){const n=[],i=[],a=[];J_(e),Q_(n,e);let l=e.length;t.forEach(J_);for(let h=0;h<t.length;h++)i.push(l),l+=t[h].length,Q_(n,t[h]);const c=o2.triangulate(n,i);for(let h=0;h<c.length;h+=3)a.push(c.slice(h,h+3));return a}}function J_(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Q_(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class yf extends Rt{constructor(e=new Sa([new Te(.5,.5),new Te(-.5,.5),new Te(-.5,-.5),new Te(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],a=[];for(let c=0,h=e.length;c<h;c++){const f=e[c];l(f)}this.setAttribute("position",new at(i,3)),this.setAttribute("uv",new at(a,2)),this.computeVertexNormals();function l(c){const h=[],f=t.curveSegments!==void 0?t.curveSegments:12,p=t.steps!==void 0?t.steps:1,m=t.depth!==void 0?t.depth:1;let g=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:v-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,S=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:b2;let A,T=!1,z,D,O,L;_&&(A=_.getSpacedPoints(p),T=!0,g=!1,z=_.computeFrenetFrames(p,!1),D=new G,O=new G,L=new G),g||(S=0,v=0,x=0,M=0);const C=c.extractPoints(f);let R=C.shape;const F=C.holes;if(!Ms.isClockWise(R)){R=R.reverse();for(let Me=0,Ne=F.length;Me<Ne;Me++){const W=F[Me];Ms.isClockWise(W)&&(F[Me]=W.reverse())}}const K=Ms.triangulateShape(R,F),J=R;for(let Me=0,Ne=F.length;Me<Ne;Me++){const W=F[Me];R=R.concat(W)}function oe(Me,Ne,W){return Ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),Me.clone().addScaledVector(Ne,W)}const B=R.length,Q=K.length;function Y(Me,Ne,W){let nt,Re,Ge;const ze=Me.x-Ne.x,ut=Me.y-Ne.y,He=W.x-Me.x,H=W.y-Me.y,N=ze*ze+ut*ut,re=ze*H-ut*He;if(Math.abs(re)>Number.EPSILON){const ve=Math.sqrt(N),be=Math.sqrt(He*He+H*H),_e=Ne.x-ut/ve,it=Ne.y+ze/ve,Ve=W.x-H/be,qe=W.y+He/be,Ut=((Ve-_e)*H-(qe-it)*He)/(ze*H-ut*He);nt=_e+ze*Ut-Me.x,Re=it+ut*Ut-Me.y;const Le=nt*nt+Re*Re;if(Le<=2)return new Te(nt,Re);Ge=Math.sqrt(Le/2)}else{let ve=!1;ze>Number.EPSILON?He>Number.EPSILON&&(ve=!0):ze<-Number.EPSILON?He<-Number.EPSILON&&(ve=!0):Math.sign(ut)===Math.sign(H)&&(ve=!0),ve?(nt=-ut,Re=ze,Ge=Math.sqrt(N)):(nt=ze,Re=ut,Ge=Math.sqrt(N/2))}return new Te(nt/Ge,Re/Ge)}const le=[];for(let Me=0,Ne=J.length,W=Ne-1,nt=Me+1;Me<Ne;Me++,W++,nt++)W===Ne&&(W=0),nt===Ne&&(nt=0),le[Me]=Y(J[Me],J[W],J[nt]);const he=[];let xe,Ae=le.concat();for(let Me=0,Ne=F.length;Me<Ne;Me++){const W=F[Me];xe=[];for(let nt=0,Re=W.length,Ge=Re-1,ze=nt+1;nt<Re;nt++,Ge++,ze++)Ge===Re&&(Ge=0),ze===Re&&(ze=0),xe[nt]=Y(W[nt],W[Ge],W[ze]);he.push(xe),Ae=Ae.concat(xe)}for(let Me=0;Me<S;Me++){const Ne=Me/S,W=v*Math.cos(Ne*Math.PI/2),nt=x*Math.sin(Ne*Math.PI/2)+M;for(let Re=0,Ge=J.length;Re<Ge;Re++){const ze=oe(J[Re],le[Re],nt);Ue(ze.x,ze.y,-W)}for(let Re=0,Ge=F.length;Re<Ge;Re++){const ze=F[Re];xe=he[Re];for(let ut=0,He=ze.length;ut<He;ut++){const H=oe(ze[ut],xe[ut],nt);Ue(H.x,H.y,-W)}}}const Ze=x+M;for(let Me=0;Me<B;Me++){const Ne=g?oe(R[Me],Ae[Me],Ze):R[Me];T?(O.copy(z.normals[0]).multiplyScalar(Ne.x),D.copy(z.binormals[0]).multiplyScalar(Ne.y),L.copy(A[0]).add(O).add(D),Ue(L.x,L.y,L.z)):Ue(Ne.x,Ne.y,0)}for(let Me=1;Me<=p;Me++)for(let Ne=0;Ne<B;Ne++){const W=g?oe(R[Ne],Ae[Ne],Ze):R[Ne];T?(O.copy(z.normals[Me]).multiplyScalar(W.x),D.copy(z.binormals[Me]).multiplyScalar(W.y),L.copy(A[Me]).add(O).add(D),Ue(L.x,L.y,L.z)):Ue(W.x,W.y,m/p*Me)}for(let Me=S-1;Me>=0;Me--){const Ne=Me/S,W=v*Math.cos(Ne*Math.PI/2),nt=x*Math.sin(Ne*Math.PI/2)+M;for(let Re=0,Ge=J.length;Re<Ge;Re++){const ze=oe(J[Re],le[Re],nt);Ue(ze.x,ze.y,m+W)}for(let Re=0,Ge=F.length;Re<Ge;Re++){const ze=F[Re];xe=he[Re];for(let ut=0,He=ze.length;ut<He;ut++){const H=oe(ze[ut],xe[ut],nt);T?Ue(H.x,H.y+A[p-1].y,A[p-1].x+W):Ue(H.x,H.y,m+W)}}}se(),Se();function se(){const Me=i.length/3;if(g){let Ne=0,W=B*Ne;for(let nt=0;nt<Q;nt++){const Re=K[nt];je(Re[2]+W,Re[1]+W,Re[0]+W)}Ne=p+S*2,W=B*Ne;for(let nt=0;nt<Q;nt++){const Re=K[nt];je(Re[0]+W,Re[1]+W,Re[2]+W)}}else{for(let Ne=0;Ne<Q;Ne++){const W=K[Ne];je(W[2],W[1],W[0])}for(let Ne=0;Ne<Q;Ne++){const W=K[Ne];je(W[0]+B*p,W[1]+B*p,W[2]+B*p)}}n.addGroup(Me,i.length/3-Me,0)}function Se(){const Me=i.length/3;let Ne=0;De(J,Ne),Ne+=J.length;for(let W=0,nt=F.length;W<nt;W++){const Re=F[W];De(Re,Ne),Ne+=Re.length}n.addGroup(Me,i.length/3-Me,1)}function De(Me,Ne){let W=Me.length;for(;--W>=0;){const nt=W;let Re=W-1;Re<0&&(Re=Me.length-1);for(let Ge=0,ze=p+S*2;Ge<ze;Ge++){const ut=B*Ge,He=B*(Ge+1),H=Ne+nt+ut,N=Ne+Re+ut,re=Ne+Re+He,ve=Ne+nt+He;mt(H,N,re,ve)}}}function Ue(Me,Ne,W){h.push(Me),h.push(Ne),h.push(W)}function je(Me,Ne,W){ft(Me),ft(Ne),ft(W);const nt=i.length/3,Re=b.generateTopUV(n,i,nt-3,nt-2,nt-1);Tt(Re[0]),Tt(Re[1]),Tt(Re[2])}function mt(Me,Ne,W,nt){ft(Me),ft(Ne),ft(nt),ft(Ne),ft(W),ft(nt);const Re=i.length/3,Ge=b.generateSideWallUV(n,i,Re-6,Re-3,Re-2,Re-1);Tt(Ge[0]),Tt(Ge[1]),Tt(Ge[3]),Tt(Ge[1]),Tt(Ge[2]),Tt(Ge[3])}function ft(Me){i.push(h[Me*3+0]),i.push(h[Me*3+1]),i.push(h[Me*3+2])}function Tt(Me){a.push(Me.x),a.push(Me.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return T2(t,n,e)}static fromJSON(e,t){const n=[];for(let a=0,l=e.shapes.length;a<l;a++){const c=t[e.shapes[a]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new kh[i.type]().fromJSON(i)),new yf(n,e.options)}}const b2={generateTopUV:function(s,e,t,n,i){const a=e[t*3],l=e[t*3+1],c=e[n*3],h=e[n*3+1],f=e[i*3],p=e[i*3+1];return[new Te(a,l),new Te(c,h),new Te(f,p)]},generateSideWallUV:function(s,e,t,n,i,a){const l=e[t*3],c=e[t*3+1],h=e[t*3+2],f=e[n*3],p=e[n*3+1],m=e[n*3+2],g=e[i*3],v=e[i*3+1],x=e[i*3+2],M=e[a*3],S=e[a*3+1],_=e[a*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new Te(l,1-h),new Te(f,1-m),new Te(g,1-x),new Te(M,1-_)]:[new Te(c,1-h),new Te(p,1-m),new Te(v,1-x),new Te(S,1-_)]}};function T2(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const a=s[n];t.shapes.push(a.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class _c extends Rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],a=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,a,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new _c(e.radius,e.detail)}}class yc extends Rr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yc(e.radius,e.detail)}}class xf extends Rt{constructor(e=.5,t=1,n=32,i=1,a=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:a,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=e;const g=(t-e)/i,v=new G,x=new Te;for(let M=0;M<=i;M++){for(let S=0;S<=n;S++){const _=a+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/t+1)/2,x.y=(v.y/t+1)/2,p.push(x.x,x.y)}m+=g}for(let M=0;M<i;M++){const S=M*(n+1);for(let _=0;_<n;_++){const b=_+S,A=b,T=b+n+1,z=b+n+2,D=b+1;c.push(A,T,D),c.push(T,z,D)}}this.setIndex(c),this.setAttribute("position",new at(h,3)),this.setAttribute("normal",new at(f,3)),this.setAttribute("uv",new at(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xf(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Sf extends Rt{constructor(e=new Sa([new Te(0,.5),new Te(-.5,-.5),new Te(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],a=[],l=[];let c=0,h=0;if(Array.isArray(e)===!1)f(e);else for(let p=0;p<e.length;p++)f(e[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new at(i,3)),this.setAttribute("normal",new at(a,3)),this.setAttribute("uv",new at(l,2));function f(p){const m=i.length/3,g=p.extractPoints(t);let v=g.shape;const x=g.holes;Ms.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const b=x[S];Ms.isClockWise(b)===!0&&(x[S]=b.reverse())}const M=Ms.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const b=x[S];v=v.concat(b)}for(let S=0,_=v.length;S<_;S++){const b=v[S];i.push(b.x,b.y,0),a.push(0,0,1),l.push(b.x,b.y)}for(let S=0,_=M.length;S<_;S++){const b=M[S],A=b[0]+m,T=b[1]+m,z=b[2]+m;n.push(A,T,z),h+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return A2(t,e)}static fromJSON(e,t){const n=[];for(let i=0,a=e.shapes.length;i<a;i++){const l=t[e.shapes[i]];n.push(l)}return new Sf(n,e.curveSegments)}}function A2(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class xc extends Rt{constructor(e=1,t=32,n=16,i=0,a=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:a,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new G,g=new G,v=[],x=[],M=[],S=[];for(let _=0;_<=n;_++){const b=[],A=_/n;let T=0;_===0&&l===0?T=.5/t:_===n&&h===Math.PI&&(T=-.5/t);for(let z=0;z<=t;z++){const D=z/t;m.x=-e*Math.cos(i+D*a)*Math.sin(l+A*c),m.y=e*Math.cos(l+A*c),m.z=e*Math.sin(i+D*a)*Math.sin(l+A*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),M.push(g.x,g.y,g.z),S.push(D+T,1-A),b.push(f++)}p.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const A=p[_][b+1],T=p[_][b],z=p[_+1][b],D=p[_+1][b+1];(_!==0||l>0)&&v.push(A,T,D),(_!==n-1||h<Math.PI)&&v.push(T,z,D)}this.setIndex(v),this.setAttribute("position",new at(x,3)),this.setAttribute("normal",new at(M,3)),this.setAttribute("uv",new at(S,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mf extends Rr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mf(e.radius,e.detail)}}class Ef extends Rt{constructor(e=1,t=.4,n=12,i=48,a=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:a},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new G,m=new G,g=new G;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const M=x/i*a,S=v/n*Math.PI*2;m.x=(e+t*Math.cos(S))*Math.cos(M),m.y=(e+t*Math.cos(S))*Math.sin(M),m.z=t*Math.sin(S),c.push(m.x,m.y,m.z),p.x=e*Math.cos(M),p.y=e*Math.sin(M),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const M=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,b=(i+1)*v+x;l.push(M,S,b),l.push(S,_,b)}this.setIndex(l),this.setAttribute("position",new at(c,3)),this.setAttribute("normal",new at(h,3)),this.setAttribute("uv",new at(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ef(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class bf extends Rt{constructor(e=1,t=.4,n=64,i=8,a=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:a,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new G,g=new G,v=new G,x=new G,M=new G,S=new G,_=new G;for(let A=0;A<=n;++A){const T=A/n*a*Math.PI*2;b(T,a,l,e,v),b(T+.01,a,l,e,x),S.subVectors(x,v),_.addVectors(x,v),M.crossVectors(S,_),_.crossVectors(M,S),M.normalize(),_.normalize();for(let z=0;z<=i;++z){const D=z/i*Math.PI*2,O=-t*Math.cos(D),L=t*Math.sin(D);m.x=v.x+(O*_.x+L*M.x),m.y=v.y+(O*_.y+L*M.y),m.z=v.z+(O*_.z+L*M.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(A/n),p.push(z/i)}}for(let A=1;A<=n;A++)for(let T=1;T<=i;T++){const z=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),O=(i+1)*A+T,L=(i+1)*(A-1)+T;c.push(z,D,L),c.push(D,O,L)}this.setIndex(c),this.setAttribute("position",new at(h,3)),this.setAttribute("normal",new at(f,3)),this.setAttribute("uv",new at(p,2));function b(A,T,z,D,O){const L=Math.cos(A),C=Math.sin(A),R=z/T*A,F=Math.cos(R);O.x=D*(2+F)*.5*L,O.y=D*(2+F)*C*.5,O.z=D*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bf(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tf extends Rt{constructor(e=new sg(new G(-1,-1,0),new G(-1,1,0),new G(1,1,0)),t=64,n=1,i=8,a=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:a};const l=e.computeFrenetFrames(t,a);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new G,h=new G,f=new Te;let p=new G;const m=[],g=[],v=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new at(m,3)),this.setAttribute("normal",new at(g,3)),this.setAttribute("uv",new at(v,2));function M(){for(let A=0;A<t;A++)S(A);S(a===!1?t:0),b(),_()}function S(A){p=e.getPointAt(A/t,p);const T=l.normals[A],z=l.binormals[A];for(let D=0;D<=i;D++){const O=D/i*Math.PI*2,L=Math.sin(O),C=-Math.cos(O);h.x=C*T.x+L*z.x,h.y=C*T.y+L*z.y,h.z=C*T.z+L*z.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let A=1;A<=t;A++)for(let T=1;T<=i;T++){const z=(i+1)*(A-1)+(T-1),D=(i+1)*A+(T-1),O=(i+1)*A+T,L=(i+1)*(A-1)+T;x.push(z,D,L),x.push(D,O,L)}}function b(){for(let A=0;A<=t;A++)for(let T=0;T<=i;T++)f.x=A/t,f.y=T/i,v.push(f.x,f.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tf(new kh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class pS extends Rt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new G,a=new G;if(e.index!==null){const l=e.attributes.position,c=e.index;let h=e.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,M=g+v;x<M;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),b=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),a.fromBufferAttribute(l,b),$_(i,a,n)===!0&&(t.push(i.x,i.y,i.z),t.push(a.x,a.y,a.z))}}}else{const l=e.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),a.fromBufferAttribute(l,m),$_(i,a,n)===!0&&(t.push(i.x,i.y,i.z),t.push(a.x,a.y,a.z))}}this.setAttribute("position",new at(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function $_(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var ey=Object.freeze({__proto__:null,BoxGeometry:Ca,CapsuleGeometry:pf,CircleGeometry:mf,ConeGeometry:gf,CylinderGeometry:ko,DodecahedronGeometry:vf,EdgesGeometry:uS,ExtrudeGeometry:yf,IcosahedronGeometry:_c,LatheGeometry:vc,OctahedronGeometry:yc,PlaneGeometry:Cr,PolyhedronGeometry:Rr,RingGeometry:xf,ShapeGeometry:Sf,SphereGeometry:xc,TetrahedronGeometry:Mf,TorusGeometry:Ef,TorusKnotGeometry:bf,TubeGeometry:Tf,WireframeGeometry:pS});class mS extends ni{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new $e(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class gS extends Mi{static get type(){return"RawShaderMaterial"}constructor(e){super(e),this.isRawShaderMaterial=!0}}class ag extends ni{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new $e(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vS extends ag{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Te(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return En(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new $e(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new $e(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new $e(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class _S extends ni{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new $e(16777215),this.specular=new $e(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fi,this.combine=cc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class yS extends ni{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new $e(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class xS extends ni{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class SS extends ni{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new $e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fi,this.combine=cc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class MS extends ni{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new $e(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wr,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ES extends hi{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ga(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function bS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function TS(s){function e(i,a){return s[i]-s[a]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function ym(s,e,t){const n=s.length,i=new s.constructor(n);for(let a=0,l=0;l!==n;++a){const c=t[a]*e;for(let h=0;h!==e;++h)i[l++]=s[c+h]}return i}function og(s,e,t,n){let i=1,a=s[0];for(;a!==void 0&&a[n]===void 0;)a=s[i++];if(a===void 0)return;let l=a[n];if(l!==void 0)if(Array.isArray(l))do l=a[n],l!==void 0&&(e.push(a.time),t.push.apply(t,l)),a=s[i++];while(a!==void 0);else if(l.toArray!==void 0)do l=a[n],l!==void 0&&(e.push(a.time),l.toArray(t,t.length)),a=s[i++];while(a!==void 0);else do l=a[n],l!==void 0&&(e.push(a.time),t.push(l)),a=s[i++];while(a!==void 0)}function w2(s,e,t,n,i=30){const a=s.clone();a.name=e;const l=[];for(let h=0;h<a.tracks.length;++h){const f=a.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<t||x>=n)){m.push(f.times[v]);for(let M=0;M<p;++M)g.push(f.values[v*p+M])}}m.length!==0&&(f.times=ga(m,f.times.constructor),f.values=ga(g,f.values.constructor),l.push(f))}a.tracks=l;let c=1/0;for(let h=0;h<a.tracks.length;++h)c>a.tracks[h].times[0]&&(c=a.tracks[h].times[0]);for(let h=0;h<a.tracks.length;++h)a.tracks[h].shift(-1*c);return a.resetDuration(),a}function C2(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,a=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let M;if(a<=c.times[0]){const _=p,b=m-p;M=c.values.slice(_,b)}else if(a>=c.times[x]){const _=x*m+p,b=_+m-p;M=c.values.slice(_,b)}else{const _=c.createInterpolant(),b=p,A=m-p;_.evaluate(a),M=_.resultBuffer.slice(b,A)}h==="quaternion"&&new xi().fromArray(M).normalize().conjugate().toArray(M);const S=f.times.length;for(let _=0;_<S;++_){const b=_*v+g;if(h==="quaternion")xi.multiplyQuaternionsFlat(f.values,b,M,0,f.values,b);else{const A=v-g*2;for(let T=0;T<A;++T)f.values[b+T]-=M[T]}}}return s.blendMode=Fm,s}const R2={convertArray:ga,isTypedArray:bS,getKeyframeOrder:TS,sortedArray:ym,flattenJSON:og,subclip:w2,makeClipAdditive:C2};class Sc{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],a=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<a)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(a=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=a)){const c=t[1];e<c&&(n=2,a=c);for(let h=n-2;;){if(a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=a,a=t[--n-1],e>=a)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],a=t[n-1],a===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,a=e*i;for(let l=0;l!==i;++l)t[l]=n[a+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class AS extends Sc{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:fa,endingEnd:fa}}intervalChanged_(e,t,n){const i=this.parameterPositions;let a=e-2,l=e+1,c=i[a],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case da:a=e,c=2*t-n;break;case Yl:a=i.length-2,c=t+i[a]-i[a+1];break;default:a=e,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case da:l=e,h=2*n-t;break;case Yl:l=1,h=n+i[1]-i[0];break;default:l=e-1,h=t}const f=(n-t)*.5,p=this.valueSize;this._weightPrev=f/(t-c),this._weightNext=f/(h-n),this._offsetPrev=a*p,this._offsetNext=l*p}interpolate_(e,t,n,i){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=e*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-t)/(i-t),M=x*x,S=M*x,_=-g*S+2*g*M-g*x,b=(1+g)*S+(-1.5-2*g)*M+(-.5+g)*x+1,A=(-1-v)*S+(1.5+v)*M+.5*x,T=v*S-v*M;for(let z=0;z!==c;++z)a[z]=_*l[p+z]+b*l[f+z]+A*l[h+z]+T*l[m+z];return a}}class lg extends Sc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=e*c,f=h-c,p=(n-t)/(i-t),m=1-p;for(let g=0;g!==c;++g)a[g]=l[f+g]*m+l[h+g]*p;return a}}class wS extends Sc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class hs{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ga(t,this.TimeBufferType),this.values=ga(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ga(e.times,Array),values:ga(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new wS(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new lg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new AS(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ql:t=this.InterpolantFactoryMethodDiscrete;break;case Hh:t=this.InterpolantFactoryMethodLinear;break;case th:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ql;case this.InterpolantFactoryMethodLinear:return Hh;case this.InterpolantFactoryMethodSmooth:return th}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let a=0,l=i-1;for(;a!==i&&n[a]<e;)++a;for(;l!==-1&&n[l]>t;)--l;if(++l,a!==0||l!==i){a>=l&&(l=Math.max(l,1),a=l-1);const c=this.getValueSize();this.times=n.slice(a,l),this.values=this.values.slice(a*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,a=n.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==a;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),e=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),e=!1;break}l=h}if(i!==void 0&&bS(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===th,a=e.length-1;let l=1;for(let c=1;c<a;++c){let h=!1;const f=e[c],p=e[c+1];if(f!==p&&(c!==1||f!==e[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const M=t[m+x];if(M!==t[g+x]||M!==t[v+x]){h=!0;break}}}if(h){if(c!==l){e[l]=e[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)t[g+v]=t[m+v]}++l}}if(a>0){e[l]=e[a];for(let c=a*n,h=l*n,f=0;f!==n;++f)t[h+f]=t[c+f];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}hs.prototype.TimeBufferType=Float32Array;hs.prototype.ValueBufferType=Float32Array;hs.prototype.DefaultInterpolation=Hh;class Ra extends hs{constructor(e,t,n){super(e,t,n)}}Ra.prototype.ValueTypeName="bool";Ra.prototype.ValueBufferType=Array;Ra.prototype.DefaultInterpolation=ql;Ra.prototype.InterpolantFactoryMethodLinear=void 0;Ra.prototype.InterpolantFactoryMethodSmooth=void 0;class cg extends hs{}cg.prototype.ValueTypeName="color";class tc extends hs{}tc.prototype.ValueTypeName="number";class CS extends Sc{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const a=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-t)/(i-t);let f=e*c;for(let p=f+c;f!==p;f+=4)xi.slerpFlat(a,0,l,f-c,l,f,h);return a}}class Mc extends hs{InterpolantFactoryMethodLinear(e){return new CS(this.times,this.values,this.getValueSize(),e)}}Mc.prototype.ValueTypeName="quaternion";Mc.prototype.InterpolantFactoryMethodSmooth=void 0;class Ua extends hs{constructor(e,t,n){super(e,t,n)}}Ua.prototype.ValueTypeName="string";Ua.prototype.ValueBufferType=Array;Ua.prototype.DefaultInterpolation=ql;Ua.prototype.InterpolantFactoryMethodLinear=void 0;Ua.prototype.InterpolantFactoryMethodSmooth=void 0;class nc extends hs{}nc.prototype.ValueTypeName="vector";class ic{constructor(e="",t=-1,n=[],i=sf){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Oi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(D2(n[l]).scale(i));const a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,l=n.length;a!==l;++a)t.push(hs.toJSON(n[a]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const a=t.length,l=[];for(let c=0;c<a;c++){let h=[],f=[];h.push((c+a-1)%a,c,(c+1)%a),f.push(0,1,0);const p=TS(h);h=ym(h,1,p),f=ym(f,1,p),!i&&h[0]===0&&(h.push(a),f.push(f[0])),l.push(new tc(".morphTargetInfluences["+t[c].name+"]",h,f).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},a=/^([\w-]*?)([\d]+)$/;for(let c=0,h=e.length;c<h;c++){const f=e[c],p=f.name.match(a);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,M){if(v.length!==0){const S=[],_=[];og(v,S,_,x),S.length!==0&&M.push(new m(g,S,_))}},i=[],a=e.name||"default",l=e.fps||30,c=e.blendMode;let h=e.length||-1;const f=e.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let M=0;M<g[x].morphTargets.length;M++)v[g[x].morphTargets[M]]=-1;for(const M in v){const S=[],_=[];for(let b=0;b!==g[x].morphTargets.length;++b){const A=g[x];S.push(A.time),_.push(A.morphTarget===M?1:0)}i.push(new tc(".morphTargetInfluence["+M+"]",S,_))}h=v.length*l}else{const v=".bones["+t[m].name+"]";n(nc,v+".position",g,"pos",i),n(Mc,v+".quaternion",g,"rot",i),n(nc,v+".scale",g,"scl",i)}}return i.length===0?null:new this(a,h,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const a=this.tracks[n];t=Math.max(t,a.times[a.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function U2(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return tc;case"vector":case"vector2":case"vector3":case"vector4":return nc;case"color":return cg;case"quaternion":return Mc;case"bool":case"boolean":return Ra;case"string":return Ua}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function D2(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=U2(s.type);if(s.times===void 0){const t=[],n=[];og(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ys={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Af{constructor(e,t,n){const i=this;let a=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(p){c++,a===!1&&i.onStart!==void 0&&i.onStart(p,l,c),a=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(a=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const RS=new Af;class fi{constructor(e){this.manager=e!==void 0?e:RS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,a){n.load(e,i,t,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}fi.DEFAULT_MATERIAL_NAME="__DEFAULT";const ks={};class N2 extends Error{constructor(e,t){super(e),this.response=t}}class Bi extends fi{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=Ys.get(e);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(a),this.manager.itemEnd(e)},0),a;if(ks[e]!==void 0){ks[e].push({onLoad:t,onProgress:n,onError:i});return}ks[e]=[],ks[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=ks[e],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let M=0;const S=new ReadableStream({start(_){b();function b(){m.read().then(({done:A,value:T})=>{if(A)_.close();else{M+=T.byteLength;const z=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:v});for(let D=0,O=p.length;D<O;D++){const L=p[D];L.onProgress&&L.onProgress(z)}_.enqueue(T),b()}},A=>{_.error(A)})}}});return new Response(S)}else throw new N2(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c===void 0)return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{Ys.add(e,f);const p=ks[e];delete ks[e];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=ks[e];if(p===void 0)throw this.manager.itemError(e),f;delete ks[e];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class L2 extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=new Bi(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(a.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),a.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ic.parse(e[n]);t.push(i)}return t}}class I2 extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=[],c=new ff,h=new Bi(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(a.withCredentials);let f=0;function p(m){h.load(e[m],function(g){const v=a.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=$t),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let m=0,g=e.length;m<g;++m)p(m);else h.load(e,function(m){const g=a.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let M=0;M<g.mipmapCount;M++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+M]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=$t),c.format=g.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class sc extends fi{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,l=Ys.get(e);if(l!==void 0)return a.manager.itemStart(e),setTimeout(function(){t&&t(l),a.manager.itemEnd(e)},0),l;const c=jl("img");function h(){p(),Ys.add(e,this),t&&t(this),a.manager.itemEnd(e)}function f(m){p(),i&&i(m),a.manager.itemError(e),a.manager.itemEnd(e)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),a.manager.itemStart(e),c.src=e,c}}class US extends fi{constructor(e){super(e)}load(e,t,n,i){const a=new pc;a.colorSpace=kn;const l=new sc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(e[f],function(p){a.images[f]=p,c++,c===6&&(a.needsUpdate=!0,t&&t(a))},void 0,i)}for(let f=0;f<e.length;++f)h(f);return a}}class ug extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=new ls,c=new Bi(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(a.withCredentials),c.load(e,function(h){let f;try{f=a.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Rn,l.wrapT=f.wrapT!==void 0?f.wrapT:Rn,l.magFilter=f.magFilter!==void 0?f.magFilter:$t,l.minFilter=f.minFilter!==void 0?f.minFilter:$t,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=_s),f.mipmapCount===1&&(l.minFilter=$t),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,t&&t(l,f)},n,i),l}}class P2 extends fi{constructor(e){super(e)}load(e,t,n,i){const a=new rn,l=new sc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){a.image=c,a.needsUpdate=!0,t!==void 0&&t(a)},n,i),a}}class Ur extends Wt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new $e(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class DS extends Ur{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Wt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new $e(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Pp=new _t,ty=new G,ny=new G;class hg{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Te(512,512),this.map=null,this.mapPass=null,this.matrix=new _t,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new mc,this._frameExtents=new Te(1,1),this._viewportCount=1,this._viewports=[new kt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;ty.setFromMatrixPosition(e.matrixWorld),t.position.copy(ty),ny.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ny),t.updateMatrixWorld(),Pp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Pp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Pp)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class O2 extends hg{constructor(){super(new zn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Lo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;(n!==t.fov||i!==t.aspect||a!==t.far)&&(t.fov=n,t.aspect=i,t.far=a,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class NS extends Ur{constructor(e,t,n=0,i=Math.PI/3,a=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Wt.DEFAULT_UP),this.updateMatrix(),this.target=new Wt,this.distance=n,this.angle=i,this.penumbra=a,this.decay=l,this.map=null,this.shadow=new O2}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const iy=new _t,Tl=new G,Op=new G;class B2 extends hg{constructor(){super(new zn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Te(4,2),this._viewportCount=6,this._viewports=[new kt(2,1,1,1),new kt(0,1,1,1),new kt(3,1,1,1),new kt(1,1,1,1),new kt(3,0,1,1),new kt(1,0,1,1)],this._cubeDirections=[new G(1,0,0),new G(-1,0,0),new G(0,0,1),new G(0,0,-1),new G(0,1,0),new G(0,-1,0)],this._cubeUps=[new G(0,1,0),new G(0,1,0),new G(0,1,0),new G(0,1,0),new G(0,0,1),new G(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,a=e.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),Tl.setFromMatrixPosition(e.matrixWorld),n.position.copy(Tl),Op.copy(n.position),Op.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Op),n.updateMatrixWorld(),i.makeTranslation(-Tl.x,-Tl.y,-Tl.z),iy.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(iy)}}class LS extends Ur{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new B2}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class z2 extends hg{constructor(){super(new Vo(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class IS extends Ur{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Wt.DEFAULT_UP),this.updateMatrix(),this.target=new Wt,this.shadow=new z2}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class PS extends Ur{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class OS extends Ur{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class BS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new G)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,a=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*a),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*a)),t.addScaledVector(l[6],.315392*(3*a*a-1)),t.addScaledVector(l[7],1.092548*(n*a)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,a=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*a),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*a),t.addScaledVector(l[6],.743125*a*a-.247708),t.addScaledVector(l[7],2*.429043*n*a),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,a=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*a,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*a,t[6]=.315392*(3*a*a-1),t[7]=1.092548*n*a,t[8]=.546274*(n*n-i*i)}}class zS extends Ur{constructor(e=new BS,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class wf extends fi{constructor(e){super(e),this.textures={}}load(e,t,n,i){const a=this,l=new Bi(a.manager);l.setPath(a.path),l.setRequestHeader(a.requestHeader),l.setWithCredentials(a.withCredentials),l.load(e,function(c){try{t(a.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),a.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(a){return t[a]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",a),t[a]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new $e().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const a in e.uniforms){const l=e.uniforms[a];switch(i.uniforms[a]={},l.type){case"t":i.uniforms[a].value=n(l.value);break;case"c":i.uniforms[a].value=new $e().setHex(l.value);break;case"v2":i.uniforms[a].value=new Te().fromArray(l.value);break;case"v3":i.uniforms[a].value=new G().fromArray(l.value);break;case"v4":i.uniforms[a].value=new kt().fromArray(l.value);break;case"m3":i.uniforms[a].value=new bt().fromArray(l.value);break;case"m4":i.uniforms[a].value=new _t().fromArray(l.value);break;default:i.uniforms[a].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const a in e.extensions)i.extensions[a]=e.extensions[a];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let a=e.normalScale;Array.isArray(a)===!1&&(a=[a,a]),i.normalScale=new Te().fromArray(a)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Te().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return wf.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:mS,SpriteMaterial:Jm,RawShaderMaterial:gS,ShaderMaterial:Mi,PointsMaterial:$m,MeshPhysicalMaterial:vS,MeshStandardMaterial:ag,MeshPhongMaterial:_S,MeshToonMaterial:yS,MeshNormalMaterial:xS,MeshLambertMaterial:SS,MeshDepthMaterial:Zm,MeshDistanceMaterial:Km,MeshBasicMaterial:js,MeshMatcapMaterial:MS,LineDashedMaterial:ES,LineBasicMaterial:hi,Material:ni};return new t[e]}}class xm{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class FS extends Rt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class HS extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=new Bi(a.manager);l.setPath(a.path),l.setRequestHeader(a.requestHeader),l.setWithCredentials(a.withCredentials),l.load(e,function(c){try{t(a.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),a.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,x){if(t[x]!==void 0)return t[x];const S=v.interleavedBuffers[x],_=a(v,S.buffer),b=To(S.type,_),A=new uf(b,S.stride);return A.uuid=S.uuid,t[x]=A,A}function a(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=e.isInstancedBufferGeometry?new FS:new Rt,c=e.data.index;if(c!==void 0){const v=To(c.type,c.array);l.setIndex(new an(v,1))}const h=e.data.attributes;for(const v in h){const x=h[v];let M;if(x.isInterleavedBufferAttribute){const S=i(e.data,x.data);M=new Ta(S,x.itemSize,x.offset,x.normalized)}else{const S=To(x.type,x.array),_=x.isInstancedBufferAttribute?Oo:an;M=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),l.setAttribute(v,M)}const f=e.data.morphAttributes;if(f)for(const v in f){const x=f[v],M=[];for(let S=0,_=x.length;S<_;S++){const b=x[S];let A;if(b.isInterleavedBufferAttribute){const T=i(e.data,b.data);A=new Ta(T,b.itemSize,b.offset,b.normalized)}else{const T=To(b.type,b.array);A=new an(T,b.itemSize,b.normalized)}b.name!==void 0&&(A.name=b.name),M.push(A)}l.morphAttributes[v]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=e.data.groups||e.data.drawcalls||e.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const M=m[v];l.addGroup(M.start,M.count,M.materialIndex)}const g=e.data.boundingSphere;if(g!==void 0){const v=new G;g.center!==void 0&&v.fromArray(g.center),l.boundingSphere=new ti(v,g.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class F2 extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=this.path===""?xm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new Bi(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+e+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}a.parse(f,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?xm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const a=new Bi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials);const l=await a.loadAsync(e,t),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),a=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(f)}),c=this.parseTextures(e.textures,l),h=this.parseMaterials(e.materials,c),f=this.parseObject(e.object,a,h,c,n),p=this.parseSkeletons(e.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),t!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&t(f)}return f}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),a=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,a),c=this.parseMaterials(e.materials,l),h=this.parseObject(e.object,i,c,l,t),f=this.parseSkeletons(e.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const a=new Sa().fromJSON(e[n]);t[a.uuid]=a}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(a){a.isBone&&(i[a.uuid]=a)}),e!==void 0)for(let a=0,l=e.length;a<l;a++){const c=new hf().fromJSON(e[a],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new HS;for(let a=0,l=e.length;a<l;a++){let c;const h=e[a];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in ey?c=ey[h.type].fromJSON(h,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const a=new wf;a.setTextures(t);for(let l=0,c=e.length;l<c;l++){const h=e[l];n[h.uuid]===void 0&&(n[h.uuid]=a.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],a=ic.parse(i);t[a.uuid]=a}return t}parseImages(e,t){const n=this,i={};let a;function l(h){return n.manager.itemStart(h),a.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:To(h.type,h.data),width:h.width,height:h.height}:null}if(e!==void 0&&e.length>0){const h=new Af(t);a=new sc(h),a.setCrossOrigin(this.crossOrigin);for(let f=0,p=e.length;f<p;f++){const m=e[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new ls(_.data,_.width,_.height)))}i[m.uuid]=new pa(v)}else{const v=c(m.url);i[m.uuid]=new pa(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:To(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new sc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const h=e[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await a(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new ls(x.data,x.width,x.height)))}n[h.uuid]=new pa(p)}else{const p=await a(h.url);n[h.uuid]=new pa(p)}}}return n}parseTextures(e,t){function n(a,l){return typeof a=="number"?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),l[a])}const i={};if(e!==void 0)for(let a=0,l=e.length;a<l;a++){const c=e[a];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=t[c.image],f=h.data;let p;Array.isArray(f)?(p=new pc,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new ls:p=new rn,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,H2)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],sy),p.wrapT=n(c.wrap[1],sy)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,ry)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,ry)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(e,t,n,i,a){let l;function c(g){return t[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),t[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(e.type){case"Scene":l=new gc,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new $e(e.background):l.background=f(e.background)),e.environment!==void 0&&(l.environment=f(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new cf(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new lf(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(l.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new zn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Vo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new PS(e.color,e.intensity);break;case"DirectionalLight":l=new IS(e.color,e.intensity),l.target=e.target||"";break;case"PointLight":l=new LS(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new OS(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new NS(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),l.target=e.target||"";break;case"HemisphereLight":l=new DS(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new zS().fromJSON(e);break;case"SkinnedMesh":p=c(e.geometry),m=h(e.material),l=new eS(p,m),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":p=c(e.geometry),m=h(e.material),l=new _n(p,m);break;case"InstancedMesh":p=c(e.geometry),m=h(e.material);const g=e.count,v=e.instanceMatrix,x=e.instanceColor;l=new tS(p,m,g),l.instanceMatrix=new Oo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Oo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(e.geometry),m=h(e.material),l=new nS(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const S=new ui;S.min.fromArray(M.boxMin),S.max.fromArray(M.boxMax);const _=new ti;return _.radius=M.sphereRadius,_.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:S,sphereInitialized:M.sphereInitialized,sphere:_}}),l._maxInstanceCount=e.maxInstanceCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=f(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(l._colorsTexture=f(e.colorsTexture.uuid));break;case"LOD":l=new $x;break;case"Line":l=new Ar(c(e.geometry),h(e.material));break;case"LineLoop":l=new iS(c(e.geometry),h(e.material));break;case"LineSegments":l=new As(c(e.geometry),h(e.material));break;case"PointCloud":case"Points":l=new sS(c(e.geometry),h(e.material));break;case"Sprite":l=new Qx(h(e.material));break;case"Group":l=new wo;break;case"Bone":l=new Qm;break;default:l=new Wt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(l.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const g=e.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],t,n,i,a))}if(e.animations!==void 0){const g=e.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(a[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const g=e.levels;for(let v=0;v<g.length;v++){const x=g[v],M=l.getObjectByProperty("uuid",x.object);M!==void 0&&l.addLevel(M,x.distance,x.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Wt}})}}const H2={UVMapping:br,CubeReflectionMapping:Es,CubeRefractionMapping:Tr,EquirectangularReflectionMapping:Do,EquirectangularRefractionMapping:kl,CubeUVReflectionMapping:Fo},sy={RepeatWrapping:Wl,ClampToEdgeWrapping:Rn,MirroredRepeatWrapping:Xl},ry={NearestFilter:Wn,NearestMipmapNearestFilter:Dm,NearestMipmapLinearFilter:bo,LinearFilter:$t,LinearMipmapNearestFilter:Nl,LinearMipmapLinearFilter:_s};class V2 extends fi{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,l=Ys.get(e);if(l!==void 0){if(a.manager.itemStart(e),l.then){l.then(f=>{t&&t(f),a.manager.itemEnd(e)}).catch(f=>{i&&i(f)});return}return setTimeout(function(){t&&t(l),a.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(e,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(f){return Ys.add(e,f),t&&t(f),a.manager.itemEnd(e),f}).catch(function(f){i&&i(f),Ys.remove(e),a.manager.itemError(e),a.manager.itemEnd(e)});Ys.add(e,h),a.manager.itemStart(e)}}let Wu;class fg{static getContext(){return Wu===void 0&&(Wu=new(window.AudioContext||window.webkitAudioContext)),Wu}static setContext(e){Wu=e}}class G2 extends fi{constructor(e){super(e)}load(e,t,n,i){const a=this,l=new Bi(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(h){try{const f=h.slice(0);fg.getContext().decodeAudioData(f,function(m){t(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),a.manager.itemError(e)}}}const ay=new _t,oy=new _t,sa=new _t;class k2{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new zn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new zn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,sa.copy(e.projectionMatrix);const i=t.eyeSep/2,a=i*t.near/t.focus,l=t.near*Math.tan(xa*t.fov*.5)/t.zoom;let c,h;oy.elements[12]=-i,ay.elements[12]=i,c=-l*t.aspect+a,h=l*t.aspect+a,sa.elements[0]=2*t.near/(h-c),sa.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(sa),c=-l*t.aspect-a,h=l*t.aspect-a,sa.elements[0]=2*t.near/(h-c),sa.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(sa)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(oy),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ay)}}class dg{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ly(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=ly();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function ly(){return performance.now()}const ra=new G,cy=new xi,W2=new G,aa=new G;class X2 extends Wt{constructor(){super(),this.type="AudioListener",this.context=fg.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new dg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ra,cy,W2),aa.set(0,0,-1).applyQuaternion(cy),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ra.x,i),t.positionY.linearRampToValueAtTime(ra.y,i),t.positionZ.linearRampToValueAtTime(ra.z,i),t.forwardX.linearRampToValueAtTime(aa.x,i),t.forwardY.linearRampToValueAtTime(aa.y,i),t.forwardZ.linearRampToValueAtTime(aa.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ra.x,ra.y,ra.z),t.setOrientation(aa.x,aa.y,aa.z,n.x,n.y,n.z)}}class VS extends Wt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const oa=new G,uy=new xi,q2=new G,la=new G;class Y2 extends VS{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(oa,uy,q2),la.set(0,0,1).applyQuaternion(uy);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(oa.x,n),t.positionY.linearRampToValueAtTime(oa.y,n),t.positionZ.linearRampToValueAtTime(oa.z,n),t.orientationX.linearRampToValueAtTime(la.x,n),t.orientationY.linearRampToValueAtTime(la.y,n),t.orientationZ.linearRampToValueAtTime(la.z,n)}else t.setPosition(oa.x,oa.y,oa.z),t.setOrientation(la.x,la.y,la.z)}}class Z2{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class GS{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,a,l;switch(t){case"quaternion":i=this._slerp,a=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,a=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,a=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=a,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,a=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[a+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,a,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,a=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const h=t*this._origIndex;this._mixBufferRegion(n,i,h,1-a,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let h=t,f=t+t;h!==f;++h)if(n[h]!==n[h+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let a=n,l=i;a!==l;++a)t[a]=t[i+a%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,a){if(i>=.5)for(let l=0;l!==a;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){xi.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,a){const l=this._workIndex*a;xi.multiplyQuaternionsFlat(e,l,e,t,e,n),xi.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,a){const l=1-i;for(let c=0;c!==a;++c){const h=t+c;e[h]=e[h]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,a){for(let l=0;l!==a;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const pg="\\[\\]\\.:\\/",K2=new RegExp("["+pg+"]","g"),mg="[^"+pg+"]",j2="[^"+pg.replace("\\.","")+"]",J2=/((?:WC+[\/:])*)/.source.replace("WC",mg),Q2=/(WCOD+)?/.source.replace("WCOD",j2),$2=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",mg),e3=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",mg),t3=new RegExp("^"+J2+Q2+$2+e3+"$"),n3=["material","materials","bones","map"];class i3{constructor(e,t,n){const i=n||Gt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=n.length;i!==a;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Gt{constructor(e,t,n){this.path=t,this.parsedPath=n||Gt.parseTrackName(t),this.node=Gt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Gt.Composite(e,t,n):new Gt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(K2,"")}static parseTrackName(e){const t=t3.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const a=n.nodeName.substring(i+1);n3.indexOf(a)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=a)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(a){for(let l=0;l<a.length;l++){const c=a[l];if(c.name===t||c.uuid===t)return c;const h=n(c.children);if(h)return h}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let a=t.propertyIndex;if(e||(e=Gt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let p=0;p<e.length;p++)if(e[p].name===f){f=p;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(f!==void 0){if(e[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[f]}}const l=e[i];if(l===void 0){const f=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(a!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=a}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Gt.Composite=i3;Gt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Gt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Gt.prototype.GetterByBindingType=[Gt.prototype._getValue_direct,Gt.prototype._getValue_array,Gt.prototype._getValue_arrayElement,Gt.prototype._getValue_toArray];Gt.prototype.SetterByBindingTypeAndVersioning=[[Gt.prototype._setValue_direct,Gt.prototype._setValue_direct_setNeedsUpdate,Gt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_array,Gt.prototype._setValue_array_setNeedsUpdate,Gt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_arrayElement,Gt.prototype._setValue_arrayElement_setNeedsUpdate,Gt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_fromArray,Gt.prototype._setValue_fromArray_setNeedsUpdate,Gt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class s3{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Oi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,a=this._bindings,l=a.length;let c,h=e.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=t[v];if(x===void 0){x=h++,t[v]=x,e.push(g);for(let M=0,S=l;M!==S;++M)a[M].push(new Gt(g,n[M],i[M]))}else if(x<f){c=e[x];const M=--f,S=e[M];t[S.uuid]=x,e[x]=S,t[v]=M,e[M]=g;for(let _=0,b=l;_!==b;++_){const A=a[_],T=A[M];let z=A[x];A[x]=T,z===void 0&&(z=new Gt(g,n[_],i[_])),A[M]=z}}else e[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let a=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=t[f];if(p!==void 0&&p>=a){const m=a++,g=e[m];t[g.uuid]=p,e[p]=g,t[f]=m,e[m]=h;for(let v=0,x=i;v!==x;++v){const M=n[v],S=M[m],_=M[p];M[p]=S,M[m]=_}}}this.nCachedObjects_=a}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let a=this.nCachedObjects_,l=e.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=t[p];if(m!==void 0)if(delete t[p],m<a){const g=--a,v=e[g],x=--l,M=e[x];t[v.uuid]=m,e[m]=v,t[M.uuid]=g,e[g]=M,e.pop();for(let S=0,_=i;S!==_;++S){const b=n[S],A=b[g],T=b[x];b[m]=A,b[g]=T,b.pop()}}else{const g=--l,v=e[g];g>0&&(t[v.uuid]=m),e[m]=v,e.pop();for(let x=0,M=i;x!==M;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=a}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const a=this._bindings;if(i!==void 0)return a[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=a.length,n[e]=i,l.push(e),c.push(t),a.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Gt(x,e,t)}return m}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,a=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=e[c];t[f]=n,l[n]=h,l.pop(),a[n]=a[c],a.pop(),i[n]=i[c],i.pop()}}}class kS{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const a=t.tracks,l=a.length,c=new Array(l),h={endingStart:fa,endingEnd:fa};for(let f=0;f!==l;++f){const p=a[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=bx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,a=e._clip.duration,l=a/i,c=i/a;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,a=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=a,h[1]=a+n,f[0]=e/l,f[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const a=this._startTime;if(a!==null){const h=(e-a)*n;h<0||n===0?t=0:(this._startTime=null,t=n*h)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Fm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case sf:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,a=this._loopCount;const l=n===Tx;if(e===0)return a===-1?i:l&&(a&1)===1?t-i:i;if(n===Ex){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(a===-1&&(e>=0?(a=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,a+=Math.abs(c);const h=this.repetitions-a;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(h===1){const f=e<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=a,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(a&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=da,i.endingEnd=da):(e?i.endingStart=this.zeroSlopeAtStart?da:fa:i.endingStart=Yl,t?i.endingEnd=this.zeroSlopeAtEnd?da:fa:i.endingEnd=Yl)}_scheduleFading(e,t,n){const i=this._mixer,a=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=a,h[0]=t,c[1]=a+e,h[1]=n,this}}const r3=new Float32Array(1);class a3 extends Ts{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,a=i.length,l=e._propertyBindings,c=e._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==a;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const M=t&&t._propertyBindings[m].binding.parsedPath;x=new GS(Gt.create(n,v,M),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,a=this._actionsByClip[i];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];a.useCount++===0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];--a.useCount===0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,a=this._actionsByClip;let l=a[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const a=e._clip.uuid,l=this._actionsByClip,c=l[a],h=c.knownActions,f=h[h.length-1],p=e._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),e._byClipCacheIndex=null;const m=c.actionByRoot,g=(e._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[a],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];--a.referenceCount===0&&this._removeInactiveBinding(a)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,a=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=a.length,a.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,a=n.path,l=this._bindingsByRootAndName,c=l[i],h=t[t.length-1],f=e._cacheIndex;h._cacheIndex=f,t[f]=h,t.pop(),delete c[a],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new lg(new Float32Array(2),new Float32Array(2),1,r3),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,a=t[i];e.__cacheIndex=i,t[i]=e,a.__cacheIndex=n,t[n]=a}clipAction(e,t,n){const i=t||this._root,a=i.uuid;let l=typeof e=="string"?ic.findByName(i,e):e;const c=l!==null?l.uuid:e,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=sf),h!==void 0){const m=h.actionByRoot[a];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new kS(this,l,t,n);return this._bindAction(p,f),this._addInactiveAction(p,c,a),p}existingAction(e,t){const n=t||this._root,i=n.uuid,a=typeof e=="string"?ic.findByName(n,e):e,l=a?a.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,a=Math.sign(e),l=this._accuIndex^=1;for(let f=0;f!==n;++f)t[f]._update(i,e,a,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,a=i[n];if(a!==void 0){const l=a.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=t[t.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,t[p]=m,t.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[t];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,a=i[t];if(a!==void 0)for(const l in a){const c=a[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class gg{constructor(e){this.value=e}clone(){return new gg(this.value.clone===void 0?this.value:this.value.clone())}}let o3=0;class l3 extends Ts{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:o3++}),this.name="",this.usage=Zl,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const a=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<a.length;l++)this.uniforms.push(a[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class c3 extends uf{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class u3{constructor(e,t,n,i,a){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=a,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const hy=new _t;class vg{constructor(e,t,n=0,i=1/0){this.ray=new Ho(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Io,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return hy.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(hy),this}intersectObject(e,t=!0,n=[]){return Sm(e,this,n,t),n.sort(fy),n}intersectObjects(e,t=!0,n=[]){for(let i=0,a=e.length;i<a;i++)Sm(e[i],this,n,t);return n.sort(fy),n}}function fy(s,e){return s.distance-e.distance}function Sm(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const a=s.children;for(let l=0,c=a.length;l<c;l++)Sm(a[l],e,t,!0)}}class h3{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(En(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class f3{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class _g{constructor(e,t,n,i){_g.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const a=this.elements;return a[0]=e,a[2]=t,a[1]=n,a[3]=i,this}}const dy=new Te;class d3{constructor(e=new Te(1/0,1/0),t=new Te(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=dy.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,dy).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const py=new G,Xu=new G;class p3{constructor(e=new G,t=new G){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){py.subVectors(e,this.start),Xu.subVectors(this.end,this.start);const n=Xu.dot(Xu);let a=Xu.dot(py)/n;return t&&(a=En(a,0,1)),a}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const my=new G;class m3 extends Wt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Rt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new at(i,3));const a=new hi({fog:!1,toneMapped:!1});this.cone=new As(n,a),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),my.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(my),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const yr=new G,qu=new _t,Bp=new _t;class g3 extends As{constructor(e){const t=WS(e),n=new Rt,i=[],a=[],l=new $e(0,0,1),c=new $e(0,1,0);for(let f=0;f<t.length;f++){const p=t[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),a.push(l.r,l.g,l.b),a.push(c.r,c.g,c.b))}n.setAttribute("position",new at(i,3)),n.setAttribute("color",new at(a,3));const h=new hi({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Bp.copy(this.root.matrixWorld).invert();for(let a=0,l=0;a<t.length;a++){const c=t[a];c.parent&&c.parent.isBone&&(qu.multiplyMatrices(Bp,c.matrixWorld),yr.setFromMatrixPosition(qu),i.setXYZ(l,yr.x,yr.y,yr.z),qu.multiplyMatrices(Bp,c.parent.matrixWorld),yr.setFromMatrixPosition(qu),i.setXYZ(l+1,yr.x,yr.y,yr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function WS(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,WS(s.children[t]));return e}class v3 extends _n{constructor(e,t,n){const i=new xc(t,4,2),a=new js({wireframe:!0,fog:!1,toneMapped:!1});super(i,a),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _3=new G,gy=new $e,vy=new $e;class y3 extends Wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new yc(t);i.rotateY(Math.PI*.5),this.material=new js({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const a=i.getAttribute("position"),l=new Float32Array(a.count*3);i.setAttribute("color",new an(l,3)),this.add(new _n(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");gy.copy(this.light.color),vy.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const a=n<i/2?gy:vy;t.setXYZ(n,a.r,a.g,a.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(_3.setFromMatrixPosition(this.light.matrixWorld).negate())}}class x3 extends As{constructor(e=10,t=10,n=4473924,i=8947848){n=new $e(n),i=new $e(i);const a=t/2,l=e/t,c=e/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=t;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const M=g===a?n:i;M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3}const p=new Rt;p.setAttribute("position",new at(h,3)),p.setAttribute("color",new at(f,3));const m=new hi({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class S3 extends As{constructor(e=10,t=16,n=8,i=64,a=4473924,l=8947848){a=new $e(a),l=new $e(l);const c=[],h=[];if(t>1)for(let m=0;m<t;m++){const g=m/t*(Math.PI*2),v=Math.sin(g)*e,x=Math.cos(g)*e;c.push(0,0,0),c.push(v,0,x);const M=m&1?a:l;h.push(M.r,M.g,M.b),h.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const g=m&1?a:l,v=e-e/n*m;for(let x=0;x<i;x++){let M=x/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),M=(x+1)/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new Rt;f.setAttribute("position",new at(c,3)),f.setAttribute("color",new at(h,3));const p=new hi({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const _y=new G,Yu=new G,yy=new G;class M3 extends Wt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Rt;i.setAttribute("position",new at([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const a=new hi({fog:!1,toneMapped:!1});this.lightPlane=new Ar(i,a),this.add(this.lightPlane),i=new Rt,i.setAttribute("position",new at([0,0,0,0,0,1],3)),this.targetLine=new Ar(i,a),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),_y.setFromMatrixPosition(this.light.matrixWorld),Yu.setFromMatrixPosition(this.light.target.matrixWorld),yy.subVectors(Yu,_y),this.lightPlane.lookAt(Yu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Yu),this.targetLine.scale.z=yy.length()}}const Zu=new G,Mn=new af;class E3 extends As{constructor(e){const t=new Rt,n=new hi({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],a=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){h(x),h(M)}function h(x){i.push(0,0,0),a.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}t.setAttribute("position",new at(i,3)),t.setAttribute("color",new at(a,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new $e(16755200),p=new $e(16711680),m=new $e(43775),g=new $e(16777215),v=new $e(3355443);this.setColors(f,p,m,g,v)}setColors(e,t,n,i,a){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,a.r,a.g,a.b),c.setXYZ(41,a.r,a.g,a.b),c.setXYZ(42,a.r,a.g,a.b),c.setXYZ(43,a.r,a.g,a.b),c.setXYZ(44,a.r,a.g,a.b),c.setXYZ(45,a.r,a.g,a.b),c.setXYZ(46,a.r,a.g,a.b),c.setXYZ(47,a.r,a.g,a.b),c.setXYZ(48,a.r,a.g,a.b),c.setXYZ(49,a.r,a.g,a.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Mn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),bn("c",t,e,Mn,0,0,-1),bn("t",t,e,Mn,0,0,1),bn("n1",t,e,Mn,-n,-i,-1),bn("n2",t,e,Mn,n,-i,-1),bn("n3",t,e,Mn,-n,i,-1),bn("n4",t,e,Mn,n,i,-1),bn("f1",t,e,Mn,-n,-i,1),bn("f2",t,e,Mn,n,-i,1),bn("f3",t,e,Mn,-n,i,1),bn("f4",t,e,Mn,n,i,1),bn("u1",t,e,Mn,n*.7,i*1.1,-1),bn("u2",t,e,Mn,-n*.7,i*1.1,-1),bn("u3",t,e,Mn,0,i*2,-1),bn("cf1",t,e,Mn,-n,0,1),bn("cf2",t,e,Mn,n,0,1),bn("cf3",t,e,Mn,0,-i,1),bn("cf4",t,e,Mn,0,i,1),bn("cn1",t,e,Mn,-n,0,-1),bn("cn2",t,e,Mn,n,0,-1),bn("cn3",t,e,Mn,0,-i,-1),bn("cn4",t,e,Mn,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function bn(s,e,t,n,i,a,l){Zu.set(i,a,l).unproject(n);const c=e[s];if(c!==void 0){const h=t.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Zu.x,Zu.y,Zu.z)}}const Ku=new ui;class b3 extends As{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),a=new Rt;a.setIndex(new an(n,1)),a.setAttribute("position",new an(i,3)),super(a,new hi({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ku.setFromObject(this.object),Ku.isEmpty())return;const t=Ku.min,n=Ku.max,i=this.geometry.attributes.position,a=i.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=t.x,a[4]=n.y,a[5]=n.z,a[6]=t.x,a[7]=t.y,a[8]=n.z,a[9]=n.x,a[10]=t.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=t.z,a[15]=t.x,a[16]=n.y,a[17]=t.z,a[18]=t.x,a[19]=t.y,a[20]=t.z,a[21]=n.x,a[22]=t.y,a[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class T3 extends As{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],a=new Rt;a.setIndex(new an(n,1)),a.setAttribute("position",new at(i,3)),super(a,new hi({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class A3 extends Ar{constructor(e,t=1,n=16776960){const i=n,a=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new Rt;l.setAttribute("position",new at(a,3)),l.computeBoundingSphere(),super(l,new hi({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new Rt;h.setAttribute("position",new at(c,3)),h.computeBoundingSphere(),this.add(new _n(h,new js({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const xy=new G;let ju,zp;class w3 extends Wt{constructor(e=new G(0,0,1),t=new G(0,0,0),n=1,i=16776960,a=n*.2,l=a*.2){super(),this.type="ArrowHelper",ju===void 0&&(ju=new Rt,ju.setAttribute("position",new at([0,0,0,0,1,0],3)),zp=new ko(0,.5,1,5,1),zp.translate(0,-.5,0)),this.position.copy(t),this.line=new Ar(ju,new hi({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new _n(zp,new js({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,a,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{xy.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(xy,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class C3 extends As{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Rt;i.setAttribute("position",new at(t,3)),i.setAttribute("color",new at(n,3));const a=new hi({vertexColors:!0,toneMapped:!1});super(i,a),this.type="AxesHelper"}setColors(e,t,n){const i=new $e,a=this.geometry.attributes.color.array;return i.set(e),i.toArray(a,0),i.toArray(a,3),i.set(t),i.toArray(a,6),i.toArray(a,9),i.set(n),i.toArray(a,12),i.toArray(a,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class R3{constructor(){this.type="ShapePath",this.color=new $e,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Jl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,a,l){return this.currentPath.bezierCurveTo(e,t,n,i,a,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const b=[];for(let A=0,T=_.length;A<T;A++){const z=_[A],D=new Sa;D.curves=z.curves,b.push(D)}return b}function n(_,b){const A=b.length;let T=!1;for(let z=A-1,D=0;D<A;z=D++){let O=b[z],L=b[D],C=L.x-O.x,R=L.y-O.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(O=b[D],C=-C,L=b[z],R=-R),_.y<O.y||_.y>L.y)continue;if(_.y===O.y){if(_.x===O.x)return!0}else{const F=R*(_.x-O.x)-C*(_.y-O.y);if(F===0)return!0;if(F<0)continue;T=!T}}else{if(_.y!==O.y)continue;if(L.x<=_.x&&_.x<=O.x||O.x<=_.x&&_.x<=L.x)return!0}}return T}const i=Ms.isClockWise,a=this.subPaths;if(a.length===0)return[];let l,c,h;const f=[];if(a.length===1)return c=a[0],h=new Sa,h.curves=c.curves,f.push(h),f;let p=!i(a[0].getPoints());p=e?!p:p;const m=[],g=[];let v=[],x=0,M;g[x]=void 0,v[x]=[];for(let _=0,b=a.length;_<b;_++)c=a[_],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new Sa,p:M},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:M[0]});if(!g[0])return t(a);if(g.length>1){let _=!1,b=0;for(let A=0,T=g.length;A<T;A++)m[A]=[];for(let A=0,T=g.length;A<T;A++){const z=v[A];for(let D=0;D<z.length;D++){const O=z[D];let L=!0;for(let C=0;C<g.length;C++)n(O.p,g[C].p)&&(A!==C&&b++,L?(L=!1,m[C].push(O)):_=!0);L&&m[A].push(O)}}b>0&&_===!1&&(v=m)}let S;for(let _=0,b=g.length;_<b;_++){h=g[_].s,f.push(h),S=v[_];for(let A=0,T=S.length;A<T;A++)h.holes.push(S[A].h)}return f}}class U3 extends Ts{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class D3 extends zi{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:lc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=lc);const N3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Um,AddEquation:Mr,AddOperation:mx,AdditiveAnimationBlendMode:Fm,AdditiveBlending:am,AgXToneMapping:xx,AlphaFormat:Lm,AlwaysCompare:Px,AlwaysDepth:lh,AlwaysStencilFunc:hm,AmbientLight:PS,AnimationAction:kS,AnimationClip:ic,AnimationLoader:L2,AnimationMixer:a3,AnimationObjectGroup:s3,AnimationUtils:R2,ArcCurve:rS,ArrayCamera:jx,ArrowHelper:w3,AttachedBindMode:cm,Audio:VS,AudioAnalyser:Z2,AudioContext:fg,AudioListener:X2,AudioLoader:G2,AxesHelper:C3,BackSide:ei,BasicDepthPacking:Ax,BasicShadowMap:Ky,BatchedMesh:nS,Bone:Qm,BooleanKeyframeTrack:Ra,Box2:d3,Box3:ui,Box3Helper:T3,BoxGeometry:Ca,BoxHelper:b3,BufferAttribute:an,BufferGeometry:Rt,BufferGeometryLoader:HS,ByteType:Jh,Cache:Ys,Camera:af,CameraHelper:E3,CanvasTexture:$R,CapsuleGeometry:pf,CatmullRomCurve3:aS,CineonToneMapping:_x,CircleGeometry:mf,ClampToEdgeWrapping:Rn,Clock:dg,Color:$e,ColorKeyframeTrack:cg,ColorManagement:Ft,CompressedArrayTexture:JR,CompressedCubeTexture:QR,CompressedTexture:ff,CompressedTextureLoader:I2,ConeGeometry:gf,ConstantAlphaFactor:fx,ConstantColorFactor:ux,Controls:U3,CubeCamera:kx,CubeReflectionMapping:Es,CubeRefractionMapping:Tr,CubeTexture:pc,CubeTextureLoader:US,CubeUVReflectionMapping:Fo,CubicBezierCurve:tg,CubicBezierCurve3:oS,CubicInterpolant:AS,CullFaceBack:rm,CullFaceFront:Zy,CullFaceFrontBack:RE,CullFaceNone:Yy,Curve:us,CurvePath:cS,CustomBlending:jy,CustomToneMapping:yx,CylinderGeometry:ko,Cylindrical:f3,Data3DTexture:Gm,DataArrayTexture:rf,DataTexture:ls,DataTextureLoader:ug,DataUtils:ma,DecrementStencilOp:GE,DecrementWrapStencilOp:WE,DefaultLoadingManager:RS,DepthFormat:ya,DepthStencilFormat:ba,DepthTexture:Ym,DetachedBindMode:Mx,DirectionalLight:IS,DirectionalLightHelper:M3,DiscreteInterpolant:wS,DodecahedronGeometry:vf,DoubleSide:os,DstAlphaFactor:rx,DstColorFactor:ox,DynamicCopyUsage:rb,DynamicDrawUsage:$E,DynamicReadUsage:nb,EdgesGeometry:uS,EllipseCurve:df,EqualCompare:Dx,EqualDepth:uh,EqualStencilFunc:ZE,EquirectangularReflectionMapping:Do,EquirectangularRefractionMapping:kl,Euler:Fi,EventDispatcher:Ts,ExtrudeGeometry:yf,FileLoader:Bi,Float16BufferAttribute:Yb,Float32BufferAttribute:at,FloatType:vn,Fog:cf,FogExp2:lf,FramebufferTexture:jR,FrontSide:Ks,Frustum:mc,GLBufferAttribute:u3,GLSL1:ob,GLSL3:fm,GreaterCompare:Nx,GreaterDepth:fh,GreaterEqualCompare:Ix,GreaterEqualDepth:hh,GreaterEqualStencilFunc:QE,GreaterStencilFunc:jE,GridHelper:x3,Group:wo,HalfFloatType:Fn,HemisphereLight:DS,HemisphereLightHelper:y3,IcosahedronGeometry:_c,ImageBitmapLoader:V2,ImageLoader:sc,ImageUtils:zx,IncrementStencilOp:VE,IncrementWrapStencilOp:kE,InstancedBufferAttribute:Oo,InstancedBufferGeometry:FS,InstancedInterleavedBuffer:c3,InstancedMesh:tS,Int16BufferAttribute:Xb,Int32BufferAttribute:qb,Int8BufferAttribute:Gb,IntType:uc,InterleavedBuffer:uf,InterleavedBufferAttribute:Ta,Interpolant:Sc,InterpolateDiscrete:ql,InterpolateLinear:Hh,InterpolateSmooth:th,InvertStencilOp:XE,KeepStencilOp:ca,KeyframeTrack:hs,LOD:$x,LatheGeometry:vc,Layers:Io,LessCompare:Ux,LessDepth:ch,LessEqualCompare:Hm,LessEqualDepth:Ma,LessEqualStencilFunc:KE,LessStencilFunc:YE,Light:Ur,LightProbe:zS,Line:Ar,Line3:p3,LineBasicMaterial:hi,LineCurve:ng,LineCurve3:lS,LineDashedMaterial:ES,LineLoop:iS,LineSegments:As,LinearFilter:$t,LinearInterpolant:lg,LinearMipMapLinearFilter:um,LinearMipMapNearestFilter:NE,LinearMipmapLinearFilter:_s,LinearMipmapNearestFilter:Nl,LinearSRGBColorSpace:cs,LinearToneMapping:gx,LinearTransfer:dc,Loader:fi,LoaderUtils:xm,LoadingManager:Af,LoopOnce:Ex,LoopPingPong:Tx,LoopRepeat:bx,LuminanceAlphaFormat:Om,LuminanceFormat:Pm,MOUSE:wE,Material:ni,MaterialLoader:wf,MathUtils:bb,Matrix2:_g,Matrix3:bt,Matrix4:_t,MaxEquation:ex,Mesh:_n,MeshBasicMaterial:js,MeshDepthMaterial:Zm,MeshDistanceMaterial:Km,MeshLambertMaterial:SS,MeshMatcapMaterial:MS,MeshNormalMaterial:xS,MeshPhongMaterial:_S,MeshPhysicalMaterial:vS,MeshStandardMaterial:ag,MeshToonMaterial:yS,MinEquation:$y,MirroredRepeatWrapping:Xl,MixOperation:px,MultiplyBlending:lm,MultiplyOperation:cc,NearestFilter:Wn,NearestMipMapLinearFilter:DE,NearestMipMapNearestFilter:UE,NearestMipmapLinearFilter:bo,NearestMipmapNearestFilter:Dm,NeutralToneMapping:Sx,NeverCompare:Rx,NeverDepth:oh,NeverStencilFunc:qE,NoBlending:xs,NoColorSpace:Xs,NoToneMapping:Ss,NormalAnimationBlendMode:sf,NormalBlending:_a,NotEqualCompare:Lx,NotEqualDepth:dh,NotEqualStencilFunc:JE,NumberKeyframeTrack:tc,Object3D:Wt,ObjectLoader:F2,ObjectSpaceNormalMap:Cx,OctahedronGeometry:yc,OneFactor:nx,OneMinusConstantAlphaFactor:dx,OneMinusConstantColorFactor:hx,OneMinusDstAlphaFactor:ax,OneMinusDstColorFactor:lx,OneMinusSrcAlphaFactor:ah,OneMinusSrcColorFactor:sx,OrthographicCamera:Vo,PCFShadowMap:jh,PCFSoftShadowMap:Dl,PMREMGenerator:dm,Path:Jl,PerspectiveCamera:zn,Plane:Sr,PlaneGeometry:Cr,PlaneHelper:A3,PointLight:LS,PointLightHelper:v3,Points:sS,PointsMaterial:$m,PolarGridHelper:S3,PolyhedronGeometry:Rr,PositionalAudio:Y2,PropertyBinding:Gt,PropertyMixer:GS,QuadraticBezierCurve:ig,QuadraticBezierCurve3:sg,Quaternion:xi,QuaternionKeyframeTrack:Mc,QuaternionLinearInterpolant:CS,RED_GREEN_RGTC2_Format:zh,RED_RGTC1_Format:zm,REVISION:lc,RGBADepthPacking:wx,RGBAFormat:Tn,RGBAIntegerFormat:nf,RGBA_ASTC_10x10_Format:Nh,RGBA_ASTC_10x5_Format:Rh,RGBA_ASTC_10x6_Format:Uh,RGBA_ASTC_10x8_Format:Dh,RGBA_ASTC_12x10_Format:Lh,RGBA_ASTC_12x12_Format:Ih,RGBA_ASTC_4x4_Format:Sh,RGBA_ASTC_5x4_Format:Mh,RGBA_ASTC_5x5_Format:Eh,RGBA_ASTC_6x5_Format:bh,RGBA_ASTC_6x6_Format:Th,RGBA_ASTC_8x5_Format:Ah,RGBA_ASTC_8x6_Format:wh,RGBA_ASTC_8x8_Format:Ch,RGBA_BPTC_Format:Bl,RGBA_ETC2_EAC_Format:xh,RGBA_PVRTC_2BPPV1_Format:vh,RGBA_PVRTC_4BPPV1_Format:gh,RGBA_S3TC_DXT1_Format:Il,RGBA_S3TC_DXT3_Format:Pl,RGBA_S3TC_DXT5_Format:Ol,RGBDepthPacking:BE,RGBFormat:Im,RGBIntegerFormat:LE,RGB_BPTC_SIGNED_Format:Ph,RGB_BPTC_UNSIGNED_Format:Oh,RGB_ETC1_Format:_h,RGB_ETC2_Format:yh,RGB_PVRTC_2BPPV1_Format:mh,RGB_PVRTC_4BPPV1_Format:ph,RGB_S3TC_DXT1_Format:Ll,RGDepthPacking:zE,RGFormat:Bm,RGIntegerFormat:tf,RawShaderMaterial:gS,Ray:Ho,Raycaster:vg,RectAreaLight:OS,RedFormat:hc,RedIntegerFormat:fc,ReinhardToneMapping:vx,RenderTarget:Fx,RepeatWrapping:Wl,ReplaceStencilOp:HE,ReverseSubtractEquation:Qy,RingGeometry:xf,SIGNED_RED_GREEN_RGTC2_Format:Fh,SIGNED_RED_RGTC1_Format:Bh,SRGBColorSpace:kn,SRGBTransfer:Qt,Scene:gc,ShaderChunk:Ct,ShaderLib:as,ShaderMaterial:Mi,ShadowMaterial:mS,Shape:Sa,ShapeGeometry:Sf,ShapePath:R3,ShapeUtils:Ms,ShortType:Qh,Skeleton:hf,SkeletonHelper:g3,SkinnedMesh:eS,Source:pa,Sphere:ti,SphereGeometry:xc,Spherical:h3,SphericalHarmonics3:BS,SplineCurve:rg,SpotLight:NS,SpotLightHelper:m3,Sprite:Qx,SpriteMaterial:Jm,SrcAlphaFactor:rh,SrcAlphaSaturateFactor:cx,SrcColorFactor:ix,StaticCopyUsage:sb,StaticDrawUsage:Zl,StaticReadUsage:tb,StereoCamera:k2,StreamCopyUsage:ab,StreamDrawUsage:eb,StreamReadUsage:ib,StringKeyframeTrack:Ua,SubtractEquation:Jy,SubtractiveBlending:om,TOUCH:CE,TangentSpaceNormalMap:wr,TetrahedronGeometry:Mf,Texture:rn,TextureLoader:P2,TextureUtils:UR,TorusGeometry:Ef,TorusKnotGeometry:bf,Triangle:yi,TriangleFanDrawMode:OE,TriangleStripDrawMode:PE,TrianglesDrawMode:IE,TubeGeometry:Tf,UVMapping:br,Uint16BufferAttribute:km,Uint32BufferAttribute:Wm,Uint8BufferAttribute:kb,Uint8ClampedBufferAttribute:Wb,Uniform:gg,UniformsGroup:l3,UniformsLib:We,UniformsUtils:Gx,UnsignedByteType:Si,UnsignedInt248Type:Ea,UnsignedInt5999Type:Nm,UnsignedIntType:bs,UnsignedShort4444Type:$h,UnsignedShort5551Type:ef,UnsignedShortType:No,VSMShadowMap:rs,Vector2:Te,Vector3:G,Vector4:kt,VectorKeyframeTrack:nc,VideoTexture:KR,WebGL3DRenderTarget:Nb,WebGLArrayRenderTarget:Db,WebGLCoordinateSystem:ys,WebGLCubeRenderTarget:Xm,WebGLMultipleRenderTargets:D3,WebGLRenderTarget:zi,WebGLRenderer:jm,WebGLUtils:Kx,WebGPUCoordinateSystem:Kl,WireframeGeometry:pS,WrapAroundEnding:Yl,ZeroCurvatureEnding:fa,ZeroFactor:tx,ZeroSlopeEnding:da,ZeroStencilOp:FE,createCanvasElement:Bx},Symbol.toStringTag,{value:"Module"}));var Fp={exports:{}},Ws={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Sy;function L3(){return Sy||(Sy=1,Ws.ConcurrentRoot=1,Ws.ContinuousEventPriority=8,Ws.DefaultEventPriority=32,Ws.DiscreteEventPriority=2,Ws.IdleEventPriority=268435456,Ws.LegacyRoot=0,Ws.NoEventPriority=0),Ws}var My;function I3(){return My||(My=1,Fp.exports=L3()),Fp.exports}var ih=I3(),Hp={exports:{}},Vp={},Gp={exports:{}},kp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ey;function P3(){if(Ey)return kp;Ey=1;var s=Rm();function e(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var t=typeof Object.is=="function"?Object.is:e,n=s.useState,i=s.useEffect,a=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),M=x[0].inst,S=x[1];return a(function(){M.value=v,M.getSnapshot=g,h(M)&&S({inst:M})},[m,v,g]),i(function(){return h(M)&&S({inst:M}),m(function(){h(M)&&S({inst:M})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!t(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return kp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,kp}var by;function O3(){return by||(by=1,Gp.exports=P3()),Gp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ty;function B3(){if(Ty)return Vp;Ty=1;var s=Rm(),e=O3();function t(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:t,i=e.useSyncExternalStore,a=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Vp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=a(null);if(x.current===null){var M={hasValue:!1,value:null};x.current=M}else M=x.current;x=c(function(){function _(D){if(!b){if(b=!0,A=D,D=g(D),v!==void 0&&M.hasValue){var O=M.value;if(v(O,D))return T=O}return T=D}if(O=T,n(A,D))return O;var L=g(D);return v!==void 0&&v(O,L)?(A=D,O):(A=D,T=L)}var b=!1,A,T,z=m===void 0?null:m;return[function(){return _(p())},z===null?void 0:function(){return _(z())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){M.hasValue=!0,M.value=S},[S]),h(S),S},Vp}var Ay;function z3(){return Ay||(Ay=1,Hp.exports=B3()),Hp.exports}var F3=z3();const H3=qy(F3),wy=s=>{let e;const t=new Set,n=(f,p)=>{const m=typeof f=="function"?f(e):f;if(!Object.is(m,e)){const g=e;e=p??(typeof m!="object"||m===null)?m:Object.assign({},e,m),t.forEach(v=>v(e,g))}},i=()=>e,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(t.add(f),()=>t.delete(f))},h=e=s(n,i,c);return c},V3=s=>s?wy(s):wy,{useSyncExternalStoreWithSelector:G3}=H3,k3=s=>s;function W3(s,e=k3,t){const n=G3(s.subscribe,s.getState,s.getInitialState,e,t);return AE.useDebugValue(n),n}const Cy=(s,e)=>{const t=V3(s),n=(i,a=e)=>W3(t,i,a);return Object.assign(n,t),n},XS=(s,e)=>s?Cy(s,e):Cy;var Wp={exports:{}},Xp={exports:{}},qp={exports:{}},Yp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ry;function X3(){return Ry||(Ry=1,function(s){function e(B,Q){var Y=B.length;B.push(Q);e:for(;0<Y;){var le=Y-1>>>1,he=B[le];if(0<i(he,Q))B[le]=Q,B[Y]=he,Y=le;else break e}}function t(B){return B.length===0?null:B[0]}function n(B){if(B.length===0)return null;var Q=B[0],Y=B.pop();if(Y!==Q){B[0]=Y;e:for(var le=0,he=B.length,xe=he>>>1;le<xe;){var Ae=2*(le+1)-1,Ze=B[Ae],se=Ae+1,Se=B[se];if(0>i(Ze,Y))se<he&&0>i(Se,Ze)?(B[le]=Se,B[se]=Y,le=se):(B[le]=Ze,B[Ae]=Y,le=Ae);else if(se<he&&0>i(Se,Y))B[le]=Se,B[se]=Y,le=se;else break e}}return Q}function i(B,Q){var Y=B.sortIndex-Q.sortIndex;return Y!==0?Y:B.id-Q.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var a=performance;s.unstable_now=function(){return a.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;function A(B){for(var Q=t(f);Q!==null;){if(Q.callback===null)n(f);else if(Q.startTime<=B)n(f),Q.sortIndex=Q.expirationTime,e(h,Q);else break;Q=t(f)}}function T(B){if(M=!1,A(B),!x)if(t(h)!==null)x=!0,J();else{var Q=t(f);Q!==null&&oe(T,Q.startTime-B)}}var z=!1,D=-1,O=5,L=-1;function C(){return!(s.unstable_now()-L<O)}function R(){if(z){var B=s.unstable_now();L=B;var Q=!0;try{e:{x=!1,M&&(M=!1,_(D),D=-1),v=!0;var Y=g;try{t:{for(A(B),m=t(h);m!==null&&!(m.expirationTime>B&&C());){var le=m.callback;if(typeof le=="function"){m.callback=null,g=m.priorityLevel;var he=le(m.expirationTime<=B);if(B=s.unstable_now(),typeof he=="function"){m.callback=he,A(B),Q=!0;break t}m===t(h)&&n(h),A(B)}else n(h);m=t(h)}if(m!==null)Q=!0;else{var xe=t(f);xe!==null&&oe(T,xe.startTime-B),Q=!1}}break e}finally{m=null,g=Y,v=!1}Q=void 0}}finally{Q?F():z=!1}}}var F;if(typeof b=="function")F=function(){b(R)};else if(typeof MessageChannel<"u"){var ee=new MessageChannel,K=ee.port2;ee.port1.onmessage=R,F=function(){K.postMessage(null)}}else F=function(){S(R,0)};function J(){z||(z=!0,F())}function oe(B,Q){D=S(function(){B(s.unstable_now())},Q)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(B){B.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<B?Math.floor(1e3/B):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return t(h)},s.unstable_next=function(B){switch(g){case 1:case 2:case 3:var Q=3;break;default:Q=g}var Y=g;g=Q;try{return B()}finally{g=Y}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(B,Q){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var Y=g;g=B;try{return Q()}finally{g=Y}},s.unstable_scheduleCallback=function(B,Q,Y){var le=s.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?le+Y:le):Y=le,B){case 1:var he=-1;break;case 2:he=250;break;case 5:he=1073741823;break;case 4:he=1e4;break;default:he=5e3}return he=Y+he,B={id:p++,callback:Q,priorityLevel:B,startTime:Y,expirationTime:he,sortIndex:-1},Y>le?(B.sortIndex=Y,e(f,B),t(h)===null&&B===t(f)&&(M?(_(D),D=-1):M=!0,oe(T,Y-le))):(B.sortIndex=he,e(h,B),x||v||(x=!0,J())),B},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(B){var Q=g;return function(){var Y=g;g=Q;try{return B.apply(this,arguments)}finally{g=Y}}}}(Yp)),Yp}var Uy;function q3(){return Uy||(Uy=1,qp.exports=X3()),qp.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Dy;function Y3(){return Dy||(Dy=1,function(s){s.exports=function(e){function t(r,o,u,d){return new kM(r,o,u,d)}function n(){}function i(r){var o="https://react.dev/errors/"+r;if(1<arguments.length){o+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)o+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+r+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(r){return r===null||typeof r!="object"?null:(r=o0&&r[o0]||r["@@iterator"],typeof r=="function"?r:null)}function l(r){if(r==null)return null;if(typeof r=="function")return r.$$typeof===KM?null:r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case Ba:return"Fragment";case Oa:return"Portal";case _d:return"Profiler";case s0:return"StrictMode";case xd:return"Suspense";case Sd:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case ir:return(r.displayName||"Context")+".Provider";case r0:return(r._context.displayName||"Context")+".Consumer";case yd:var o=r.render;return r=r.displayName,r||(r=o.displayName||o.name||"",r=r!==""?"ForwardRef("+r+")":"ForwardRef"),r;case Md:return o=r.displayName||null,o!==null?o:l(r.type)||"Memo";case sr:o=r._payload,r=r._init;try{return l(r(o))}catch{}}return null}function c(r){if(Ed===void 0)try{throw Error()}catch(u){var o=u.stack.trim().match(/\n( *(at )?)/);Ed=o&&o[1]||"",l0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Ed+r+l0}function h(r,o){if(!r||bd)return"";bd=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(o){var Ye=function(){throw Error()};if(Object.defineProperty(Ye.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Ye,[])}catch(At){var Qe=At}Reflect.construct(r,[],Ye)}else{try{Ye.call()}catch(At){Qe=At}r.call(Ye.prototype)}}else{try{throw Error()}catch(At){Qe=At}(Ye=r())&&typeof Ye.catch=="function"&&Ye.catch(function(){})}}catch(At){if(At&&Qe&&typeof At.stack=="string")return[At.stack,Qe.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var E=d.DetermineComponentFrameRoot(),I=E[0],Z=E[1];if(I&&Z){var ie=I.split(`
`),ye=Z.split(`
`);for(y=d=0;d<ie.length&&!ie[d].includes("DetermineComponentFrameRoot");)d++;for(;y<ye.length&&!ye[y].includes("DetermineComponentFrameRoot");)y++;if(d===ie.length||y===ye.length)for(d=ie.length-1,y=ye.length-1;1<=d&&0<=y&&ie[d]!==ye[y];)y--;for(;1<=d&&0<=y;d--,y--)if(ie[d]!==ye[y]){if(d!==1||y!==1)do if(d--,y--,0>y||ie[d]!==ye[y]){var Oe=`
`+ie[d].replace(" at new "," at ");return r.displayName&&Oe.includes("<anonymous>")&&(Oe=Oe.replace("<anonymous>",r.displayName)),Oe}while(1<=d&&0<=y);break}}}finally{bd=!1,Error.prepareStackTrace=u}return(u=r?r.displayName||r.name:"")?c(u):""}function f(r){switch(r.tag){case 26:case 27:case 5:return c(r.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return r=h(r.type,!1),r;case 11:return r=h(r.type.render,!1),r;case 1:return r=h(r.type,!0),r;default:return""}}function p(r){try{var o="";do o+=f(r),r=r.return;while(r);return o}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(r){var o=r,u=r;if(r.alternate)for(;o.return;)o=o.return;else{r=o;do o=r,(o.flags&4098)!==0&&(u=o.return),r=o.return;while(r)}return o.tag===3?u:null}function g(r){if(m(r)!==r)throw Error(i(188))}function v(r){var o=r.alternate;if(!o){if(o=m(r),o===null)throw Error(i(188));return o!==r?null:r}for(var u=r,d=o;;){var y=u.return;if(y===null)break;var E=y.alternate;if(E===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===E.child){for(E=y.child;E;){if(E===u)return g(y),r;if(E===d)return g(y),o;E=E.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=E;else{for(var I=!1,Z=y.child;Z;){if(Z===u){I=!0,u=y,d=E;break}if(Z===d){I=!0,d=y,u=E;break}Z=Z.sibling}if(!I){for(Z=E.child;Z;){if(Z===u){I=!0,u=E,d=y;break}if(Z===d){I=!0,d=E,u=y;break}Z=Z.sibling}if(!I)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?r:o}function x(r){var o=r.tag;if(o===5||o===26||o===27||o===6)return r;for(r=r.child;r!==null;){if(o=x(r),o!==null)return o;r=r.sibling}return null}function M(r){var o=r.tag;if(o===5||o===26||o===27||o===6)return r;for(r=r.child;r!==null;){if(r.tag!==4&&(o=M(r),o!==null))return o;r=r.sibling}return null}function S(r){return{current:r}}function _(r){0>Fa||(r.current=Ud[Fa],Ud[Fa]=null,Fa--)}function b(r,o){Fa++,Ud[Fa]=r.current,r.current=o}function A(r){return r>>>=0,r===0?32:31-(uE(r)/hE|0)|0}function T(r){var o=r&42;if(o!==0)return o;switch(r&-r){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return r&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return r}}function z(r,o){var u=r.pendingLanes;if(u===0)return 0;var d=0,y=r.suspendedLanes,E=r.pingedLanes,I=r.warmLanes;r=r.finishedLanes!==0;var Z=u&134217727;return Z!==0?(u=Z&~y,u!==0?d=T(u):(E&=Z,E!==0?d=T(E):r||(I=Z&~I,I!==0&&(d=T(I))))):(Z=u&~y,Z!==0?d=T(Z):E!==0?d=T(E):r||(I=u&~I,I!==0&&(d=T(I)))),d===0?0:o!==0&&o!==d&&(o&y)===0&&(y=d&-d,I=o&-o,y>=I||y===32&&(I&4194176)!==0)?o:d}function D(r,o){return(r.pendingLanes&~(r.suspendedLanes&~r.pingedLanes)&o)===0}function O(r,o){switch(r){case 1:case 2:case 4:case 8:return o+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function L(){var r=Hc;return Hc<<=1,(Hc&4194176)===0&&(Hc=128),r}function C(){var r=Vc;return Vc<<=1,(Vc&62914560)===0&&(Vc=4194304),r}function R(r){for(var o=[],u=0;31>u;u++)o.push(r);return o}function F(r,o){r.pendingLanes|=o,o!==268435456&&(r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0)}function ee(r,o,u,d,y,E){var I=r.pendingLanes;r.pendingLanes=u,r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0,r.expiredLanes&=u,r.entangledLanes&=u,r.errorRecoveryDisabledLanes&=u,r.shellSuspendCounter=0;var Z=r.entanglements,ie=r.expirationTimes,ye=r.hiddenUpdates;for(u=I&~u;0<u;){var Oe=31-Ri(u),Ye=1<<Oe;Z[Oe]=0,ie[Oe]=-1;var Qe=ye[Oe];if(Qe!==null)for(ye[Oe]=null,Oe=0;Oe<Qe.length;Oe++){var At=Qe[Oe];At!==null&&(At.lane&=-536870913)}u&=~Ye}d!==0&&K(r,d,0),E!==0&&y===0&&r.tag!==0&&(r.suspendedLanes|=E&~(I&~o))}function K(r,o,u){r.pendingLanes|=o,r.suspendedLanes&=~o;var d=31-Ri(o);r.entangledLanes|=o,r.entanglements[d]=r.entanglements[d]|1073741824|u&4194218}function J(r,o){var u=r.entangledLanes|=o;for(r=r.entanglements;u;){var d=31-Ri(u),y=1<<d;y&o|r[d]&o&&(r[d]|=o),u&=~y}}function oe(r){return r&=-r,2<r?8<r?(r&134217727)!==0?32:268435456:8:2}function B(r){if(Ui&&typeof Ui.onCommitFiberRoot=="function")try{Ui.onCommitFiberRoot(nl,r,void 0,(r.current.flags&128)===128)}catch{}}function Q(r){if(typeof gE=="function"&&vE(r),Ui&&typeof Ui.setStrictMode=="function")try{Ui.setStrictMode(nl,r)}catch{}}function Y(r,o){return r===o&&(r!==0||1/r===1/o)||r!==r&&o!==o}function le(r,o){if(typeof r=="object"&&r!==null){var u=I0.get(r);return u!==void 0?u:(o={value:r,source:o,stack:p(o)},I0.set(r,o),o)}return{value:r,source:o,stack:p(o)}}function he(r,o){Va[Ga++]=Wc,Va[Ga++]=kc,kc=r,Wc=o}function xe(r,o,u){Gi[ki++]=Ns,Gi[ki++]=Ls,Gi[ki++]=Hr,Hr=r;var d=Ns;r=Ls;var y=32-Ri(d)-1;d&=~(1<<y),u+=1;var E=32-Ri(o)+y;if(30<E){var I=y-y%5;E=(d&(1<<I)-1).toString(32),d>>=I,y-=I,Ns=1<<32-Ri(o)+y|u<<y|d,Ls=E+r}else Ns=1<<E|u<<y|d,Ls=r}function Ae(r){r.return!==null&&(he(r,1),xe(r,1,0))}function Ze(r){for(;r===kc;)kc=Va[--Ga],Va[Ga]=null,Wc=Va[--Ga],Va[Ga]=null;for(;r===Hr;)Hr=Gi[--ki],Gi[ki]=null,Ls=Gi[--ki],Gi[ki]=null,Ns=Gi[--ki],Gi[ki]=null}function se(r,o){b(ar,o),b(il,r),b(Gn,null),r=QM(o),_(Gn),b(Gn,r)}function Se(){_(Gn),_(il),_(ar)}function De(r){r.memoizedState!==null&&b(Xc,r);var o=Gn.current,u=$M(o,r.type);o!==u&&(b(il,r),b(Gn,u))}function Ue(r){il.current===r&&(_(Gn),_(il)),Xc.current===r&&(_(Xc),Ds?Fr._currentValue=za:Fr._currentValue2=za)}function je(r){var o=Error(i(418,""));throw Ne(le(o,r)),Ld}function mt(r,o){if(!Hi)throw Error(i(175));q1(r.stateNode,r.type,r.memoizedProps,o,r)||je(r)}function ft(r){for(ri=r.return;ri;)switch(ri.tag){case 3:case 27:ds=!0;return;case 5:case 13:ds=!1;return;default:ri=ri.return}}function Tt(r){if(!Hi||r!==ri)return!1;if(!Xt)return ft(r),Xt=!0,!1;var o=!1;if(Kn?r.tag!==3&&r.tag!==27&&(r.tag!==5||E0(r.type)&&!Fc(r.type,r.memoizedProps))&&(o=!0):r.tag!==3&&(r.tag!==5||E0(r.type)&&!Fc(r.type,r.memoizedProps))&&(o=!0),o&&jn&&je(r),ft(r),r.tag===13){if(!Hi)throw Error(i(316));if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(i(317));jn=K1(r)}else jn=ri?S0(r.stateNode):null;return!0}function Me(){Hi&&(jn=ri=null,Xt=!1)}function Ne(r){$i===null?$i=[r]:$i.push(r)}function W(){for(var r=ka,o=Id=ka=0;o<r;){var u=Wi[o];Wi[o++]=null;var d=Wi[o];Wi[o++]=null;var y=Wi[o];Wi[o++]=null;var E=Wi[o];if(Wi[o++]=null,d!==null&&y!==null){var I=d.pending;I===null?y.next=y:(y.next=I.next,I.next=y),d.pending=y}E!==0&&ze(u,y,E)}}function nt(r,o,u,d){Wi[ka++]=r,Wi[ka++]=o,Wi[ka++]=u,Wi[ka++]=d,Id|=d,r.lanes|=d,r=r.alternate,r!==null&&(r.lanes|=d)}function Re(r,o,u,d){return nt(r,o,u,d),ut(r)}function Ge(r,o){return nt(r,null,null,o),ut(r)}function ze(r,o,u){r.lanes|=u;var d=r.alternate;d!==null&&(d.lanes|=u);for(var y=!1,E=r.return;E!==null;)E.childLanes|=u,d=E.alternate,d!==null&&(d.childLanes|=u),E.tag===22&&(r=E.stateNode,r===null||r._visibility&1||(y=!0)),r=E,E=E.return;y&&o!==null&&r.tag===3&&(E=r.stateNode,y=31-Ri(u),E=E.hiddenUpdates,r=E[y],r===null?E[y]=[o]:r.push(o),o.lane=u|536870912)}function ut(r){if(50<fl)throw fl=0,jd=null,Error(i(185));for(var o=r.return;o!==null;)r=o,o=r.return;return r.tag===3?r.stateNode:null}function He(r){r!==Wa&&r.next===null&&(Wa===null?qc=Wa=r:Wa=Wa.next=r),Yc=!0,Pd||(Pd=!0,_e(N))}function H(r,o){if(!Od&&Yc){Od=!0;do for(var u=!1,d=qc;d!==null;){if(r!==0){var y=d.pendingLanes;if(y===0)var E=0;else{var I=d.suspendedLanes,Z=d.pingedLanes;E=(1<<31-Ri(42|r)+1)-1,E&=y&~(I&~Z),E=E&201326677?E&201326677|1:E?E|2:0}E!==0&&(u=!0,be(d,E))}else E=Ht,E=z(d,d===on?E:0),(E&3)===0||D(d,E)||(u=!0,be(d,E));d=d.next}while(u);Od=!1}}function N(){Yc=Pd=!1;var r=0;Xa!==0&&(o1()&&(r=Xa),Xa=0);for(var o=Qi(),u=null,d=qc;d!==null;){var y=d.next,E=re(d,o);E===0?(d.next=null,u===null?qc=y:u.next=y,y===null&&(Wa=u)):(u=d,(r!==0||(E&3)!==0)&&(Yc=!0)),d=y}H(r)}function re(r,o){for(var u=r.suspendedLanes,d=r.pingedLanes,y=r.expirationTimes,E=r.pendingLanes&-62914561;0<E;){var I=31-Ri(E),Z=1<<I,ie=y[I];ie===-1?((Z&u)===0||(Z&d)!==0)&&(y[I]=O(Z,o)):ie<=o&&(r.expiredLanes|=Z),E&=~Z}if(o=on,u=Ht,u=z(r,r===o?u:0),d=r.callbackNode,u===0||r===o&&ln===2||r.cancelPendingCommit!==null)return d!==null&&d!==null&&Dd(d),r.callbackNode=null,r.callbackPriority=0;if((u&3)===0||D(r,u)){if(o=u&-u,o===r.callbackPriority)return o;switch(d!==null&&Dd(d),oe(u)){case 2:case 8:u=pE;break;case 32:u=Nd;break;case 268435456:u=mE;break;default:u=Nd}return d=ve.bind(null,r),u=Gc(u,d),r.callbackPriority=o,r.callbackNode=u,o}return d!==null&&d!==null&&Dd(d),r.callbackPriority=2,r.callbackNode=null,2}function ve(r,o){var u=r.callbackNode;if(Or()&&r.callbackNode!==u)return null;var d=Ht;return d=z(r,r===on?d:0),d===0?null:(Bv(r,d,o),re(r,Qi()),r.callbackNode!=null&&r.callbackNode===u?ve.bind(null,r):null)}function be(r,o){if(Or())return null;Bv(r,o,!0)}function _e(r){d1?p1(function(){(sn&6)!==0?Gc(L0,r):r()}):Gc(L0,r)}function it(){return Xa===0&&(Xa=L()),Xa}function Ve(r,o){if(sl===null){var u=sl=[];Bd=0,qa=it(),Ya={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Bd++,o.then(qe,qe),o}function qe(){if(--Bd===0&&sl!==null){Ya!==null&&(Ya.status="fulfilled");var r=sl;sl=null,qa=0,Ya=null;for(var o=0;o<r.length;o++)(0,r[o])()}}function Ut(r,o){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return r.then(function(){d.status="fulfilled",d.value=o;for(var y=0;y<u.length;y++)(0,u[y])(o)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function Le(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function et(r,o){r=r.updateQueue,o.updateQueue===r&&(o.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,callbacks:null})}function st(r){return{lane:r,tag:0,payload:null,callback:null,next:null}}function tt(r,o,u){var d=r.updateQueue;if(d===null)return null;if(d=d.shared,(sn&2)!==0){var y=d.pending;return y===null?o.next=o:(o.next=y.next,y.next=o),d.pending=o,o=ut(r),ze(r,null,u),o}return nt(r,d,o,u),ut(r)}function Ke(r,o,u){if(o=o.updateQueue,o!==null&&(o=o.shared,(u&4194176)!==0)){var d=o.lanes;d&=r.pendingLanes,u|=d,o.lanes=u,J(r,u)}}function Mt(r,o){var u=r.updateQueue,d=r.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,E=null;if(u=u.firstBaseUpdate,u!==null){do{var I={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};E===null?y=E=I:E=E.next=I,u=u.next}while(u!==null);E===null?y=E=o:E=E.next=o}else y=E=o;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:E,shared:d.shared,callbacks:d.callbacks},r.updateQueue=u;return}r=u.lastBaseUpdate,r===null?u.firstBaseUpdate=o:r.next=o,u.lastBaseUpdate=o}function lt(){if(zd){var r=Ya;if(r!==null)throw r}}function gt(r,o,u,d){zd=!1;var y=r.updateQueue;or=!1;var E=y.firstBaseUpdate,I=y.lastBaseUpdate,Z=y.shared.pending;if(Z!==null){y.shared.pending=null;var ie=Z,ye=ie.next;ie.next=null,I===null?E=ye:I.next=ye,I=ie;var Oe=r.alternate;Oe!==null&&(Oe=Oe.updateQueue,Z=Oe.lastBaseUpdate,Z!==I&&(Z===null?Oe.firstBaseUpdate=ye:Z.next=ye,Oe.lastBaseUpdate=ie))}if(E!==null){var Ye=y.baseState;I=0,Oe=ye=ie=null,Z=E;do{var Qe=Z.lane&-536870913,At=Qe!==Z.lane;if(At?(Ht&Qe)===Qe:(d&Qe)===Qe){Qe!==0&&Qe===qa&&(zd=!0),Oe!==null&&(Oe=Oe.next={lane:0,tag:Z.tag,payload:Z.payload,callback:null,next:null});e:{var Yi=r,dl=Z;Qe=o;var Kr=u;switch(dl.tag){case 1:if(Yi=dl.payload,typeof Yi=="function"){Ye=Yi.call(Kr,Ye,Qe);break e}Ye=Yi;break e;case 3:Yi.flags=Yi.flags&-65537|128;case 0:if(Yi=dl.payload,Qe=typeof Yi=="function"?Yi.call(Kr,Ye,Qe):Yi,Qe==null)break e;Ye=vd({},Ye,Qe);break e;case 2:or=!0}}Qe=Z.callback,Qe!==null&&(r.flags|=64,At&&(r.flags|=8192),At=y.callbacks,At===null?y.callbacks=[Qe]:At.push(Qe))}else At={lane:Qe,tag:Z.tag,payload:Z.payload,callback:Z.callback,next:null},Oe===null?(ye=Oe=At,ie=Ye):Oe=Oe.next=At,I|=Qe;if(Z=Z.next,Z===null){if(Z=y.shared.pending,Z===null)break;At=Z,Z=At.next,At.next=null,y.lastBaseUpdate=At,y.shared.pending=null}}while(!0);Oe===null&&(ie=Ye),y.baseState=ie,y.firstBaseUpdate=ye,y.lastBaseUpdate=Oe,E===null&&(y.shared.lanes=0),ur|=I,r.lanes=I,r.memoizedState=Ye}}function $(r,o){if(typeof r!="function")throw Error(i(191,r));r.call(o)}function de(r,o){var u=r.callbacks;if(u!==null)for(r.callbacks=null,r=0;r<u.length;r++)$(u[r],o)}function pe(r,o){if(Di(r,o))return!0;if(typeof r!="object"||r===null||typeof o!="object"||o===null)return!1;var u=Object.keys(r),d=Object.keys(o);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!_E.call(o,y)||!Di(r[y],o[y]))return!1}return!0}function Ee(r){return r=r.status,r==="fulfilled"||r==="rejected"}function ke(){}function Xe(r,o,u){switch(u=r[u],u===void 0?r.push(o):u!==o&&(o.then(ke,ke),o=u),o.status){case"fulfilled":return o.value;case"rejected":throw r=o.reason,r===rl?Error(i(483)):r;default:if(typeof o.status=="string")o.then(ke,ke);else{if(r=on,r!==null&&100<r.shellSuspendCounter)throw Error(i(482));r=o,r.status="pending",r.then(function(d){if(o.status==="pending"){var y=o;y.status="fulfilled",y.value=d}},function(d){if(o.status==="pending"){var y=o;y.status="rejected",y.reason=d}})}switch(o.status){case"fulfilled":return o.value;case"rejected":throw r=o.reason,r===rl?Error(i(483)):r}throw Za=o,rl}}function xt(){if(Za===null)throw Error(i(459));var r=Za;return Za=null,r}function Kt(r){var o=al;return al+=1,Ka===null&&(Ka=[]),Xe(Ka,r,o)}function fn(r,o){o=o.props.ref,r.ref=o!==void 0?o:null}function Bt(r,o){throw o.$$typeof===qM?Error(i(525)):(r=Object.prototype.toString.call(o),Error(i(31,r==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":r)))}function Xn(r){var o=r._init;return o(r._payload)}function di(r){function o(ce,te){if(r){var fe=ce.deletions;fe===null?(ce.deletions=[te],ce.flags|=16):fe.push(te)}}function u(ce,te){if(!r)return null;for(;te!==null;)o(ce,te),te=te.sibling;return null}function d(ce){for(var te=new Map;ce!==null;)ce.key!==null?te.set(ce.key,ce):te.set(ce.index,ce),ce=ce.sibling;return te}function y(ce,te){return ce=nr(ce,te),ce.index=0,ce.sibling=null,ce}function E(ce,te,fe){return ce.index=fe,r?(fe=ce.alternate,fe!==null?(fe=fe.index,fe<te?(ce.flags|=33554434,te):fe):(ce.flags|=33554434,te)):(ce.flags|=1048576,te)}function I(ce){return r&&ce.alternate===null&&(ce.flags|=33554434),ce}function Z(ce,te,fe,Ie){return te===null||te.tag!==6?(te=pd(fe,ce.mode,Ie),te.return=ce,te):(te=y(te,fe),te.return=ce,te)}function ie(ce,te,fe,Ie){var ht=fe.type;return ht===Ba?Oe(ce,te,fe.props.children,Ie,fe.key):te!==null&&(te.elementType===ht||typeof ht=="object"&&ht!==null&&ht.$$typeof===sr&&Xn(ht)===te.type)?(te=y(te,fe.props),fn(te,fe),te.return=ce,te):(te=Oc(fe.type,fe.key,fe.props,null,ce.mode,Ie),fn(te,fe),te.return=ce,te)}function ye(ce,te,fe,Ie){return te===null||te.tag!==4||te.stateNode.containerInfo!==fe.containerInfo||te.stateNode.implementation!==fe.implementation?(te=md(fe,ce.mode,Ie),te.return=ce,te):(te=y(te,fe.children||[]),te.return=ce,te)}function Oe(ce,te,fe,Ie,ht){return te===null||te.tag!==7?(te=Br(fe,ce.mode,Ie,ht),te.return=ce,te):(te=y(te,fe),te.return=ce,te)}function Ye(ce,te,fe){if(typeof te=="string"&&te!==""||typeof te=="number"||typeof te=="bigint")return te=pd(""+te,ce.mode,fe),te.return=ce,te;if(typeof te=="object"&&te!==null){switch(te.$$typeof){case Bc:return fe=Oc(te.type,te.key,te.props,null,ce.mode,fe),fn(fe,te),fe.return=ce,fe;case Oa:return te=md(te,ce.mode,fe),te.return=ce,te;case sr:var Ie=te._init;return te=Ie(te._payload),Ye(ce,te,fe)}if(zc(te)||a(te))return te=Br(te,ce.mode,fe,null),te.return=ce,te;if(typeof te.then=="function")return Ye(ce,Kt(te),fe);if(te.$$typeof===ir)return Ye(ce,Uc(ce,te),fe);Bt(ce,te)}return null}function Qe(ce,te,fe,Ie){var ht=te!==null?te.key:null;if(typeof fe=="string"&&fe!==""||typeof fe=="number"||typeof fe=="bigint")return ht!==null?null:Z(ce,te,""+fe,Ie);if(typeof fe=="object"&&fe!==null){switch(fe.$$typeof){case Bc:return fe.key===ht?ie(ce,te,fe,Ie):null;case Oa:return fe.key===ht?ye(ce,te,fe,Ie):null;case sr:return ht=fe._init,fe=ht(fe._payload),Qe(ce,te,fe,Ie)}if(zc(fe)||a(fe))return ht!==null?null:Oe(ce,te,fe,Ie,null);if(typeof fe.then=="function")return Qe(ce,te,Kt(fe),Ie);if(fe.$$typeof===ir)return Qe(ce,te,Uc(ce,fe),Ie);Bt(ce,fe)}return null}function At(ce,te,fe,Ie,ht){if(typeof Ie=="string"&&Ie!==""||typeof Ie=="number"||typeof Ie=="bigint")return ce=ce.get(fe)||null,Z(te,ce,""+Ie,ht);if(typeof Ie=="object"&&Ie!==null){switch(Ie.$$typeof){case Bc:return ce=ce.get(Ie.key===null?fe:Ie.key)||null,ie(te,ce,Ie,ht);case Oa:return ce=ce.get(Ie.key===null?fe:Ie.key)||null,ye(te,ce,Ie,ht);case sr:var un=Ie._init;return Ie=un(Ie._payload),At(ce,te,fe,Ie,ht)}if(zc(Ie)||a(Ie))return ce=ce.get(fe)||null,Oe(te,ce,Ie,ht,null);if(typeof Ie.then=="function")return At(ce,te,fe,Kt(Ie),ht);if(Ie.$$typeof===ir)return At(ce,te,fe,Uc(te,Ie),ht);Bt(te,Ie)}return null}function Yi(ce,te,fe,Ie){for(var ht=null,un=null,yt=te,qt=te=0,On=null;yt!==null&&qt<fe.length;qt++){yt.index>qt?(On=yt,yt=null):On=yt.sibling;var Yt=Qe(ce,yt,fe[qt],Ie);if(Yt===null){yt===null&&(yt=On);break}r&&yt&&Yt.alternate===null&&o(ce,yt),te=E(Yt,te,qt),un===null?ht=Yt:un.sibling=Yt,un=Yt,yt=On}if(qt===fe.length)return u(ce,yt),Xt&&he(ce,qt),ht;if(yt===null){for(;qt<fe.length;qt++)yt=Ye(ce,fe[qt],Ie),yt!==null&&(te=E(yt,te,qt),un===null?ht=yt:un.sibling=yt,un=yt);return Xt&&he(ce,qt),ht}for(yt=d(yt);qt<fe.length;qt++)On=At(yt,ce,qt,fe[qt],Ie),On!==null&&(r&&On.alternate!==null&&yt.delete(On.key===null?qt:On.key),te=E(On,te,qt),un===null?ht=On:un.sibling=On,un=On);return r&&yt.forEach(function(fr){return o(ce,fr)}),Xt&&he(ce,qt),ht}function dl(ce,te,fe,Ie){if(fe==null)throw Error(i(151));for(var ht=null,un=null,yt=te,qt=te=0,On=null,Yt=fe.next();yt!==null&&!Yt.done;qt++,Yt=fe.next()){yt.index>qt?(On=yt,yt=null):On=yt.sibling;var fr=Qe(ce,yt,Yt.value,Ie);if(fr===null){yt===null&&(yt=On);break}r&&yt&&fr.alternate===null&&o(ce,yt),te=E(fr,te,qt),un===null?ht=fr:un.sibling=fr,un=fr,yt=On}if(Yt.done)return u(ce,yt),Xt&&he(ce,qt),ht;if(yt===null){for(;!Yt.done;qt++,Yt=fe.next())Yt=Ye(ce,Yt.value,Ie),Yt!==null&&(te=E(Yt,te,qt),un===null?ht=Yt:un.sibling=Yt,un=Yt);return Xt&&he(ce,qt),ht}for(yt=d(yt);!Yt.done;qt++,Yt=fe.next())Yt=At(yt,ce,qt,Yt.value,Ie),Yt!==null&&(r&&Yt.alternate!==null&&yt.delete(Yt.key===null?qt:Yt.key),te=E(Yt,te,qt),un===null?ht=Yt:un.sibling=Yt,un=Yt);return r&&yt.forEach(function(TE){return o(ce,TE)}),Xt&&he(ce,qt),ht}function Kr(ce,te,fe,Ie){if(typeof fe=="object"&&fe!==null&&fe.type===Ba&&fe.key===null&&(fe=fe.props.children),typeof fe=="object"&&fe!==null){switch(fe.$$typeof){case Bc:e:{for(var ht=fe.key;te!==null;){if(te.key===ht){if(ht=fe.type,ht===Ba){if(te.tag===7){u(ce,te.sibling),Ie=y(te,fe.props.children),Ie.return=ce,ce=Ie;break e}}else if(te.elementType===ht||typeof ht=="object"&&ht!==null&&ht.$$typeof===sr&&Xn(ht)===te.type){u(ce,te.sibling),Ie=y(te,fe.props),fn(Ie,fe),Ie.return=ce,ce=Ie;break e}u(ce,te);break}else o(ce,te);te=te.sibling}fe.type===Ba?(Ie=Br(fe.props.children,ce.mode,Ie,fe.key),Ie.return=ce,ce=Ie):(Ie=Oc(fe.type,fe.key,fe.props,null,ce.mode,Ie),fn(Ie,fe),Ie.return=ce,ce=Ie)}return I(ce);case Oa:e:{for(ht=fe.key;te!==null;){if(te.key===ht)if(te.tag===4&&te.stateNode.containerInfo===fe.containerInfo&&te.stateNode.implementation===fe.implementation){u(ce,te.sibling),Ie=y(te,fe.children||[]),Ie.return=ce,ce=Ie;break e}else{u(ce,te);break}else o(ce,te);te=te.sibling}Ie=md(fe,ce.mode,Ie),Ie.return=ce,ce=Ie}return I(ce);case sr:return ht=fe._init,fe=ht(fe._payload),Kr(ce,te,fe,Ie)}if(zc(fe))return Yi(ce,te,fe,Ie);if(a(fe)){if(ht=a(fe),typeof ht!="function")throw Error(i(150));return fe=ht.call(fe),dl(ce,te,fe,Ie)}if(typeof fe.then=="function")return Kr(ce,te,Kt(fe),Ie);if(fe.$$typeof===ir)return Kr(ce,te,Uc(ce,fe),Ie);Bt(ce,fe)}return typeof fe=="string"&&fe!==""||typeof fe=="number"||typeof fe=="bigint"?(fe=""+fe,te!==null&&te.tag===6?(u(ce,te.sibling),Ie=y(te,fe),Ie.return=ce,ce=Ie):(u(ce,te),Ie=pd(fe,ce.mode,Ie),Ie.return=ce,ce=Ie),I(ce)):u(ce,te)}return function(ce,te,fe,Ie){try{al=0;var ht=Kr(ce,te,fe,Ie);return Ka=null,ht}catch(yt){if(yt===rl)throw yt;var un=t(29,yt,null,ce.mode);return un.lanes=Ie,un.return=ce,un}finally{}}}function Dr(r,o){r=Bs,b(Kc,r),b(ja,o),Bs=r|o.baseLanes}function Js(){b(Kc,Bs),b(ja,ja.current)}function qn(){Bs=Kc.current,_(ja),_(Kc)}function pi(r){var o=r.alternate;b(Dn,Dn.current&1),b(Xi,r),ps===null&&(o===null||ja.current!==null||o.memoizedState!==null)&&(ps=r)}function ji(r){if(r.tag===22){if(b(Dn,Dn.current),b(Xi,r),ps===null){var o=r.alternate;o!==null&&o.memoizedState!==null&&(ps=r)}}else Hn()}function Hn(){b(Dn,Dn.current),b(Xi,Xi.current)}function pt(r){_(Xi),ps===r&&(ps=null),_(Dn)}function fs(r){for(var o=r;o!==null;){if(o.tag===13){var u=o.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||wd(u)||Cd(u)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}function en(){throw Error(i(321))}function U(r,o){if(o===null)return!1;for(var u=0;u<o.length&&u<r.length;u++)if(!Di(r[u],o[u]))return!1;return!0}function P(r,o,u,d,y,E){return lr=E,Nt=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,Et.H=r===null||r.memoizedState===null?kr:cr,Gr=!1,E=u(d,y),Gr=!1,Ja&&(E=ue(o,u,d,y)),j(r),E}function j(r){Et.H=ms;var o=nn!==null&&nn.next!==null;if(lr=0,An=nn=Nt=null,jc=!1,ol=0,Qa=null,o)throw Error(i(300));r===null||In||(r=r.dependencies,r!==null&&Rc(r)&&(In=!0))}function ue(r,o,u,d){Nt=r;var y=0;do{if(Ja&&(Qa=null),ol=0,Ja=!1,25<=y)throw Error(i(301));if(y+=1,An=nn=null,r.updateQueue!=null){var E=r.updateQueue;E.lastEffect=null,E.events=null,E.stores=null,E.memoCache!=null&&(E.memoCache.index=0)}Et.H=Wr,E=o(u,d)}while(Ja);return E}function me(){var r=Et.H,o=r.useState()[0];return o=typeof o.then=="function"?ne(o):o,r=r.useState()[0],(nn!==null?nn.memoizedState:null)!==r&&(Nt.flags|=1024),o}function w(){var r=Jc!==0;return Jc=0,r}function k(r,o,u){o.updateQueue=r.updateQueue,o.flags&=-2053,r.lanes&=~u}function X(r){if(jc){for(r=r.memoizedState;r!==null;){var o=r.queue;o!==null&&(o.pending=null),r=r.next}jc=!1}lr=0,An=nn=Nt=null,Ja=!1,ol=Jc=0,Qa=null}function q(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return An===null?Nt.memoizedState=An=r:An=An.next=r,An}function V(){if(nn===null){var r=Nt.alternate;r=r!==null?r.memoizedState:null}else r=nn.next;var o=An===null?Nt.memoizedState:An.next;if(o!==null)An=o,nn=r;else{if(r===null)throw Nt.alternate===null?Error(i(467)):Error(i(310));nn=r,r={memoizedState:nn.memoizedState,baseState:nn.baseState,baseQueue:nn.baseQueue,queue:nn.queue,next:null},An===null?Nt.memoizedState=An=r:An=An.next=r}return An}function ne(r){var o=ol;return ol+=1,Qa===null&&(Qa=[]),r=Xe(Qa,r,o),o=Nt,(An===null?o.memoizedState:An.next)===null&&(o=o.alternate,Et.H=o===null||o.memoizedState===null?kr:cr),r}function ae(r){if(r!==null&&typeof r=="object"){if(typeof r.then=="function")return ne(r);if(r.$$typeof===ir)return Yn(r)}throw Error(i(438,String(r)))}function Be(r){var o=null,u=Nt.updateQueue;if(u!==null&&(o=u.memoCache),o==null){var d=Nt.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(o={data:d.data.map(function(y){return y.slice()}),index:0})))}if(o==null&&(o={data:[],index:0}),u===null&&(u=Hd(),Nt.updateQueue=u),u.memoCache=o,u=o.data[o.index],u===void 0)for(u=o.data[o.index]=Array(r),d=0;d<r;d++)u[d]=ZM;return o.index++,u}function ge(r,o){return typeof o=="function"?o(r):o}function we(r){var o=V();return Pe(o,nn,r)}function Pe(r,o,u){var d=r.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=r.baseQueue,E=d.pending;if(E!==null){if(y!==null){var I=y.next;y.next=E.next,E.next=I}o.baseQueue=y=E,d.pending=null}if(E=r.baseState,y===null)r.memoizedState=E;else{o=y.next;var Z=I=null,ie=null,ye=o,Oe=!1;do{var Ye=ye.lane&-536870913;if(Ye!==ye.lane?(Ht&Ye)===Ye:(lr&Ye)===Ye){var Qe=ye.revertLane;if(Qe===0)ie!==null&&(ie=ie.next={lane:0,revertLane:0,action:ye.action,hasEagerState:ye.hasEagerState,eagerState:ye.eagerState,next:null}),Ye===qa&&(Oe=!0);else if((lr&Qe)===Qe){ye=ye.next,Qe===qa&&(Oe=!0);continue}else Ye={lane:0,revertLane:ye.revertLane,action:ye.action,hasEagerState:ye.hasEagerState,eagerState:ye.eagerState,next:null},ie===null?(Z=ie=Ye,I=E):ie=ie.next=Ye,Nt.lanes|=Qe,ur|=Qe;Ye=ye.action,Gr&&u(E,Ye),E=ye.hasEagerState?ye.eagerState:u(E,Ye)}else Qe={lane:Ye,revertLane:ye.revertLane,action:ye.action,hasEagerState:ye.hasEagerState,eagerState:ye.eagerState,next:null},ie===null?(Z=ie=Qe,I=E):ie=ie.next=Qe,Nt.lanes|=Ye,ur|=Ye;ye=ye.next}while(ye!==null&&ye!==o);if(ie===null?I=E:ie.next=Z,!Di(E,r.memoizedState)&&(In=!0,Oe&&(u=Ya,u!==null)))throw u;r.memoizedState=E,r.baseState=I,r.baseQueue=ie,d.lastRenderedState=E}return y===null&&(d.lanes=0),[r.memoizedState,d.dispatch]}function Ce(r){var o=V(),u=o.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=r;var d=u.dispatch,y=u.pending,E=o.memoizedState;if(y!==null){u.pending=null;var I=y=y.next;do E=r(E,I.action),I=I.next;while(I!==y);Di(E,o.memoizedState)||(In=!0),o.memoizedState=E,o.baseQueue===null&&(o.baseState=E),u.lastRenderedState=E}return[E,d]}function rt(r,o,u){var d=Nt,y=V(),E=Xt;if(E){if(u===void 0)throw Error(i(407));u=u()}else u=o();var I=!Di((nn||y).memoizedState,u);if(I&&(y.memoizedState=u,In=!0),y=y.queue,Uf(Vt.bind(null,d,y,r),[r]),y.getSnapshot!==o||I||An!==null&&An.memoizedState.tag&1){if(d.flags|=2048,Da(9,vt.bind(null,d,y,u,o),{destroy:void 0},null),on===null)throw Error(i(349));E||(lr&60)!==0||ct(d,o,u)}return u}function ct(r,o,u){r.flags|=16384,r={getSnapshot:o,value:u},o=Nt.updateQueue,o===null?(o=Hd(),Nt.updateQueue=o,o.stores=[r]):(u=o.stores,u===null?o.stores=[r]:u.push(r))}function vt(r,o,u,d){o.value=u,o.getSnapshot=d,ot(o)&&Je(r)}function Vt(r,o,u){return u(function(){ot(o)&&Je(r)})}function ot(r){var o=r.getSnapshot;r=r.value;try{var u=o();return!Di(r,u)}catch{return!0}}function Je(r){var o=Ge(r,2);o!==null&&si(o,r,2)}function Dt(r){var o=q();if(typeof r=="function"){var u=r;if(r=u(),Gr){Q(!0);try{u()}finally{Q(!1)}}}return o.memoizedState=o.baseState=r,o.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:ge,lastRenderedState:r},o}function dt(r,o,u,d){return r.baseState=u,Pe(r,nn,typeof d=="function"?d:ge)}function pn(r,o,u,d,y){if(wc(r))throw Error(i(485));if(r=o.action,r!==null){var E={payload:y,action:r,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(I){E.listeners.push(I)}};Et.T!==null?u(!0):E.isTransition=!1,d(E),u=o.pending,u===null?(E.next=o.pending=E,ii(o,E)):(E.next=u.next,o.pending=u.next=E)}}function ii(r,o){var u=o.action,d=o.payload,y=r.state;if(o.isTransition){var E=Et.T,I={};Et.T=I;try{var Z=u(y,d),ie=Et.S;ie!==null&&ie(I,Z),jt(r,o,Z)}catch(ye){St(r,o,ye)}finally{Et.T=E}}else try{E=u(y,d),jt(r,o,E)}catch(ye){St(r,o,ye)}}function jt(r,o,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){zt(r,o,d)},function(d){return St(r,o,d)}):zt(r,o,u)}function zt(r,o,u){o.status="fulfilled",o.value=u,Lt(o),r.state=u,o=r.pending,o!==null&&(u=o.next,u===o?r.pending=null:(u=u.next,o.next=u,ii(r,u)))}function St(r,o,u){var d=r.pending;if(r.pending=null,d!==null){d=d.next;do o.status="rejected",o.reason=u,Lt(o),o=o.next;while(o!==d)}r.action=null}function Lt(r){r=r.listeners;for(var o=0;o<r.length;o++)(0,r[o])()}function It(r,o){return o}function tn(r,o){if(Xt){var u=on.formState;if(u!==null){e:{var d=Nt;if(Xt){if(jn){var y=F1(jn,ds);if(y){jn=S0(y),d=H1(y);break e}}je(d)}d=!1}d&&(o=u[0])}}u=q(),u.memoizedState=u.baseState=o,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:It,lastRenderedState:o},u.queue=d,u=qg.bind(null,Nt,d),d.dispatch=u,d=Dt(!1);var E=If.bind(null,Nt,!1,d.queue);return d=q(),y={state:o,dispatch:null,action:r,pending:null},d.queue=y,u=pn.bind(null,Nt,y,E,u),y.dispatch=u,d.memoizedState=r,[o,u,!1]}function Un(r){var o=V();return cn(o,nn,r)}function cn(r,o,u){o=Pe(r,o,It)[0],r=we(ge)[0],o=typeof o=="object"&&o!==null&&typeof o.then=="function"?ne(o):o;var d=V(),y=d.queue,E=y.dispatch;return u!==d.memoizedState&&(Nt.flags|=2048,Da(9,Ei.bind(null,y,u),{destroy:void 0},null)),[o,E,r]}function Ei(r,o){r.action=o}function Ng(r){var o=V(),u=nn;if(u!==null)return cn(o,u,r);V(),o=o.memoizedState,u=V();var d=u.queue.dispatch;return u.memoizedState=r,[o,d,!1]}function Da(r,o,u,d){return r={tag:r,create:o,inst:u,deps:d,next:null},o=Nt.updateQueue,o===null&&(o=Hd(),Nt.updateQueue=o),u=o.lastEffect,u===null?o.lastEffect=r.next=r:(d=u.next,u.next=r,r.next=d,o.lastEffect=r),r}function Lg(){return V().memoizedState}function Tc(r,o,u,d){var y=q();Nt.flags|=r,y.memoizedState=Da(1|o,u,{destroy:void 0},d===void 0?null:d)}function Ac(r,o,u,d){var y=V();d=d===void 0?null:d;var E=y.memoizedState.inst;nn!==null&&d!==null&&U(d,nn.memoizedState.deps)?y.memoizedState=Da(o,u,E,d):(Nt.flags|=r,y.memoizedState=Da(1|o,u,E,d))}function Ig(r,o){Tc(8390656,8,r,o)}function Uf(r,o){Ac(2048,8,r,o)}function Pg(r,o){return Ac(4,2,r,o)}function Og(r,o){return Ac(4,4,r,o)}function Bg(r,o){if(typeof o=="function"){r=r();var u=o(r);return function(){typeof u=="function"?u():o(null)}}if(o!=null)return r=r(),o.current=r,function(){o.current=null}}function zg(r,o,u){u=u!=null?u.concat([r]):null,Ac(4,4,Bg.bind(null,o,r),u)}function Df(){}function Fg(r,o){var u=V();o=o===void 0?null:o;var d=u.memoizedState;return o!==null&&U(o,d[1])?d[0]:(u.memoizedState=[r,o],r)}function Hg(r,o){var u=V();o=o===void 0?null:o;var d=u.memoizedState;if(o!==null&&U(o,d[1]))return d[0];if(d=r(),Gr){Q(!0);try{r()}finally{Q(!1)}}return u.memoizedState=[d,o],d}function Nf(r,o,u){return u===void 0||(lr&1073741824)!==0?r.memoizedState=o:(r.memoizedState=u,r=Ov(),Nt.lanes|=r,ur|=r,u)}function Vg(r,o,u,d){return Di(u,o)?u:ja.current!==null?(r=Nf(r,u,d),Di(r,o)||(In=!0),r):(lr&42)===0?(In=!0,r.memoizedState=u):(r=Ov(),Nt.lanes|=r,ur|=r,o)}function Gg(r,o,u,d,y){var E=zr();gi(E!==0&&8>E?E:8);var I=Et.T,Z={};Et.T=Z,If(r,!1,o,u);try{var ie=y(),ye=Et.S;if(ye!==null&&ye(Z,ie),ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var Oe=Ut(ie,d);Xo(r,o,Oe,wi(r))}else Xo(r,o,d,wi(r))}catch(Ye){Xo(r,o,{then:function(){},status:"rejected",reason:Ye},wi())}finally{gi(E),Et.T=I}}function kg(r){var o=r.memoizedState;if(o!==null)return o;o={memoizedState:za,baseState:za,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:ge,lastRenderedState:za},next:null};var u={};return o.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:ge,lastRenderedState:u},next:null},r.memoizedState=o,r=r.alternate,r!==null&&(r.memoizedState=o),o}function Lf(){return Yn(Fr)}function Wg(){return V().memoizedState}function Xg(){return V().memoizedState}function AM(r){for(var o=r.return;o!==null;){switch(o.tag){case 24:case 3:var u=wi();r=st(u);var d=tt(o,r,u);d!==null&&(si(d,o,u),Ke(d,o,u)),o={cache:Yf()},r.payload=o;return}o=o.return}}function wM(r,o,u){var d=wi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},wc(r)?Yg(o,u):(u=Re(r,o,u,d),u!==null&&(si(u,r,d),Zg(u,o,d)))}function qg(r,o,u){var d=wi();Xo(r,o,u,d)}function Xo(r,o,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(wc(r))Yg(o,y);else{var E=r.alternate;if(r.lanes===0&&(E===null||E.lanes===0)&&(E=o.lastRenderedReducer,E!==null))try{var I=o.lastRenderedState,Z=E(I,u);if(y.hasEagerState=!0,y.eagerState=Z,Di(Z,I))return nt(r,o,y,0),on===null&&W(),!1}catch{}finally{}if(u=Re(r,o,y,d),u!==null)return si(u,r,d),Zg(u,o,d),!0}return!1}function If(r,o,u,d){if(d={lane:2,revertLane:it(),action:d,hasEagerState:!1,eagerState:null,next:null},wc(r)){if(o)throw Error(i(479))}else o=Re(r,u,d,2),o!==null&&si(o,r,2)}function wc(r){var o=r.alternate;return r===Nt||o!==null&&o===Nt}function Yg(r,o){Ja=jc=!0;var u=r.pending;u===null?o.next=o:(o.next=u.next,u.next=o),r.pending=o}function Zg(r,o,u){if((u&4194176)!==0){var d=o.lanes;d&=r.pendingLanes,u|=d,o.lanes=u,J(r,u)}}function Pf(r,o,u,d){o=r.memoizedState,u=u(d,o),u=u==null?o:vd({},o,u),r.memoizedState=u,r.lanes===0&&(r.updateQueue.baseState=u)}function Kg(r,o,u,d,y,E,I){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(d,E,I):o.prototype&&o.prototype.isPureReactComponent?!pe(u,d)||!pe(y,E):!0}function jg(r,o,u,d){r=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(u,d),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(u,d),o.state!==r&&Vd.enqueueReplaceState(o,o.state,null)}function Nr(r,o){var u=o;if("ref"in o){u={};for(var d in o)d!=="ref"&&(u[d]=o[d])}if(r=r.defaultProps){u===o&&(u=vd({},u));for(var y in r)u[y]===void 0&&(u[y]=r[y])}return u}function Cc(r,o){try{var u=r.onUncaughtError;u(o.value,{componentStack:o.stack})}catch(d){setTimeout(function(){throw d})}}function Jg(r,o,u){try{var d=r.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:o.tag===1?o.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Of(r,o,u){return u=st(u),u.tag=3,u.payload={element:null},u.callback=function(){Cc(r,o)},u}function Qg(r){return r=st(r),r.tag=3,r}function $g(r,o,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var E=d.value;r.payload=function(){return y(E)},r.callback=function(){Jg(o,u,d)}}var I=u.stateNode;I!==null&&typeof I.componentDidCatch=="function"&&(r.callback=function(){Jg(o,u,d),typeof y!="function"&&(hr===null?hr=new Set([this]):hr.add(this));var Z=d.stack;this.componentDidCatch(d.value,{componentStack:Z!==null?Z:""})})}function CM(r,o,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(o=u.alternate,o!==null&&Yo(o,u,y,!0),u=Xi.current,u!==null){switch(u.tag){case 13:return ps===null?ud():u.alternate===null&&Sn===0&&(Sn=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===Zc?u.flags|=16384:(o=u.updateQueue,o===null?u.updateQueue=new Set([d]):o.add(d),fd(r,d,y)),!1;case 22:return u.flags|=65536,d===Zc?u.flags|=16384:(o=u.updateQueue,o===null?(o={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=o):(u=o.retryQueue,u===null?o.retryQueue=new Set([d]):u.add(d)),fd(r,d,y)),!1}throw Error(i(435,u.tag))}return fd(r,d,y),ud(),!1}if(Xt)return o=Xi.current,o!==null?((o.flags&65536)===0&&(o.flags|=256),o.flags|=65536,o.lanes=y,d!==Ld&&(r=Error(i(422),{cause:d}),Ne(le(r,u)))):(d!==Ld&&(o=Error(i(423),{cause:d}),Ne(le(o,u))),r=r.current.alternate,r.flags|=65536,y&=-y,r.lanes|=y,d=le(d,u),y=Of(r.stateNode,d,y),Mt(r,y),Sn!==4&&(Sn=2)),!1;var E=Error(i(520),{cause:d});if(E=le(E,u),cl===null?cl=[E]:cl.push(E),Sn!==4&&(Sn=2),o===null)return!0;d=le(d,u),u=o;do{switch(u.tag){case 3:return u.flags|=65536,r=y&-y,u.lanes|=r,r=Of(u.stateNode,d,r),Mt(u,r),!1;case 1:if(o=u.type,E=u.stateNode,(u.flags&128)===0&&(typeof o.getDerivedStateFromError=="function"||E!==null&&typeof E.componentDidCatch=="function"&&(hr===null||!hr.has(E))))return u.flags|=65536,y&=-y,u.lanes|=y,y=Qg(y),$g(y,r,u,d),Mt(u,y),!1}u=u.return}while(u!==null);return!1}function Vn(r,o,u,d){o.child=r===null?P0(o,null,u,d):Vr(o,r.child,u,d)}function ev(r,o,u,d,y){u=u.render;var E=o.ref;if("ref"in d){var I={};for(var Z in d)Z!=="ref"&&(I[Z]=d[Z])}else I=d;return Lr(o),d=P(r,o,u,I,E,y),Z=w(),r!==null&&!In?(k(r,o,y),ws(r,o,y)):(Xt&&Z&&Ae(o),o.flags|=1,Vn(r,o,d,y),o.child)}function tv(r,o,u,d,y){if(r===null){var E=u.type;return typeof E=="function"&&!dd(E)&&E.defaultProps===void 0&&u.compare===null?(o.tag=15,o.type=E,nv(r,o,E,d,y)):(r=Oc(u.type,null,d,o,o.mode,y),r.ref=o.ref,r.return=o,o.child=r)}if(E=r.child,!Wf(r,y)){var I=E.memoizedProps;if(u=u.compare,u=u!==null?u:pe,u(I,d)&&r.ref===o.ref)return ws(r,o,y)}return o.flags|=1,r=nr(E,d),r.ref=o.ref,r.return=o,o.child=r}function nv(r,o,u,d,y){if(r!==null){var E=r.memoizedProps;if(pe(E,d)&&r.ref===o.ref)if(In=!1,o.pendingProps=d=E,Wf(r,y))(r.flags&131072)!==0&&(In=!0);else return o.lanes=r.lanes,ws(r,o,y)}return Bf(r,o,u,d,y)}function iv(r,o,u){var d=o.pendingProps,y=d.children,E=(o.stateNode._pendingVisibility&2)!==0,I=r!==null?r.memoizedState:null;if(qo(r,o),d.mode==="hidden"||E){if((o.flags&128)!==0){if(d=I!==null?I.baseLanes|u:u,r!==null){for(y=o.child=r.child,E=0;y!==null;)E=E|y.lanes|y.childLanes,y=y.sibling;o.childLanes=E&~d}else o.childLanes=0,o.child=null;return sv(r,o,d,u)}if((u&536870912)!==0)o.memoizedState={baseLanes:0,cachePool:null},r!==null&&Dc(o,I!==null?I.cachePool:null),I!==null?Dr(o,I):Js(),ji(o);else return o.lanes=o.childLanes=536870912,sv(r,o,I!==null?I.baseLanes|u:u,u)}else I!==null?(Dc(o,I.cachePool),Dr(o,I),Hn(),o.memoizedState=null):(r!==null&&Dc(o,null),Js(),Hn());return Vn(r,o,y,u),o.child}function sv(r,o,u,d){var y=Zf();return y=y===null?null:{parent:Ds?yn._currentValue:yn._currentValue2,pool:y},o.memoizedState={baseLanes:u,cachePool:y},r!==null&&Dc(o,null),Js(),ji(o),r!==null&&Yo(r,o,d,!0),null}function qo(r,o){var u=o.ref;if(u===null)r!==null&&r.ref!==null&&(o.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(r===null||r.ref!==u)&&(o.flags|=2097664)}}function Bf(r,o,u,d,y){return Lr(o),u=P(r,o,u,d,void 0,y),d=w(),r!==null&&!In?(k(r,o,y),ws(r,o,y)):(Xt&&d&&Ae(o),o.flags|=1,Vn(r,o,u,y),o.child)}function rv(r,o,u,d,y,E){return Lr(o),o.updateQueue=null,u=ue(o,d,u,y),j(r),d=w(),r!==null&&!In?(k(r,o,E),ws(r,o,E)):(Xt&&d&&Ae(o),o.flags|=1,Vn(r,o,u,E),o.child)}function av(r,o,u,d,y){if(Lr(o),o.stateNode===null){var E=Ha,I=u.contextType;typeof I=="object"&&I!==null&&(E=Yn(I)),E=new u(d,E),o.memoizedState=E.state!==null&&E.state!==void 0?E.state:null,E.updater=Vd,o.stateNode=E,E._reactInternals=o,E=o.stateNode,E.props=d,E.state=o.memoizedState,E.refs={},Le(o),I=u.contextType,E.context=typeof I=="object"&&I!==null?Yn(I):Ha,E.state=o.memoizedState,I=u.getDerivedStateFromProps,typeof I=="function"&&(Pf(o,u,I,d),E.state=o.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof E.getSnapshotBeforeUpdate=="function"||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(I=E.state,typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount(),I!==E.state&&Vd.enqueueReplaceState(E,E.state,null),gt(o,d,E,y),lt(),E.state=o.memoizedState),typeof E.componentDidMount=="function"&&(o.flags|=4194308),d=!0}else if(r===null){E=o.stateNode;var Z=o.memoizedProps,ie=Nr(u,Z);E.props=ie;var ye=E.context,Oe=u.contextType;I=Ha,typeof Oe=="object"&&Oe!==null&&(I=Yn(Oe));var Ye=u.getDerivedStateFromProps;Oe=typeof Ye=="function"||typeof E.getSnapshotBeforeUpdate=="function",Z=o.pendingProps!==Z,Oe||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(Z||ye!==I)&&jg(o,E,d,I),or=!1;var Qe=o.memoizedState;E.state=Qe,gt(o,d,E,y),lt(),ye=o.memoizedState,Z||Qe!==ye||or?(typeof Ye=="function"&&(Pf(o,u,Ye,d),ye=o.memoizedState),(ie=or||Kg(o,u,ie,d,Qe,ye,I))?(Oe||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount()),typeof E.componentDidMount=="function"&&(o.flags|=4194308)):(typeof E.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=d,o.memoizedState=ye),E.props=d,E.state=ye,E.context=I,d=ie):(typeof E.componentDidMount=="function"&&(o.flags|=4194308),d=!1)}else{E=o.stateNode,et(r,o),I=o.memoizedProps,Oe=Nr(u,I),E.props=Oe,Ye=o.pendingProps,Qe=E.context,ye=u.contextType,ie=Ha,typeof ye=="object"&&ye!==null&&(ie=Yn(ye)),Z=u.getDerivedStateFromProps,(ye=typeof Z=="function"||typeof E.getSnapshotBeforeUpdate=="function")||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(I!==Ye||Qe!==ie)&&jg(o,E,d,ie),or=!1,Qe=o.memoizedState,E.state=Qe,gt(o,d,E,y),lt();var At=o.memoizedState;I!==Ye||Qe!==At||or||r!==null&&r.dependencies!==null&&Rc(r.dependencies)?(typeof Z=="function"&&(Pf(o,u,Z,d),At=o.memoizedState),(Oe=or||Kg(o,u,Oe,d,Qe,At,ie)||r!==null&&r.dependencies!==null&&Rc(r.dependencies))?(ye||typeof E.UNSAFE_componentWillUpdate!="function"&&typeof E.componentWillUpdate!="function"||(typeof E.componentWillUpdate=="function"&&E.componentWillUpdate(d,At,ie),typeof E.UNSAFE_componentWillUpdate=="function"&&E.UNSAFE_componentWillUpdate(d,At,ie)),typeof E.componentDidUpdate=="function"&&(o.flags|=4),typeof E.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof E.componentDidUpdate!="function"||I===r.memoizedProps&&Qe===r.memoizedState||(o.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||I===r.memoizedProps&&Qe===r.memoizedState||(o.flags|=1024),o.memoizedProps=d,o.memoizedState=At),E.props=d,E.state=At,E.context=ie,d=Oe):(typeof E.componentDidUpdate!="function"||I===r.memoizedProps&&Qe===r.memoizedState||(o.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||I===r.memoizedProps&&Qe===r.memoizedState||(o.flags|=1024),d=!1)}return E=d,qo(r,o),d=(o.flags&128)!==0,E||d?(E=o.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:E.render(),o.flags|=1,r!==null&&d?(o.child=Vr(o,r.child,null,y),o.child=Vr(o,null,u,y)):Vn(r,o,u,y),o.memoizedState=E.state,r=o.child):r=ws(r,o,y),r}function ov(r,o,u,d){return Me(),o.flags|=256,Vn(r,o,u,d),o.child}function zf(r){return{baseLanes:r,cachePool:dv()}}function Ff(r,o,u){return r=r!==null?r.childLanes&~u:0,o&&(r|=qi),r}function lv(r,o,u){var d=o.pendingProps,y=!1,E=(o.flags&128)!==0,I;if((I=E)||(I=r!==null&&r.memoizedState===null?!1:(Dn.current&2)!==0),I&&(y=!0,o.flags&=-129),I=(o.flags&32)!==0,o.flags&=-33,r===null){if(Xt){if(y?pi(o):Hn(),Xt){var Z=jn,ie;(ie=Z)&&(Z=X1(Z,ds),Z!==null?(o.memoizedState={dehydrated:Z,treeContext:Hr!==null?{id:Ns,overflow:Ls}:null,retryLane:536870912},ie=t(18,null,null,0),ie.stateNode=Z,ie.return=o,o.child=ie,ri=o,jn=null,ie=!0):ie=!1),ie||je(o)}if(Z=o.memoizedState,Z!==null&&(Z=Z.dehydrated,Z!==null))return Cd(Z)?o.lanes=16:o.lanes=536870912,null;pt(o)}return Z=d.children,d=d.fallback,y?(Hn(),y=o.mode,Z=Vf({mode:"hidden",children:Z},y),d=Br(d,y,u,null),Z.return=o,d.return=o,Z.sibling=d,o.child=Z,y=o.child,y.memoizedState=zf(u),y.childLanes=Ff(r,I,u),o.memoizedState=Gd,d):(pi(o),Hf(o,Z))}if(ie=r.memoizedState,ie!==null&&(Z=ie.dehydrated,Z!==null)){if(E)o.flags&256?(pi(o),o.flags&=-257,o=Gf(r,o,u)):o.memoizedState!==null?(Hn(),o.child=r.child,o.flags|=128,o=null):(Hn(),y=d.fallback,Z=o.mode,d=Vf({mode:"visible",children:d.children},Z),y=Br(y,Z,u,null),y.flags|=2,d.return=o,y.return=o,d.sibling=y,o.child=d,Vr(o,r.child,null,u),d=o.child,d.memoizedState=zf(u),d.childLanes=Ff(r,I,u),o.memoizedState=Gd,o=y);else if(pi(o),Cd(Z))I=B1(Z).digest,d=Error(i(419)),d.stack="",d.digest=I,Ne({value:d,source:null,stack:null}),o=Gf(r,o,u);else if(In||Yo(r,o,u,!1),I=(u&r.childLanes)!==0,In||I){if(I=on,I!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(I.suspendedLanes|u))!==0?0:d,d!==0&&d!==ie.retryLane)throw ie.retryLane=d,Ge(r,d),si(I,r,d),B0}wd(Z)||ud(),o=Gf(r,o,u)}else wd(Z)?(o.flags|=128,o.child=r.child,o=HM.bind(null,r),z1(Z,o),o=null):(r=ie.treeContext,Hi&&(jn=G1(Z),ri=o,Xt=!0,$i=null,ds=!1,r!==null&&(Gi[ki++]=Ns,Gi[ki++]=Ls,Gi[ki++]=Hr,Ns=r.id,Ls=r.overflow,Hr=o)),o=Hf(o,d.children),o.flags|=4096);return o}return y?(Hn(),y=d.fallback,Z=o.mode,ie=r.child,E=ie.sibling,d=nr(ie,{mode:"hidden",children:d.children}),d.subtreeFlags=ie.subtreeFlags&31457280,E!==null?y=nr(E,y):(y=Br(y,Z,u,null),y.flags|=2),y.return=o,d.return=o,d.sibling=y,o.child=d,d=y,y=o.child,Z=r.child.memoizedState,Z===null?Z=zf(u):(ie=Z.cachePool,ie!==null?(E=Ds?yn._currentValue:yn._currentValue2,ie=ie.parent!==E?{parent:E,pool:E}:ie):ie=dv(),Z={baseLanes:Z.baseLanes|u,cachePool:ie}),y.memoizedState=Z,y.childLanes=Ff(r,I,u),o.memoizedState=Gd,d):(pi(o),u=r.child,r=u.sibling,u=nr(u,{mode:"visible",children:d.children}),u.return=o,u.sibling=null,r!==null&&(I=o.deletions,I===null?(o.deletions=[r],o.flags|=16):I.push(r)),o.child=u,o.memoizedState=null,u)}function Hf(r,o){return o=Vf({mode:"visible",children:o},r.mode),o.return=r,r.child=o}function Vf(r,o){return Qv(r,o,0,null)}function Gf(r,o,u){return Vr(o,r.child,null,u),r=Hf(o,o.pendingProps.children),r.flags|=2,o.memoizedState=null,r}function cv(r,o,u){r.lanes|=o;var d=r.alternate;d!==null&&(d.lanes|=o),Xf(r.return,o,u)}function kf(r,o,u,d,y){var E=r.memoizedState;E===null?r.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(E.isBackwards=o,E.rendering=null,E.renderingStartTime=0,E.last=d,E.tail=u,E.tailMode=y)}function uv(r,o,u){var d=o.pendingProps,y=d.revealOrder,E=d.tail;if(Vn(r,o,d.children,u),d=Dn.current,(d&2)!==0)d=d&1|2,o.flags|=128;else{if(r!==null&&(r.flags&128)!==0)e:for(r=o.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&cv(r,u,o);else if(r.tag===19)cv(r,u,o);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===o)break e;for(;r.sibling===null;){if(r.return===null||r.return===o)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}d&=1}switch(b(Dn,d),y){case"forwards":for(u=o.child,y=null;u!==null;)r=u.alternate,r!==null&&fs(r)===null&&(y=u),u=u.sibling;u=y,u===null?(y=o.child,o.child=null):(y=u.sibling,u.sibling=null),kf(o,!1,y,u,E);break;case"backwards":for(u=null,y=o.child,o.child=null;y!==null;){if(r=y.alternate,r!==null&&fs(r)===null){o.child=y;break}r=y.sibling,y.sibling=u,u=y,y=r}kf(o,!0,u,null,E);break;case"together":kf(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function ws(r,o,u){if(r!==null&&(o.dependencies=r.dependencies),ur|=o.lanes,(u&o.childLanes)===0)if(r!==null){if(Yo(r,o,u,!1),(u&o.childLanes)===0)return null}else return null;if(r!==null&&o.child!==r.child)throw Error(i(153));if(o.child!==null){for(r=o.child,u=nr(r,r.pendingProps),o.child=u,u.return=o;r.sibling!==null;)r=r.sibling,u=u.sibling=nr(r,r.pendingProps),u.return=o;u.sibling=null}return o.child}function Wf(r,o){return(r.lanes&o)!==0?!0:(r=r.dependencies,!!(r!==null&&Rc(r)))}function RM(r,o,u){switch(o.tag){case 3:se(o,o.stateNode.containerInfo),Qs(o,yn,r.memoizedState.cache),Me();break;case 27:case 5:De(o);break;case 4:se(o,o.stateNode.containerInfo);break;case 10:Qs(o,o.type,o.memoizedProps.value);break;case 13:var d=o.memoizedState;if(d!==null)return d.dehydrated!==null?(pi(o),o.flags|=128,null):(u&o.child.childLanes)!==0?lv(r,o,u):(pi(o),r=ws(r,o,u),r!==null?r.sibling:null);pi(o);break;case 19:var y=(r.flags&128)!==0;if(d=(u&o.childLanes)!==0,d||(Yo(r,o,u,!1),d=(u&o.childLanes)!==0),y){if(d)return uv(r,o,u);o.flags|=128}if(y=o.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),b(Dn,Dn.current),d)break;return null;case 22:case 23:return o.lanes=0,iv(r,o,u);case 24:Qs(o,yn,r.memoizedState.cache)}return ws(r,o,u)}function hv(r,o,u){if(r!==null)if(r.memoizedProps!==o.pendingProps)In=!0;else{if(!Wf(r,u)&&(o.flags&128)===0)return In=!1,RM(r,o,u);In=(r.flags&131072)!==0}else In=!1,Xt&&(o.flags&1048576)!==0&&xe(o,Wc,o.index);switch(o.lanes=0,o.tag){case 16:e:{r=o.pendingProps;var d=o.elementType,y=d._init;if(d=y(d._payload),o.type=d,typeof d=="function")dd(d)?(r=Nr(d,r),o.tag=1,o=av(null,o,d,r,u)):(o.tag=0,o=Bf(null,o,d,r,u));else{if(d!=null){if(y=d.$$typeof,y===yd){o.tag=11,o=ev(null,o,d,r,u);break e}else if(y===Md){o.tag=14,o=tv(null,o,d,r,u);break e}}throw o=l(d)||d,Error(i(306,o,""))}}return o;case 0:return Bf(r,o,o.type,o.pendingProps,u);case 1:return d=o.type,y=Nr(d,o.pendingProps),av(r,o,d,y,u);case 3:e:{if(se(o,o.stateNode.containerInfo),r===null)throw Error(i(387));var E=o.pendingProps;y=o.memoizedState,d=y.element,et(r,o),gt(o,E,null,u);var I=o.memoizedState;if(E=I.cache,Qs(o,yn,E),E!==y.cache&&qf(o,[yn],u,!0),lt(),E=I.element,Hi&&y.isDehydrated)if(y={element:E,isDehydrated:!1,cache:I.cache},o.updateQueue.baseState=y,o.memoizedState=y,o.flags&256){o=ov(r,o,E,u);break e}else if(E!==d){d=le(Error(i(424)),o),Ne(d),o=ov(r,o,E,u);break e}else for(Hi&&(jn=V1(o.stateNode.containerInfo),ri=o,Xt=!0,$i=null,ds=!0),u=P0(o,null,E,u),o.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(Me(),E===d){o=ws(r,o,u);break e}Vn(r,o,E,u)}o=o.child}return o;case 26:if(Vi)return qo(r,o),r===null?(u=T0(o.type,null,o.pendingProps,null))?o.memoizedState=u:Xt||(o.stateNode=iE(o.type,o.pendingProps,ar.current,o)):o.memoizedState=T0(o.type,r.memoizedProps,o.pendingProps,r.memoizedState),null;case 27:if(Kn)return De(o),r===null&&Kn&&Xt&&(d=o.stateNode=D0(o.type,o.pendingProps,ar.current,Gn.current,!1),ri=o,ds=!0,jn=M0(d)),d=o.pendingProps.children,r!==null||Xt?Vn(r,o,d,u):o.child=Vr(o,null,d,u),qo(r,o),o.child;case 5:return r===null&&Xt&&(eE(o.type,o.pendingProps,Gn.current),(y=d=jn)&&(d=k1(d,o.type,o.pendingProps,ds),d!==null?(o.stateNode=d,ri=o,jn=M0(d),ds=!1,y=!0):y=!1),y||je(o)),De(o),y=o.type,E=o.pendingProps,I=r!==null?r.memoizedProps:null,d=E.children,Fc(y,E)?d=null:I!==null&&Fc(y,I)&&(o.flags|=32),o.memoizedState!==null&&(y=P(r,o,me,null,null,u),Ds?Fr._currentValue=y:Fr._currentValue2=y),qo(r,o),Vn(r,o,d,u),o.child;case 6:return r===null&&Xt&&(tE(o.pendingProps,Gn.current),(r=u=jn)&&(u=W1(u,o.pendingProps,ds),u!==null?(o.stateNode=u,ri=o,jn=null,r=!0):r=!1),r||je(o)),null;case 13:return lv(r,o,u);case 4:return se(o,o.stateNode.containerInfo),d=o.pendingProps,r===null?o.child=Vr(o,null,d,u):Vn(r,o,d,u),o.child;case 11:return ev(r,o,o.type,o.pendingProps,u);case 7:return Vn(r,o,o.pendingProps,u),o.child;case 8:return Vn(r,o,o.pendingProps.children,u),o.child;case 12:return Vn(r,o,o.pendingProps.children,u),o.child;case 10:return d=o.pendingProps,Qs(o,o.type,d.value),Vn(r,o,d.children,u),o.child;case 9:return y=o.type._context,d=o.pendingProps.children,Lr(o),y=Yn(y),d=d(y),o.flags|=1,Vn(r,o,d,u),o.child;case 14:return tv(r,o,o.type,o.pendingProps,u);case 15:return nv(r,o,o.type,o.pendingProps,u);case 19:return uv(r,o,u);case 22:return iv(r,o,u);case 24:return Lr(o),d=Yn(yn),r===null?(y=Zf(),y===null&&(y=on,E=Yf(),y.pooledCache=E,E.refCount++,E!==null&&(y.pooledCacheLanes|=u),y=E),o.memoizedState={parent:d,cache:y},Le(o),Qs(o,yn,y)):((r.lanes&u)!==0&&(et(r,o),gt(o,null,null,u),lt()),y=r.memoizedState,E=o.memoizedState,y.parent!==d?(y={parent:d,cache:d},o.memoizedState=y,o.lanes===0&&(o.memoizedState=o.updateQueue.baseState=y),Qs(o,yn,d)):(d=E.cache,Qs(o,yn,d),d!==y.cache&&qf(o,[yn],u,!0))),Vn(r,o,o.pendingProps.children,u),o.child;case 29:throw o.pendingProps}throw Error(i(156,o.tag))}function Qs(r,o,u){Ds?(b(Qc,o._currentValue),o._currentValue=u):(b(Qc,o._currentValue2),o._currentValue2=u)}function Cs(r){var o=Qc.current;Ds?r._currentValue=o:r._currentValue2=o,_(Qc)}function Xf(r,o,u){for(;r!==null;){var d=r.alternate;if((r.childLanes&o)!==o?(r.childLanes|=o,d!==null&&(d.childLanes|=o)):d!==null&&(d.childLanes&o)!==o&&(d.childLanes|=o),r===u)break;r=r.return}}function qf(r,o,u,d){var y=r.child;for(y!==null&&(y.return=r);y!==null;){var E=y.dependencies;if(E!==null){var I=y.child;E=E.firstContext;e:for(;E!==null;){var Z=E;E=y;for(var ie=0;ie<o.length;ie++)if(Z.context===o[ie]){E.lanes|=u,Z=E.alternate,Z!==null&&(Z.lanes|=u),Xf(E.return,u,r),d||(I=null);break e}E=Z.next}}else if(y.tag===18){if(I=y.return,I===null)throw Error(i(341));I.lanes|=u,E=I.alternate,E!==null&&(E.lanes|=u),Xf(I,u,r),I=null}else I=y.child;if(I!==null)I.return=y;else for(I=y;I!==null;){if(I===r){I=null;break}if(y=I.sibling,y!==null){y.return=I.return,I=y;break}I=I.return}y=I}}function Yo(r,o,u,d){r=null;for(var y=o,E=!1;y!==null;){if(!E){if((y.flags&524288)!==0)E=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var I=y.alternate;if(I===null)throw Error(i(387));if(I=I.memoizedProps,I!==null){var Z=y.type;Di(y.pendingProps.value,I.value)||(r!==null?r.push(Z):r=[Z])}}else if(y===Xc.current){if(I=y.alternate,I===null)throw Error(i(387));I.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(r!==null?r.push(Fr):r=[Fr])}y=y.return}r!==null&&qf(o,r,u,d),o.flags|=262144}function Rc(r){for(r=r.firstContext;r!==null;){var o=r.context;if(!Di(Ds?o._currentValue:o._currentValue2,r.memoizedValue))return!0;r=r.next}return!1}function Lr(r){Xr=r,Is=null,r=r.dependencies,r!==null&&(r.firstContext=null)}function Yn(r){return fv(Xr,r)}function Uc(r,o){return Xr===null&&Lr(r),fv(r,o)}function fv(r,o){var u=Ds?o._currentValue:o._currentValue2;if(o={context:o,memoizedValue:u,next:null},Is===null){if(r===null)throw Error(i(308));Is=o,r.dependencies={lanes:0,firstContext:o},r.flags|=524288}else Is=Is.next=o;return u}function Yf(){return{controller:new xE,data:new Map,refCount:0}}function Zo(r){r.refCount--,r.refCount===0&&SE(ME,function(){r.controller.abort()})}function Zf(){var r=qr.current;return r!==null?r:on.pooledCache}function Dc(r,o){o===null?b(qr,qr.current):b(qr,o.pool)}function dv(){var r=Zf();return r===null?null:{parent:Ds?yn._currentValue:yn._currentValue2,pool:r}}function bi(r){r.flags|=4}function pv(r,o){if(r!==null&&r.child===o.child)return!1;if((o.flags&16)!==0)return!0;for(r=o.child;r!==null;){if((r.flags&13878)!==0||(r.subtreeFlags&13878)!==0)return!0;r=r.sibling}return!1}function Kf(r,o,u,d){if(Zn)for(u=o.child;u!==null;){if(u.tag===5||u.tag===6)Td(r,u.stateNode);else if(!(u.tag===4||Kn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===o)break;for(;u.sibling===null;){if(u.return===null||u.return===o)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(rr)for(var y=o.child;y!==null;){if(y.tag===5){var E=y.stateNode;u&&d&&(E=y0(E,y.type,y.memoizedProps)),Td(r,E)}else if(y.tag===6)E=y.stateNode,u&&d&&(E=x0(E,y.memoizedProps)),Td(r,E);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)E=y.child,E!==null&&(E.return=y),Kf(r,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function mv(r,o,u,d){if(rr)for(var y=o.child;y!==null;){if(y.tag===5){var E=y.stateNode;u&&d&&(E=y0(E,y.type,y.memoizedProps)),v0(r,E)}else if(y.tag===6)E=y.stateNode,u&&d&&(E=x0(E,y.memoizedProps)),v0(r,E);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)E=y.child,E!==null&&(E.return=y),mv(r,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function gv(r,o){if(rr&&pv(r,o)){r=o.stateNode;var u=r.containerInfo,d=g0();mv(d,o,!1,!1),r.pendingChildren=d,bi(o),O1(u,d)}}function jf(r,o,u,d){if(Zn)r.memoizedProps!==d&&bi(o);else if(rr){var y=r.stateNode,E=r.memoizedProps;if((r=pv(r,o))||E!==d){var I=Gn.current;E=P1(y,u,E,d,!r,null),E===y?o.stateNode=y:(u0(E,u,d,I)&&bi(o),o.stateNode=E,r?Kf(E,o,!1,!1):bi(o))}else o.stateNode=y}}function Jf(r,o,u){if(c1(o,u)){if(r.flags|=16777216,!d0(o,u))if(Vv())r.flags|=8192;else throw Za=Zc,Fd}else r.flags&=-16777217}function vv(r,o){if(rE(o)){if(r.flags|=16777216,!U0(o))if(Vv())r.flags|=8192;else throw Za=Zc,Fd}else r.flags&=-16777217}function Nc(r,o){o!==null&&(r.flags|=4),r.flags&16384&&(o=r.tag!==22?C():536870912,r.lanes|=o,to|=o)}function Ko(r,o){if(!Xt)switch(r.tailMode){case"hidden":o=r.tail;for(var u=null;o!==null;)o.alternate!==null&&(u=o),o=o.sibling;u===null?r.tail=null:u.sibling=null;break;case"collapsed":u=r.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?o||r.tail===null?r.tail=null:r.tail.sibling=null:d.sibling=null}}function mn(r){var o=r.alternate!==null&&r.alternate.child===r.child,u=0,d=0;if(o)for(var y=r.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=r,y=y.sibling;else for(y=r.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=r,y=y.sibling;return r.subtreeFlags|=d,r.childLanes=u,o}function UM(r,o,u){var d=o.pendingProps;switch(Ze(o),o.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return mn(o),null;case 1:return mn(o),null;case 3:return u=o.stateNode,d=null,r!==null&&(d=r.memoizedState.cache),o.memoizedState.cache!==d&&(o.flags|=2048),Cs(yn),Se(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(r===null||r.child===null)&&(Tt(o)?bi(o):r===null||r.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,$i!==null&&(ld($i),$i=null))),gv(r,o),mn(o),null;case 26:if(Vi){u=o.type;var y=o.memoizedState;return r===null?(bi(o),y!==null?(mn(o),vv(o,y)):(mn(o),Jf(o,u,d))):y?y!==r.memoizedState?(bi(o),mn(o),vv(o,y)):(mn(o),o.flags&=-16777217):(Zn?r.memoizedProps!==d&&bi(o):jf(r,o,u,d),mn(o),Jf(o,u,d)),null}case 27:if(Kn){if(Ue(o),u=ar.current,y=o.type,r!==null&&o.stateNode!=null)Zn?r.memoizedProps!==d&&bi(o):jf(r,o,y,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return mn(o),null}r=Gn.current,Tt(o)?mt(o,r):(r=D0(y,d,u,r,!0),o.stateNode=r,bi(o))}return mn(o),null}case 5:if(Ue(o),u=o.type,r!==null&&o.stateNode!=null)jf(r,o,u,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return mn(o),null}r=Gn.current,Tt(o)?mt(o,r):(y=n1(u,d,ar.current,r,o),Kf(y,o,!1,!1),o.stateNode=y,u0(y,u,d,r)&&bi(o))}return mn(o),Jf(o,o.type,o.pendingProps),null;case 6:if(r&&o.stateNode!=null)u=r.memoizedProps,Zn?u!==d&&bi(o):rr&&(u!==d?(o.stateNode=h0(d,ar.current,Gn.current,o),bi(o)):o.stateNode=r.stateNode);else{if(typeof d!="string"&&o.stateNode===null)throw Error(i(166));if(r=ar.current,u=Gn.current,Tt(o)){if(!Hi)throw Error(i(176));if(r=o.stateNode,u=o.memoizedProps,d=null,y=ri,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}Y1(r,u,o,d)||je(o)}else o.stateNode=h0(d,r,u,o)}return mn(o),null;case 13:if(d=o.memoizedState,r===null||r.memoizedState!==null&&r.memoizedState.dehydrated!==null){if(y=Tt(o),d!==null&&d.dehydrated!==null){if(r===null){if(!y)throw Error(i(318));if(!Hi)throw Error(i(344));if(y=o.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));Z1(y,o)}else Me(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;mn(o),y=!1}else $i!==null&&(ld($i),$i=null),y=!0;if(!y)return o.flags&256?(pt(o),o):(pt(o),null)}if(pt(o),(o.flags&128)!==0)return o.lanes=u,o;if(u=d!==null,r=r!==null&&r.memoizedState!==null,u){d=o.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var E=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(E=d.memoizedState.cachePool.pool),E!==y&&(d.flags|=2048)}return u!==r&&u&&(o.child.flags|=8192),Nc(o,o.updateQueue),mn(o),null;case 4:return Se(),gv(r,o),r===null&&r1(o.stateNode.containerInfo),mn(o),null;case 10:return Cs(o.type),mn(o),null;case 19:if(_(Dn),y=o.memoizedState,y===null)return mn(o),null;if(d=(o.flags&128)!==0,E=y.rendering,E===null)if(d)Ko(y,!1);else{if(Sn!==0||r!==null&&(r.flags&128)!==0)for(r=o.child;r!==null;){if(E=fs(r),E!==null){for(o.flags|=128,Ko(y,!1),r=E.updateQueue,o.updateQueue=r,Nc(o,r),o.subtreeFlags=0,r=u,u=o.child;u!==null;)Jv(u,r),u=u.sibling;return b(Dn,Dn.current&1|2),o.child}r=r.sibling}y.tail!==null&&Qi()>ul&&(o.flags|=128,d=!0,Ko(y,!1),o.lanes=4194304)}else{if(!d)if(r=fs(E),r!==null){if(o.flags|=128,d=!0,r=r.updateQueue,o.updateQueue=r,Nc(o,r),Ko(y,!0),y.tail===null&&y.tailMode==="hidden"&&!E.alternate&&!Xt)return mn(o),null}else 2*Qi()-y.renderingStartTime>ul&&u!==536870912&&(o.flags|=128,d=!0,Ko(y,!1),o.lanes=4194304);y.isBackwards?(E.sibling=o.child,o.child=E):(r=y.last,r!==null?r.sibling=E:o.child=E,y.last=E)}return y.tail!==null?(o=y.tail,y.rendering=o,y.tail=o.sibling,y.renderingStartTime=Qi(),o.sibling=null,r=Dn.current,b(Dn,d?r&1|2:r&1),o):(mn(o),null);case 22:case 23:return pt(o),qn(),d=o.memoizedState!==null,r!==null?r.memoizedState!==null!==d&&(o.flags|=8192):d&&(o.flags|=8192),d?(u&536870912)!==0&&(o.flags&128)===0&&(mn(o),o.subtreeFlags&6&&(o.flags|=8192)):mn(o),u=o.updateQueue,u!==null&&Nc(o,u.retryQueue),u=null,r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(u=r.memoizedState.cachePool.pool),d=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),d!==u&&(o.flags|=2048),r!==null&&_(qr),null;case 24:return u=null,r!==null&&(u=r.memoizedState.cache),o.memoizedState.cache!==u&&(o.flags|=2048),Cs(yn),mn(o),null;case 25:return null}throw Error(i(156,o.tag))}function DM(r,o){switch(Ze(o),o.tag){case 1:return r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 3:return Cs(yn),Se(),r=o.flags,(r&65536)!==0&&(r&128)===0?(o.flags=r&-65537|128,o):null;case 26:case 27:case 5:return Ue(o),null;case 13:if(pt(o),r=o.memoizedState,r!==null&&r.dehydrated!==null){if(o.alternate===null)throw Error(i(340));Me()}return r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 19:return _(Dn),null;case 4:return Se(),null;case 10:return Cs(o.type),null;case 22:case 23:return pt(o),qn(),r!==null&&_(qr),r=o.flags,r&65536?(o.flags=r&-65537|128,o):null;case 24:return Cs(yn),null;case 25:return null;default:return null}}function _v(r,o){switch(Ze(o),o.tag){case 3:Cs(yn),Se();break;case 26:case 27:case 5:Ue(o);break;case 4:Se();break;case 13:pt(o);break;case 19:_(Dn);break;case 10:Cs(o.type);break;case 22:case 23:pt(o),qn(),r!==null&&_(qr);break;case 24:Cs(yn)}}function jo(r,o){try{var u=o.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&r)===r){d=void 0;var E=u.create,I=u.inst;d=E(),I.destroy=d}u=u.next}while(u!==y)}}catch(Z){Jt(o,o.return,Z)}}function $s(r,o,u){try{var d=o.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var E=y.next;d=E;do{if((d.tag&r)===r){var I=d.inst,Z=I.destroy;if(Z!==void 0){I.destroy=void 0,y=o;var ie=u;try{Z()}catch(ye){Jt(y,ie,ye)}}}d=d.next}while(d!==E)}}catch(ye){Jt(o,o.return,ye)}}function yv(r){var o=r.updateQueue;if(o!==null){var u=r.stateNode;try{de(o,u)}catch(d){Jt(r,r.return,d)}}}function xv(r,o,u){u.props=Nr(r.type,r.memoizedProps),u.state=r.memoizedState;try{u.componentWillUnmount()}catch(d){Jt(r,o,d)}}function Ir(r,o){try{var u=r.ref;if(u!==null){var d=r.stateNode;switch(r.tag){case 26:case 27:case 5:var y=$o(d);break;default:y=d}typeof u=="function"?r.refCleanup=u(y):u.current=y}}catch(E){Jt(r,o,E)}}function Ti(r,o){var u=r.ref,d=r.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){Jt(r,o,y)}finally{r.refCleanup=null,r=r.alternate,r!=null&&(r.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){Jt(r,o,y)}else u.current=null}function Sv(r){var o=r.type,u=r.memoizedProps,d=r.stateNode;try{b1(d,o,u,r)}catch(y){Jt(r,r.return,y)}}function Mv(r,o,u){try{T1(r.stateNode,r.type,u,o,r)}catch(d){Jt(r,r.return,d)}}function Ev(r){return r.tag===5||r.tag===3||(Vi?r.tag===26:!1)||(Kn?r.tag===27:!1)||r.tag===4}function Qf(r){e:for(;;){for(;r.sibling===null;){if(r.return===null||Ev(r.return))return null;r=r.return}for(r.sibling.return=r.return,r=r.sibling;r.tag!==5&&r.tag!==6&&(!Kn||r.tag!==27)&&r.tag!==18;){if(r.flags&2||r.child===null||r.tag===4)continue e;r.child.return=r,r=r.child}if(!(r.flags&2))return r.stateNode}}function $f(r,o,u){var d=r.tag;if(d===5||d===6)r=r.stateNode,o?w1(u,r,o):M1(u,r);else if(!(d===4||Kn&&d===27)&&(r=r.child,r!==null))for($f(r,o,u),r=r.sibling;r!==null;)$f(r,o,u),r=r.sibling}function Lc(r,o,u){var d=r.tag;if(d===5||d===6)r=r.stateNode,o?A1(u,r,o):S1(u,r);else if(!(d===4||Kn&&d===27)&&(r=r.child,r!==null))for(Lc(r,o,u),r=r.sibling;r!==null;)Lc(r,o,u),r=r.sibling}function bv(r,o,u){r=r.containerInfo;try{_0(r,u)}catch(d){Jt(o,o.return,d)}}function NM(r,o){for(e1(r.containerInfo),Pn=o;Pn!==null;)if(r=Pn,o=r.child,(r.subtreeFlags&1028)!==0&&o!==null)o.return=r,Pn=o;else for(;Pn!==null;){r=Pn;var u=r.alternate;switch(o=r.flags,r.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&u!==null){o=void 0;var d=r,y=u.memoizedProps;u=u.memoizedState;var E=d.stateNode;try{var I=Nr(d.type,y,d.elementType===d.type);o=E.getSnapshotBeforeUpdate(I,u),E.__reactInternalSnapshotBeforeUpdate=o}catch(Z){Jt(d,d.return,Z)}}break;case 3:(o&1024)!==0&&Zn&&I1(r.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(i(163))}if(o=r.sibling,o!==null){o.return=r.return,Pn=o;break}Pn=r.return}return I=H0,H0=!1,I}function Tv(r,o,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:Rs(r,u),d&4&&jo(5,u);break;case 1:if(Rs(r,u),d&4)if(r=u.stateNode,o===null)try{r.componentDidMount()}catch(Z){Jt(u,u.return,Z)}else{var y=Nr(u.type,o.memoizedProps);o=o.memoizedState;try{r.componentDidUpdate(y,o,r.__reactInternalSnapshotBeforeUpdate)}catch(Z){Jt(u,u.return,Z)}}d&64&&yv(u),d&512&&Ir(u,u.return);break;case 3:if(Rs(r,u),d&64&&(d=u.updateQueue,d!==null)){if(r=null,u.child!==null)switch(u.child.tag){case 27:case 5:r=$o(u.child.stateNode);break;case 1:r=u.child.stateNode}try{de(d,r)}catch(Z){Jt(u,u.return,Z)}}break;case 26:if(Vi){Rs(r,u),d&512&&Ir(u,u.return);break}case 27:case 5:Rs(r,u),o===null&&d&4&&Sv(u),d&512&&Ir(u,u.return);break;case 12:Rs(r,u);break;case 13:Rs(r,u),d&4&&wv(r,u);break;case 22:if(y=u.memoizedState!==null||Ps,!y){o=o!==null&&o.memoizedState!==null||xn;var E=Ps,I=xn;Ps=y,(xn=o)&&!I?er(r,u,(u.subtreeFlags&8772)!==0):Rs(r,u),Ps=E,xn=I}d&512&&(u.memoizedProps.mode==="manual"?Ir(u,u.return):Ti(u,u.return));break;default:Rs(r,u)}}function Av(r){var o=r.alternate;o!==null&&(r.alternate=null,Av(o)),r.child=null,r.deletions=null,r.sibling=null,r.tag===5&&(o=r.stateNode,o!==null&&l1(o)),r.stateNode=null,r.return=null,r.dependencies=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.stateNode=null,r.updateQueue=null}function Ji(r,o,u){for(u=u.child;u!==null;)ed(r,o,u),u=u.sibling}function ed(r,o,u){if(Ui&&typeof Ui.onCommitFiberUnmount=="function")try{Ui.onCommitFiberUnmount(nl,u)}catch{}switch(u.tag){case 26:if(Vi){xn||Ti(u,o),Ji(r,o,u),u.memoizedState?w0(u.memoizedState):u.stateNode&&R0(u.stateNode);break}case 27:if(Kn){xn||Ti(u,o);var d=wn,y=Ni;wn=u.stateNode,Ji(r,o,u),cE(u.stateNode),wn=d,Ni=y;break}case 5:xn||Ti(u,o);case 6:if(Zn){if(d=wn,y=Ni,wn=null,Ji(r,o,u),wn=d,Ni=y,wn!==null)if(Ni)try{R1(wn,u.stateNode)}catch(E){Jt(u,o,E)}else try{C1(wn,u.stateNode)}catch(E){Jt(u,o,E)}}else Ji(r,o,u);break;case 18:Zn&&wn!==null&&(Ni?$1(wn,u.stateNode):Q1(wn,u.stateNode));break;case 4:Zn?(d=wn,y=Ni,wn=u.stateNode.containerInfo,Ni=!0,Ji(r,o,u),wn=d,Ni=y):(rr&&bv(u.stateNode,u,g0()),Ji(r,o,u));break;case 0:case 11:case 14:case 15:xn||$s(2,u,o),xn||$s(4,u,o),Ji(r,o,u);break;case 1:xn||(Ti(u,o),d=u.stateNode,typeof d.componentWillUnmount=="function"&&xv(u,o,d)),Ji(r,o,u);break;case 21:Ji(r,o,u);break;case 22:xn||Ti(u,o),xn=(d=xn)||u.memoizedState!==null,Ji(r,o,u),xn=d;break;default:Ji(r,o,u)}}function wv(r,o){if(Hi&&o.memoizedState===null&&(r=o.alternate,r!==null&&(r=r.memoizedState,r!==null&&(r=r.dehydrated,r!==null))))try{J1(r)}catch(u){Jt(o,o.return,u)}}function LM(r){switch(r.tag){case 13:case 19:var o=r.stateNode;return o===null&&(o=r.stateNode=new F0),o;case 22:return r=r.stateNode,o=r._retryCache,o===null&&(o=r._retryCache=new F0),o;default:throw Error(i(435,r.tag))}}function td(r,o){var u=LM(r);o.forEach(function(d){var y=VM.bind(null,r,d);u.has(d)||(u.add(d),d.then(y,y))})}function mi(r,o){var u=o.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],E=r,I=o;if(Zn){var Z=I;e:for(;Z!==null;){switch(Z.tag){case 27:case 5:wn=Z.stateNode,Ni=!1;break e;case 3:wn=Z.stateNode.containerInfo,Ni=!0;break e;case 4:wn=Z.stateNode.containerInfo,Ni=!0;break e}Z=Z.return}if(wn===null)throw Error(i(160));ed(E,I,y),wn=null,Ni=!1}else ed(E,I,y);E=y.alternate,E!==null&&(E.return=null),y.return=null}if(o.subtreeFlags&13878)for(o=o.child;o!==null;)Cv(o,r),o=o.sibling}function Cv(r,o){var u=r.alternate,d=r.flags;switch(r.tag){case 0:case 11:case 14:case 15:mi(o,r),Ai(r),d&4&&($s(3,r,r.return),jo(3,r),$s(5,r,r.return));break;case 1:mi(o,r),Ai(r),d&512&&(xn||u===null||Ti(u,u.return)),d&64&&Ps&&(r=r.updateQueue,r!==null&&(d=r.callbacks,d!==null&&(u=r.shared.hiddenCallbacks,r.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Vi){var y=es;mi(o,r),Ai(r),d&512&&(xn||u===null||Ti(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,o=r.memoizedState,u===null?o===null?r.stateNode===null?r.stateNode=nE(y,r.type,r.memoizedProps,r):C0(y,r.type,r.stateNode):r.stateNode=A0(y,o,r.memoizedProps):d!==o?(d===null?u.stateNode!==null&&R0(u.stateNode):w0(d),o===null?C0(y,r.type,r.stateNode):A0(y,o,r.memoizedProps)):o===null&&r.stateNode!==null&&Mv(r,r.memoizedProps,u.memoizedProps));break}case 27:if(Kn&&d&4&&r.alternate===null){y=r.stateNode;var E=r.memoizedProps;try{oE(y),lE(r.type,E,y,r)}catch(Oe){Jt(r,r.return,Oe)}}case 5:if(mi(o,r),Ai(r),d&512&&(xn||u===null||Ti(u,u.return)),Zn){if(r.flags&32){o=r.stateNode;try{m0(o)}catch(Oe){Jt(r,r.return,Oe)}}d&4&&r.stateNode!=null&&(o=r.memoizedProps,Mv(r,o,u!==null?u.memoizedProps:o)),d&1024&&(kd=!0)}break;case 6:if(mi(o,r),Ai(r),d&4&&Zn){if(r.stateNode===null)throw Error(i(162));d=r.memoizedProps,u=u!==null?u.memoizedProps:d,o=r.stateNode;try{E1(o,u,d)}catch(Oe){Jt(r,r.return,Oe)}}break;case 3:if(Vi?(sE(),y=es,es=Rd(o.containerInfo),mi(o,r),es=y):mi(o,r),Ai(r),d&4){if(Zn&&Hi&&u!==null&&u.memoizedState.isDehydrated)try{j1(o.containerInfo)}catch(Oe){Jt(r,r.return,Oe)}if(rr){d=o.containerInfo,u=o.pendingChildren;try{_0(d,u)}catch(Oe){Jt(r,r.return,Oe)}}}kd&&(kd=!1,Rv(r));break;case 4:Vi?(u=es,es=Rd(r.stateNode.containerInfo),mi(o,r),Ai(r),es=u):(mi(o,r),Ai(r)),d&4&&rr&&bv(r.stateNode,r,r.stateNode.pendingChildren);break;case 12:mi(o,r),Ai(r);break;case 13:mi(o,r),Ai(r),r.child.flags&8192&&r.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Yd=Qi()),d&4&&(d=r.updateQueue,d!==null&&(r.updateQueue=null,td(r,d)));break;case 22:d&512&&(xn||u===null||Ti(u,u.return)),y=r.memoizedState!==null;var I=u!==null&&u.memoizedState!==null,Z=Ps,ie=xn;if(Ps=Z||y,xn=ie||I,mi(o,r),xn=ie,Ps=Z,Ai(r),o=r.stateNode,o._current=r,o._visibility&=-3,o._visibility|=o._pendingVisibility&2,d&8192&&(o._visibility=y?o._visibility&-2:o._visibility|1,y&&(o=Ps||xn,u===null||I||o||Na(r)),Zn&&(r.memoizedProps===null||r.memoizedProps.mode!=="manual"))){e:if(u=null,Zn)for(o=r;;){if(o.tag===5||Vi&&o.tag===26||Kn&&o.tag===27){if(u===null){I=u=o;try{E=I.stateNode,y?U1(E):N1(I.stateNode,I.memoizedProps)}catch(Oe){Jt(I,I.return,Oe)}}}else if(o.tag===6){if(u===null){I=o;try{var ye=I.stateNode;y?D1(ye):L1(ye,I.memoizedProps)}catch(Oe){Jt(I,I.return,Oe)}}}else if((o.tag!==22&&o.tag!==23||o.memoizedState===null||o===r)&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===r)break e;for(;o.sibling===null;){if(o.return===null||o.return===r)break e;u===o&&(u=null),o=o.return}u===o&&(u=null),o.sibling.return=o.return,o=o.sibling}}d&4&&(d=r.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,td(r,u))));break;case 19:mi(o,r),Ai(r),d&4&&(d=r.updateQueue,d!==null&&(r.updateQueue=null,td(r,d)));break;case 21:break;default:mi(o,r),Ai(r)}}function Ai(r){var o=r.flags;if(o&2){try{if(Zn&&(!Kn||r.tag!==27)){e:{for(var u=r.return;u!==null;){if(Ev(u)){var d=u;break e}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Kn){var y=d.stateNode,E=Qf(r);Lc(r,E,y);break}case 5:var I=d.stateNode;d.flags&32&&(m0(I),d.flags&=-33);var Z=Qf(r);Lc(r,Z,I);break;case 3:case 4:var ie=d.stateNode.containerInfo,ye=Qf(r);$f(r,ye,ie);break;default:throw Error(i(161))}}}catch(Oe){Jt(r,r.return,Oe)}r.flags&=-3}o&4096&&(r.flags&=-4097)}function Rv(r){if(r.subtreeFlags&1024)for(r=r.child;r!==null;){var o=r;Rv(o),o.tag===5&&o.flags&1024&&f1(o.stateNode),r=r.sibling}}function Rs(r,o){if(o.subtreeFlags&8772)for(o=o.child;o!==null;)Tv(r,o.alternate,o),o=o.sibling}function Na(r){for(r=r.child;r!==null;){var o=r;switch(o.tag){case 0:case 11:case 14:case 15:$s(4,o,o.return),Na(o);break;case 1:Ti(o,o.return);var u=o.stateNode;typeof u.componentWillUnmount=="function"&&xv(o,o.return,u),Na(o);break;case 26:case 27:case 5:Ti(o,o.return),Na(o);break;case 22:Ti(o,o.return),o.memoizedState===null&&Na(o);break;default:Na(o)}r=r.sibling}}function er(r,o,u){for(u=u&&(o.subtreeFlags&8772)!==0,o=o.child;o!==null;){var d=o.alternate,y=r,E=o,I=E.flags;switch(E.tag){case 0:case 11:case 15:er(y,E,u),jo(4,E);break;case 1:if(er(y,E,u),d=E,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ye){Jt(d,d.return,ye)}if(d=E,y=d.updateQueue,y!==null){var Z=d.stateNode;try{var ie=y.shared.hiddenCallbacks;if(ie!==null)for(y.shared.hiddenCallbacks=null,y=0;y<ie.length;y++)$(ie[y],Z)}catch(ye){Jt(d,d.return,ye)}}u&&I&64&&yv(E),Ir(E,E.return);break;case 26:case 27:case 5:er(y,E,u),u&&d===null&&I&4&&Sv(E),Ir(E,E.return);break;case 12:er(y,E,u);break;case 13:er(y,E,u),u&&I&4&&wv(y,E);break;case 22:E.memoizedState===null&&er(y,E,u),Ir(E,E.return);break;default:er(y,E,u)}o=o.sibling}}function nd(r,o){var u=null;r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(u=r.memoizedState.cachePool.pool),r=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(r=o.memoizedState.cachePool.pool),r!==u&&(r!=null&&r.refCount++,u!=null&&Zo(u))}function id(r,o){r=null,o.alternate!==null&&(r=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==r&&(o.refCount++,r!=null&&Zo(r))}function tr(r,o,u,d){if(o.subtreeFlags&10256)for(o=o.child;o!==null;)Uv(r,o,u,d),o=o.sibling}function Uv(r,o,u,d){var y=o.flags;switch(o.tag){case 0:case 11:case 15:tr(r,o,u,d),y&2048&&jo(9,o);break;case 3:tr(r,o,u,d),y&2048&&(r=null,o.alternate!==null&&(r=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==r&&(o.refCount++,r!=null&&Zo(r)));break;case 12:if(y&2048){tr(r,o,u,d),r=o.stateNode;try{var E=o.memoizedProps,I=E.id,Z=E.onPostCommit;typeof Z=="function"&&Z(I,o.alternate===null?"mount":"update",r.passiveEffectDuration,-0)}catch(ie){Jt(o,o.return,ie)}}else tr(r,o,u,d);break;case 23:break;case 22:E=o.stateNode,o.memoizedState!==null?E._visibility&4?tr(r,o,u,d):Jo(r,o):E._visibility&4?tr(r,o,u,d):(E._visibility|=4,La(r,o,u,d,(o.subtreeFlags&10256)!==0)),y&2048&&nd(o.alternate,o);break;case 24:tr(r,o,u,d),y&2048&&id(o.alternate,o);break;default:tr(r,o,u,d)}}function La(r,o,u,d,y){for(y=y&&(o.subtreeFlags&10256)!==0,o=o.child;o!==null;){var E=r,I=o,Z=u,ie=d,ye=I.flags;switch(I.tag){case 0:case 11:case 15:La(E,I,Z,ie,y),jo(8,I);break;case 23:break;case 22:var Oe=I.stateNode;I.memoizedState!==null?Oe._visibility&4?La(E,I,Z,ie,y):Jo(E,I):(Oe._visibility|=4,La(E,I,Z,ie,y)),y&&ye&2048&&nd(I.alternate,I);break;case 24:La(E,I,Z,ie,y),y&&ye&2048&&id(I.alternate,I);break;default:La(E,I,Z,ie,y)}o=o.sibling}}function Jo(r,o){if(o.subtreeFlags&10256)for(o=o.child;o!==null;){var u=r,d=o,y=d.flags;switch(d.tag){case 22:Jo(u,d),y&2048&&nd(d.alternate,d);break;case 24:Jo(u,d),y&2048&&id(d.alternate,d);break;default:Jo(u,d)}o=o.sibling}}function Pr(r){if(r.subtreeFlags&$a)for(r=r.child;r!==null;)Dv(r),r=r.sibling}function Dv(r){switch(r.tag){case 26:Pr(r),r.flags&$a&&(r.memoizedState!==null?aE(es,r.memoizedState,r.memoizedProps):p0(r.type,r.memoizedProps));break;case 5:Pr(r),r.flags&$a&&p0(r.type,r.memoizedProps);break;case 3:case 4:if(Vi){var o=es;es=Rd(r.stateNode.containerInfo),Pr(r),es=o}else Pr(r);break;case 22:r.memoizedState===null&&(o=r.alternate,o!==null&&o.memoizedState!==null?(o=$a,$a=16777216,Pr(r),$a=o):Pr(r));break;default:Pr(r)}}function Nv(r){var o=r.alternate;if(o!==null&&(r=o.child,r!==null)){o.child=null;do o=r.sibling,r.sibling=null,r=o;while(r!==null)}}function Qo(r){var o=r.deletions;if((r.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];Pn=d,Iv(d,r)}Nv(r)}if(r.subtreeFlags&10256)for(r=r.child;r!==null;)Lv(r),r=r.sibling}function Lv(r){switch(r.tag){case 0:case 11:case 15:Qo(r),r.flags&2048&&$s(9,r,r.return);break;case 3:Qo(r);break;case 12:Qo(r);break;case 22:var o=r.stateNode;r.memoizedState!==null&&o._visibility&4&&(r.return===null||r.return.tag!==13)?(o._visibility&=-5,Ic(r)):Qo(r);break;default:Qo(r)}}function Ic(r){var o=r.deletions;if((r.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];Pn=d,Iv(d,r)}Nv(r)}for(r=r.child;r!==null;){switch(o=r,o.tag){case 0:case 11:case 15:$s(8,o,o.return),Ic(o);break;case 22:u=o.stateNode,u._visibility&4&&(u._visibility&=-5,Ic(o));break;default:Ic(o)}r=r.sibling}}function Iv(r,o){for(;Pn!==null;){var u=Pn;switch(u.tag){case 0:case 11:case 15:$s(8,u,o);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:Zo(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,Pn=d;else e:for(u=r;Pn!==null;){d=Pn;var y=d.sibling,E=d.return;if(Av(d),d===u){Pn=null;break e}if(y!==null){y.return=E,Pn=y;break e}Pn=E}}}function sd(r){var o=f0(r);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(i(364));return o}if(r=m1(r),r===null)throw Error(i(362));return r.stateNode.current}function rd(r,o){var u=r.tag;switch(o.$$typeof){case $c:if(r.type===o.value)return!0;break;case eu:e:{for(o=o.value,r=[r,0],u=0;u<r.length;){var d=r[u++],y=d.tag,E=r[u++],I=o[E];if(y!==5&&y!==26&&y!==27||!tl(d)){for(;I!=null&&rd(d,I);)E++,I=o[E];if(E===o.length){o=!0;break e}else for(d=d.child;d!==null;)r.push(d,E),d=d.sibling}}o=!1}return o;case tu:if((u===5||u===26||u===27)&&_1(r.stateNode,o.value))return!0;break;case iu:if((u===5||u===6||u===26||u===27)&&(r=v1(r),r!==null&&0<=r.indexOf(o.value)))return!0;break;case nu:if((u===5||u===26||u===27)&&(r=r.memoizedProps["data-testname"],typeof r=="string"&&r.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function ad(r){switch(r.$$typeof){case $c:return"<"+(l(r.value)||"Unknown")+">";case eu:return":has("+(ad(r)||"")+")";case tu:return'[role="'+r.value+'"]';case iu:return'"'+r.value+'"';case nu:return'[data-testname="'+r.value+'"]';default:throw Error(i(365))}}function Pv(r,o){var u=[];r=[r,0];for(var d=0;d<r.length;){var y=r[d++],E=y.tag,I=r[d++],Z=o[I];if(E!==5&&E!==26&&E!==27||!tl(y)){for(;Z!=null&&rd(y,Z);)I++,Z=o[I];if(I===o.length)u.push(y);else for(y=y.child;y!==null;)r.push(y,I),y=y.sibling}}return u}function od(r,o){if(!el)throw Error(i(363));r=sd(r),r=Pv(r,o),o=[],r=Array.from(r);for(var u=0;u<r.length;){var d=r[u++],y=d.tag;if(y===5||y===26||y===27)tl(d)||o.push(d.stateNode);else for(d=d.child;d!==null;)r.push(d),d=d.sibling}return o}function wi(){if((sn&2)!==0&&Ht!==0)return Ht&-Ht;if(Et.T!==null){var r=qa;return r!==0?r:it()}return a1()}function Ov(){qi===0&&(qi=(Ht&536870912)===0||Xt?L():536870912);var r=Xi.current;return r!==null&&(r.flags|=32),qi}function si(r,o,u){(r===on&&ln===2||r.cancelPendingCommit!==null)&&(Ia(r,0),Us(r,Ht,qi,!1)),F(r,u),((sn&2)===0||r!==on)&&(r===on&&((sn&2)===0&&(Yr|=u),Sn===4&&Us(r,Ht,qi,!1)),He(r))}function Bv(r,o,u){if((sn&6)!==0)throw Error(i(327));var d=!u&&(o&60)===0&&(o&r.expiredLanes)===0||D(r,o),y=d?OM(r,o):hd(r,o,!0),E=d;do{if(y===0){eo&&!d&&Us(r,o,0,!1);break}else if(y===6)Us(r,o,0,!Os);else{if(u=r.current.alternate,E&&!IM(u)){y=hd(r,o,!1),E=!1;continue}if(y===2){if(E=o,r.errorRecoveryDisabledLanes&E)var I=0;else I=r.pendingLanes&-536870913,I=I!==0?I:I&536870912?536870912:0;if(I!==0){o=I;e:{var Z=r;y=cl;var ie=Hi&&Z.current.memoizedState.isDehydrated;if(ie&&(Ia(Z,I).flags|=256),I=hd(Z,I,!1),I!==2){if(Wd&&!ie){Z.errorRecoveryDisabledLanes|=E,Yr|=E,y=4;break e}E=gs,gs=y,E!==null&&ld(E)}y=I}if(E=!1,y!==2)continue}}if(y===1){Ia(r,0),Us(r,o,0,!0);break}e:{switch(d=r,y){case 0:case 1:throw Error(i(345));case 4:if((o&4194176)===o){Us(d,o,qi,!Os);break e}break;case 2:gs=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=o,(o&62914560)===o&&(E=Yd+300-Qi(),10<E)){if(Us(d,o,qi,!Os),z(d,0)!==0)break e;d.timeoutHandle=i1(zv.bind(null,d,u,gs,su,qd,o,qi,Yr,to,Os,2,-0,0),E);break e}zv(d,u,gs,su,qd,o,qi,Yr,to,Os,0,-0,0)}}break}while(!0);He(r)}function ld(r){gs===null?gs=r:gs.push.apply(gs,r)}function zv(r,o,u,d,y,E,I,Z,ie,ye,Oe,Ye,Qe){var At=o.subtreeFlags;if((At&8192||(At&16785408)===16785408)&&(u1(),Dv(o),o=h1(),o!==null)){r.cancelPendingCommit=o(Yv.bind(null,r,u,d,y,I,Z,ie,1,Ye,Qe)),Us(r,E,I,!ye);return}Yv(r,u,d,y,I,Z,ie,Oe,Ye,Qe)}function IM(r){for(var o=r;;){var u=o.tag;if((u===0||u===11||u===15)&&o.flags&16384&&(u=o.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],E=y.getSnapshot;y=y.value;try{if(!Di(E(),y))return!1}catch{return!1}}if(u=o.child,o.subtreeFlags&16384&&u!==null)u.return=o,o=u;else{if(o===r)break;for(;o.sibling===null;){if(o.return===null||o.return===r)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function Us(r,o,u,d){o&=~Xd,o&=~Yr,r.suspendedLanes|=o,r.pingedLanes&=~o,d&&(r.warmLanes|=o),d=r.expirationTimes;for(var y=o;0<y;){var E=31-Ri(y),I=1<<E;d[E]=-1,y&=~I}u!==0&&K(r,u,o)}function Fv(){return(sn&6)===0?(H(0),!1):!0}function cd(){if(Ot!==null){if(ln===0)var r=Ot.return;else r=Ot,Is=Xr=null,X(r),Ka=null,al=0,r=Ot;for(;r!==null;)_v(r.alternate,r),r=r.return;Ot=null}}function Ia(r,o){r.finishedWork=null,r.finishedLanes=0;var u=r.timeoutHandle;u!==Ad&&(r.timeoutHandle=Ad,s1(u)),u=r.cancelPendingCommit,u!==null&&(r.cancelPendingCommit=null,u()),cd(),on=r,Ot=u=nr(r.current,null),Ht=o,ln=0,Li=null,Os=!1,eo=D(r,o),Wd=!1,to=qi=Xd=Yr=ur=Sn=0,gs=cl=null,qd=!1,(o&8)!==0&&(o|=o&32);var d=r.entangledLanes;if(d!==0)for(r=r.entanglements,d&=o;0<d;){var y=31-Ri(d),E=1<<y;o|=r[y],d&=~E}return Bs=o,W(),u}function Hv(r,o){Nt=null,Et.H=ms,o===rl?(o=xt(),ln=3):o===Fd?(o=xt(),ln=4):ln=o===B0?8:o!==null&&typeof o=="object"&&typeof o.then=="function"?6:1,Li=o,Ot===null&&(Sn=1,Cc(r,le(o,r.current)))}function Vv(){var r=Xi.current;return r===null?!0:(Ht&4194176)===Ht?ps===null:(Ht&62914560)===Ht||(Ht&536870912)!==0?r===ps:!1}function Gv(){var r=Et.H;return Et.H=ms,r===null?ms:r}function kv(){var r=Et.A;return Et.A=EE,r}function ud(){Sn=4,Os||(Ht&4194176)!==Ht&&Xi.current!==null||(eo=!0),(ur&134217727)===0&&(Yr&134217727)===0||on===null||Us(on,Ht,qi,!1)}function hd(r,o,u){var d=sn;sn|=2;var y=Gv(),E=kv();(on!==r||Ht!==o)&&(su=null,Ia(r,o)),o=!1;var I=Sn;e:do try{if(ln!==0&&Ot!==null){var Z=Ot,ie=Li;switch(ln){case 8:cd(),I=6;break e;case 3:case 2:case 6:Xi.current===null&&(o=!0);var ye=ln;if(ln=0,Li=null,Pa(r,Z,ie,ye),u&&eo){I=0;break e}break;default:ye=ln,ln=0,Li=null,Pa(r,Z,ie,ye)}}PM(),I=Sn;break}catch(Oe){Hv(r,Oe)}while(!0);return o&&r.shellSuspendCounter++,Is=Xr=null,sn=d,Et.H=y,Et.A=E,Ot===null&&(on=null,Ht=0,W()),I}function PM(){for(;Ot!==null;)Wv(Ot)}function OM(r,o){var u=sn;sn|=2;var d=Gv(),y=kv();on!==r||Ht!==o?(su=null,ul=Qi()+500,Ia(r,o)):eo=D(r,o);e:do try{if(ln!==0&&Ot!==null){o=Ot;var E=Li;t:switch(ln){case 1:ln=0,Li=null,Pa(r,o,E,1);break;case 2:if(Ee(E)){ln=0,Li=null,Xv(o);break}o=function(){ln===2&&on===r&&(ln=7),He(r)},E.then(o,o);break e;case 3:ln=7;break e;case 4:ln=5;break e;case 7:Ee(E)?(ln=0,Li=null,Xv(o)):(ln=0,Li=null,Pa(r,o,E,7));break;case 5:var I=null;switch(Ot.tag){case 26:I=Ot.memoizedState;case 5:case 27:var Z=Ot,ie=Z.type,ye=Z.pendingProps;if(I?U0(I):d0(ie,ye)){ln=0,Li=null;var Oe=Z.sibling;if(Oe!==null)Ot=Oe;else{var Ye=Z.return;Ye!==null?(Ot=Ye,Pc(Ye)):Ot=null}break t}}ln=0,Li=null,Pa(r,o,E,5);break;case 6:ln=0,Li=null,Pa(r,o,E,6);break;case 8:cd(),Sn=6;break e;default:throw Error(i(462))}}BM();break}catch(Qe){Hv(r,Qe)}while(!0);return Is=Xr=null,Et.H=d,Et.A=y,sn=u,Ot!==null?0:(on=null,Ht=0,W(),Sn)}function BM(){for(;Ot!==null&&!fE();)Wv(Ot)}function Wv(r){var o=hv(r.alternate,r,Bs);r.memoizedProps=r.pendingProps,o===null?Pc(r):Ot=o}function Xv(r){var o=r,u=o.alternate;switch(o.tag){case 15:case 0:o=rv(u,o,o.pendingProps,o.type,void 0,Ht);break;case 11:o=rv(u,o,o.pendingProps,o.type.render,o.ref,Ht);break;case 5:X(o);default:_v(u,o),o=Ot=Jv(o,Bs),o=hv(u,o,Bs)}r.memoizedProps=r.pendingProps,o===null?Pc(r):Ot=o}function Pa(r,o,u,d){Is=Xr=null,X(o),Ka=null,al=0;var y=o.return;try{if(CM(r,y,o,u,Ht)){Sn=1,Cc(r,le(u,r.current)),Ot=null;return}}catch(E){if(y!==null)throw Ot=y,E;Sn=1,Cc(r,le(u,r.current)),Ot=null;return}o.flags&32768?(Xt||d===1?r=!0:eo||(Ht&536870912)!==0?r=!1:(Os=r=!0,(d===2||d===3||d===6)&&(d=Xi.current,d!==null&&d.tag===13&&(d.flags|=16384))),qv(o,r)):Pc(o)}function Pc(r){var o=r;do{if((o.flags&32768)!==0){qv(o,Os);return}r=o.return;var u=UM(o.alternate,o,Bs);if(u!==null){Ot=u;return}if(o=o.sibling,o!==null){Ot=o;return}Ot=o=r}while(o!==null);Sn===0&&(Sn=5)}function qv(r,o){do{var u=DM(r.alternate,r);if(u!==null){u.flags&=32767,Ot=u;return}if(u=r.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!o&&(r=r.sibling,r!==null)){Ot=r;return}Ot=r=u}while(r!==null);Sn=6,Ot=null}function Yv(r,o,u,d,y,E,I,Z,ie,ye){var Oe=Et.T,Ye=zr();try{gi(2),Et.T=null,zM(r,o,u,d,Ye,y,E,I,Z,ie,ye)}finally{Et.T=Oe,gi(Ye)}}function zM(r,o,u,d,y,E,I,Z){do Or();while(Zr!==null);if((sn&6)!==0)throw Error(i(327));var ie=r.finishedWork;if(d=r.finishedLanes,ie===null)return null;if(r.finishedWork=null,r.finishedLanes=0,ie===r.current)throw Error(i(177));r.callbackNode=null,r.callbackPriority=0,r.cancelPendingCommit=null;var ye=ie.lanes|ie.childLanes;if(ye|=Id,ee(r,d,ye,E,I,Z),r===on&&(Ot=on=null,Ht=0),(ie.subtreeFlags&10256)===0&&(ie.flags&10256)===0||ru||(ru=!0,Zd=ye,Kd=u,GM(Nd,function(){return Or(),null})),u=(ie.flags&15990)!==0,(ie.subtreeFlags&15990)!==0||u?(u=Et.T,Et.T=null,E=zr(),gi(2),I=sn,sn|=4,NM(r,ie),Cv(ie,r),t1(r.containerInfo),r.current=ie,Tv(r,ie.alternate,ie),dE(),sn=I,gi(E),Et.T=u):r.current=ie,ru?(ru=!1,Zr=r,hl=d):Zv(r,ye),ye=r.pendingLanes,ye===0&&(hr=null),B(ie.stateNode),He(r),o!==null)for(y=r.onRecoverableError,ie=0;ie<o.length;ie++)ye=o[ie],y(ye.value,{componentStack:ye.stack});return(hl&3)!==0&&Or(),ye=r.pendingLanes,(d&4194218)!==0&&(ye&42)!==0?r===jd?fl++:(fl=0,jd=r):fl=0,H(0),null}function Zv(r,o){(r.pooledCacheLanes&=o)===0&&(o=r.pooledCache,o!=null&&(r.pooledCache=null,Zo(o)))}function Or(){if(Zr!==null){var r=Zr,o=Zd;Zd=0;var u=oe(hl),d=32>u?32:u;u=Et.T;var y=zr();try{if(gi(d),Et.T=null,Zr===null)var E=!1;else{d=Kd,Kd=null;var I=Zr,Z=hl;if(Zr=null,hl=0,(sn&6)!==0)throw Error(i(331));var ie=sn;if(sn|=4,Lv(I.current),Uv(I,I.current,Z,d),sn=ie,H(0,!1),Ui&&typeof Ui.onPostCommitFiberRoot=="function")try{Ui.onPostCommitFiberRoot(nl,I)}catch{}E=!0}return E}finally{gi(y),Et.T=u,Zv(r,o)}}return!1}function Kv(r,o,u){o=le(u,o),o=Of(r.stateNode,o,2),r=tt(r,o,2),r!==null&&(F(r,2),He(r))}function Jt(r,o,u){if(r.tag===3)Kv(r,r,u);else for(;o!==null;){if(o.tag===3){Kv(o,r,u);break}else if(o.tag===1){var d=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(hr===null||!hr.has(d))){r=le(u,r),u=Qg(2),d=tt(o,u,2),d!==null&&($g(u,d,o,r),F(d,2),He(d));break}}o=o.return}}function fd(r,o,u){var d=r.pingCache;if(d===null){d=r.pingCache=new bE;var y=new Set;d.set(o,y)}else y=d.get(o),y===void 0&&(y=new Set,d.set(o,y));y.has(u)||(Wd=!0,y.add(u),r=FM.bind(null,r,o,u),o.then(r,r))}function FM(r,o,u){var d=r.pingCache;d!==null&&d.delete(o),r.pingedLanes|=r.suspendedLanes&u,r.warmLanes&=~u,on===r&&(Ht&u)===u&&(Sn===4||Sn===3&&(Ht&62914560)===Ht&&300>Qi()-Yd?(sn&2)===0&&Ia(r,0):Xd|=u,to===Ht&&(to=0)),He(r)}function jv(r,o){o===0&&(o=C()),r=Ge(r,o),r!==null&&(F(r,o),He(r))}function HM(r){var o=r.memoizedState,u=0;o!==null&&(u=o.retryLane),jv(r,u)}function VM(r,o){var u=0;switch(r.tag){case 13:var d=r.stateNode,y=r.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=r.stateNode;break;case 22:d=r.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(o),jv(r,u)}function GM(r,o){return Gc(r,o)}function kM(r,o,u,d){this.tag=r,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function dd(r){return r=r.prototype,!(!r||!r.isReactComponent)}function nr(r,o){var u=r.alternate;return u===null?(u=t(r.tag,o,r.key,r.mode),u.elementType=r.elementType,u.type=r.type,u.stateNode=r.stateNode,u.alternate=r,r.alternate=u):(u.pendingProps=o,u.type=r.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=r.flags&31457280,u.childLanes=r.childLanes,u.lanes=r.lanes,u.child=r.child,u.memoizedProps=r.memoizedProps,u.memoizedState=r.memoizedState,u.updateQueue=r.updateQueue,o=r.dependencies,u.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},u.sibling=r.sibling,u.index=r.index,u.ref=r.ref,u.refCleanup=r.refCleanup,u}function Jv(r,o){r.flags&=31457282;var u=r.alternate;return u===null?(r.childLanes=0,r.lanes=o,r.child=null,r.subtreeFlags=0,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=u.childLanes,r.lanes=u.lanes,r.child=u.child,r.subtreeFlags=0,r.deletions=null,r.memoizedProps=u.memoizedProps,r.memoizedState=u.memoizedState,r.updateQueue=u.updateQueue,r.type=u.type,o=u.dependencies,r.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),r}function Oc(r,o,u,d,y,E){var I=0;if(d=r,typeof r=="function")dd(r)&&(I=1);else if(typeof r=="string")I=Vi&&Kn?b0(r,u,Gn.current)?26:N0(r)?27:5:Vi?b0(r,u,Gn.current)?26:5:Kn&&N0(r)?27:5;else e:switch(r){case Ba:return Br(u.children,y,E,o);case s0:I=8,y|=24;break;case _d:return r=t(12,u,o,y|2),r.elementType=_d,r.lanes=E,r;case xd:return r=t(13,u,o,y),r.elementType=xd,r.lanes=E,r;case Sd:return r=t(19,u,o,y),r.elementType=Sd,r.lanes=E,r;case a0:return Qv(u,y,E,o);default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case YM:case ir:I=10;break e;case r0:I=9;break e;case yd:I=11;break e;case Md:I=14;break e;case sr:I=16,d=null;break e}I=29,u=Error(i(130,r===null?"null":typeof r,"")),d=null}return o=t(I,u,o,y),o.elementType=r,o.type=d,o.lanes=E,o}function Br(r,o,u,d){return r=t(7,r,d,o),r.lanes=u,r}function Qv(r,o,u,d){r=t(22,r,d,o),r.elementType=a0,r.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var E=y._current;if(E===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var I=Ge(E,2);I!==null&&(y._pendingVisibility|=2,si(I,E,2))}},attach:function(){var E=y._current;if(E===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var I=Ge(E,2);I!==null&&(y._pendingVisibility&=-3,si(I,E,2))}}};return r.stateNode=y,r}function pd(r,o,u){return r=t(6,r,null,o),r.lanes=u,r}function md(r,o,u){return o=t(4,r.children!==null?r.children:[],r.key,o),o.lanes=u,o.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},o}function WM(r,o,u,d,y,E,I,Z){this.tag=1,this.containerInfo=r,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ad,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=R(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=R(0),this.hiddenUpdates=R(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=E,this.onRecoverableError=I,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=Z,this.incompleteTransitions=new Map}function $v(r,o,u,d,y,E,I,Z,ie,ye,Oe,Ye){return r=new WM(r,o,u,I,Z,ie,ye,Ye),o=1,E===!0&&(o|=24),E=t(3,null,null,o),r.current=E,E.stateNode=r,o=Yf(),o.refCount++,r.pooledCache=o,o.refCount++,E.memoizedState={element:d,isDehydrated:u,cache:o},Le(E),r}function e0(r){return r?(r=Ha,r):Ha}function t0(r){var o=r._reactInternals;if(o===void 0)throw typeof r.render=="function"?Error(i(188)):(r=Object.keys(r).join(","),Error(i(268,r)));return r=v(o),r=r!==null?x(r):null,r===null?null:$o(r.stateNode)}function n0(r,o,u,d,y,E){y=e0(y),d.context===null?d.context=y:d.pendingContext=y,d=st(o),d.payload={element:u},E=E===void 0?null:E,E!==null&&(d.callback=E),u=tt(r,d,o),u!==null&&(si(u,r,o),Ke(u,r,o))}function i0(r,o){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var u=r.retryLane;r.retryLane=u!==0&&u<o?u:o}}function gd(r,o){i0(r,o),(r=r.alternate)&&i0(r,o)}var Pt={},XM=Rm(),Ci=q3(),vd=Object.assign,qM=Symbol.for("react.element"),Bc=Symbol.for("react.transitional.element"),Oa=Symbol.for("react.portal"),Ba=Symbol.for("react.fragment"),s0=Symbol.for("react.strict_mode"),_d=Symbol.for("react.profiler"),YM=Symbol.for("react.provider"),r0=Symbol.for("react.consumer"),ir=Symbol.for("react.context"),yd=Symbol.for("react.forward_ref"),xd=Symbol.for("react.suspense"),Sd=Symbol.for("react.suspense_list"),Md=Symbol.for("react.memo"),sr=Symbol.for("react.lazy"),a0=Symbol.for("react.offscreen"),ZM=Symbol.for("react.memo_cache_sentinel"),o0=Symbol.iterator,KM=Symbol.for("react.client.reference"),Et=XM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Ed,l0,bd=!1,zc=Array.isArray,jM=e.rendererVersion,JM=e.rendererPackageName,c0=e.extraDevToolsConfig,$o=e.getPublicInstance,QM=e.getRootHostContext,$M=e.getChildHostContext,e1=e.prepareForCommit,t1=e.resetAfterCommit,n1=e.createInstance,Td=e.appendInitialChild,u0=e.finalizeInitialChildren,Fc=e.shouldSetTextContent,h0=e.createTextInstance,i1=e.scheduleTimeout,s1=e.cancelTimeout,Ad=e.noTimeout,Ds=e.isPrimaryRenderer;e.warnsIfNotActing;var Zn=e.supportsMutation,rr=e.supportsPersistence,Hi=e.supportsHydration,f0=e.getInstanceFromNode;e.beforeActiveInstanceBlur,e.afterActiveInstanceBlur;var r1=e.preparePortalMount;e.prepareScopeUpdate,e.getInstanceFromScope;var gi=e.setCurrentUpdatePriority,zr=e.getCurrentUpdatePriority,a1=e.resolveUpdatePriority;e.resolveEventType,e.resolveEventTimeStamp;var o1=e.shouldAttemptEagerTransition,l1=e.detachDeletedInstance;e.requestPostPaintCallback;var c1=e.maySuspendCommit,d0=e.preloadInstance,u1=e.startSuspendingCommit,p0=e.suspendInstance,h1=e.waitForCommitToBeReady,za=e.NotPendingTransition,Fr=e.HostTransitionContext,f1=e.resetFormInstance;e.bindToConsole;var d1=e.supportsMicrotasks,p1=e.scheduleMicrotask,el=e.supportsTestSelectors,m1=e.findFiberRoot,g1=e.getBoundingRect,v1=e.getTextContent,tl=e.isHiddenSubtree,_1=e.matchAccessibilityRole,y1=e.setFocusIfFocusable,x1=e.setupIntersectionObserver,S1=e.appendChild,M1=e.appendChildToContainer,E1=e.commitTextUpdate,b1=e.commitMount,T1=e.commitUpdate,A1=e.insertBefore,w1=e.insertInContainerBefore,C1=e.removeChild,R1=e.removeChildFromContainer,m0=e.resetTextContent,U1=e.hideInstance,D1=e.hideTextInstance,N1=e.unhideInstance,L1=e.unhideTextInstance,I1=e.clearContainer,P1=e.cloneInstance,g0=e.createContainerChildSet,v0=e.appendChildToContainerChildSet,O1=e.finalizeContainerChildren,_0=e.replaceContainerChildren,y0=e.cloneHiddenInstance,x0=e.cloneHiddenTextInstance,wd=e.isSuspenseInstancePending,Cd=e.isSuspenseInstanceFallback,B1=e.getSuspenseInstanceFallbackErrorDetails,z1=e.registerSuspenseInstanceRetry,F1=e.canHydrateFormStateMarker,H1=e.isFormStateMarkerMatching,S0=e.getNextHydratableSibling,M0=e.getFirstHydratableChild,V1=e.getFirstHydratableChildWithinContainer,G1=e.getFirstHydratableChildWithinSuspenseInstance,k1=e.canHydrateInstance,W1=e.canHydrateTextInstance,X1=e.canHydrateSuspenseInstance,q1=e.hydrateInstance,Y1=e.hydrateTextInstance,Z1=e.hydrateSuspenseInstance,K1=e.getNextHydratableInstanceAfterSuspenseInstance,j1=e.commitHydratedContainer,J1=e.commitHydratedSuspenseInstance,Q1=e.clearSuspenseBoundary,$1=e.clearSuspenseBoundaryFromContainer,E0=e.shouldDeleteUnhydratedTailInstances;e.diffHydratedPropsForDevWarnings,e.diffHydratedTextForDevWarnings,e.describeHydratableInstanceForDevWarnings;var eE=e.validateHydratableInstance,tE=e.validateHydratableTextInstance,Vi=e.supportsResources,b0=e.isHostHoistableType,Rd=e.getHoistableRoot,T0=e.getResource,A0=e.acquireResource,w0=e.releaseResource,nE=e.hydrateHoistable,C0=e.mountHoistable,R0=e.unmountHoistable,iE=e.createHoistableInstance,sE=e.prepareToCommitHoistables,rE=e.mayResourceSuspendCommit,U0=e.preloadResource,aE=e.suspendResource,Kn=e.supportsSingletons,D0=e.resolveSingletonInstance,oE=e.clearSingleton,lE=e.acquireSingletonInstance,cE=e.releaseSingletonInstance,N0=e.isHostSingletonType,Ud=[],Fa=-1,Ha={},Ri=Math.clz32?Math.clz32:A,uE=Math.log,hE=Math.LN2,Hc=128,Vc=4194304,Gc=Ci.unstable_scheduleCallback,Dd=Ci.unstable_cancelCallback,fE=Ci.unstable_shouldYield,dE=Ci.unstable_requestPaint,Qi=Ci.unstable_now,L0=Ci.unstable_ImmediatePriority,pE=Ci.unstable_UserBlockingPriority,Nd=Ci.unstable_NormalPriority,mE=Ci.unstable_IdlePriority,gE=Ci.log,vE=Ci.unstable_setDisableYieldValue,nl=null,Ui=null,Di=typeof Object.is=="function"?Object.is:Y,I0=new WeakMap,Va=[],Ga=0,kc=null,Wc=0,Gi=[],ki=0,Hr=null,Ns=1,Ls="",Gn=S(null),il=S(null),ar=S(null),Xc=S(null),ri=null,jn=null,Xt=!1,$i=null,ds=!1,Ld=Error(i(519)),Wi=[],ka=0,Id=0,qc=null,Wa=null,Pd=!1,Yc=!1,Od=!1,Xa=0,sl=null,Bd=0,qa=0,Ya=null,or=!1,zd=!1,_E=Object.prototype.hasOwnProperty,rl=Error(i(460)),Fd=Error(i(474)),Zc={then:function(){}},Za=null,Ka=null,al=0,Vr=di(!0),P0=di(!1),ja=S(null),Kc=S(0),Xi=S(null),ps=null,Dn=S(0),lr=0,Nt=null,nn=null,An=null,jc=!1,Ja=!1,Gr=!1,Jc=0,ol=0,Qa=null,yE=0,Hd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},ms={readContext:Yn,use:ae,useCallback:en,useContext:en,useEffect:en,useImperativeHandle:en,useLayoutEffect:en,useInsertionEffect:en,useMemo:en,useReducer:en,useRef:en,useState:en,useDebugValue:en,useDeferredValue:en,useTransition:en,useSyncExternalStore:en,useId:en};ms.useCacheRefresh=en,ms.useMemoCache=en,ms.useHostTransitionStatus=en,ms.useFormState=en,ms.useActionState=en,ms.useOptimistic=en;var kr={readContext:Yn,use:ae,useCallback:function(r,o){return q().memoizedState=[r,o===void 0?null:o],r},useContext:Yn,useEffect:Ig,useImperativeHandle:function(r,o,u){u=u!=null?u.concat([r]):null,Tc(4194308,4,Bg.bind(null,o,r),u)},useLayoutEffect:function(r,o){return Tc(4194308,4,r,o)},useInsertionEffect:function(r,o){Tc(4,2,r,o)},useMemo:function(r,o){var u=q();o=o===void 0?null:o;var d=r();if(Gr){Q(!0);try{r()}finally{Q(!1)}}return u.memoizedState=[d,o],d},useReducer:function(r,o,u){var d=q();if(u!==void 0){var y=u(o);if(Gr){Q(!0);try{u(o)}finally{Q(!1)}}}else y=o;return d.memoizedState=d.baseState=y,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:r,lastRenderedState:y},d.queue=r,r=r.dispatch=wM.bind(null,Nt,r),[d.memoizedState,r]},useRef:function(r){var o=q();return r={current:r},o.memoizedState=r},useState:function(r){r=Dt(r);var o=r.queue,u=qg.bind(null,Nt,o);return o.dispatch=u,[r.memoizedState,u]},useDebugValue:Df,useDeferredValue:function(r,o){var u=q();return Nf(u,r,o)},useTransition:function(){var r=Dt(!1);return r=Gg.bind(null,Nt,r.queue,!0,!1),q().memoizedState=r,[!1,r]},useSyncExternalStore:function(r,o,u){var d=Nt,y=q();if(Xt){if(u===void 0)throw Error(i(407));u=u()}else{if(u=o(),on===null)throw Error(i(349));(Ht&60)!==0||ct(d,o,u)}y.memoizedState=u;var E={value:u,getSnapshot:o};return y.queue=E,Ig(Vt.bind(null,d,E,r),[r]),d.flags|=2048,Da(9,vt.bind(null,d,E,u,o),{destroy:void 0},null),u},useId:function(){var r=q(),o=on.identifierPrefix;if(Xt){var u=Ls,d=Ns;u=(d&~(1<<32-Ri(d)-1)).toString(32)+u,o=":"+o+"R"+u,u=Jc++,0<u&&(o+="H"+u.toString(32)),o+=":"}else u=yE++,o=":"+o+"r"+u.toString(32)+":";return r.memoizedState=o},useCacheRefresh:function(){return q().memoizedState=AM.bind(null,Nt)}};kr.useMemoCache=Be,kr.useHostTransitionStatus=Lf,kr.useFormState=tn,kr.useActionState=tn,kr.useOptimistic=function(r){var o=q();o.memoizedState=o.baseState=r;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return o.queue=u,o=If.bind(null,Nt,!0,u),u.dispatch=o,[r,o]};var cr={readContext:Yn,use:ae,useCallback:Fg,useContext:Yn,useEffect:Uf,useImperativeHandle:zg,useInsertionEffect:Pg,useLayoutEffect:Og,useMemo:Hg,useReducer:we,useRef:Lg,useState:function(){return we(ge)},useDebugValue:Df,useDeferredValue:function(r,o){var u=V();return Vg(u,nn.memoizedState,r,o)},useTransition:function(){var r=we(ge)[0],o=V().memoizedState;return[typeof r=="boolean"?r:ne(r),o]},useSyncExternalStore:rt,useId:Wg};cr.useCacheRefresh=Xg,cr.useMemoCache=Be,cr.useHostTransitionStatus=Lf,cr.useFormState=Un,cr.useActionState=Un,cr.useOptimistic=function(r,o){var u=V();return dt(u,nn,r,o)};var Wr={readContext:Yn,use:ae,useCallback:Fg,useContext:Yn,useEffect:Uf,useImperativeHandle:zg,useInsertionEffect:Pg,useLayoutEffect:Og,useMemo:Hg,useReducer:Ce,useRef:Lg,useState:function(){return Ce(ge)},useDebugValue:Df,useDeferredValue:function(r,o){var u=V();return nn===null?Nf(u,r,o):Vg(u,nn.memoizedState,r,o)},useTransition:function(){var r=Ce(ge)[0],o=V().memoizedState;return[typeof r=="boolean"?r:ne(r),o]},useSyncExternalStore:rt,useId:Wg};Wr.useCacheRefresh=Xg,Wr.useMemoCache=Be,Wr.useHostTransitionStatus=Lf,Wr.useFormState=Ng,Wr.useActionState=Ng,Wr.useOptimistic=function(r,o){var u=V();return nn!==null?dt(u,nn,r,o):(u.baseState=r,[r,u.queue.dispatch])};var Vd={isMounted:function(r){return(r=r._reactInternals)?m(r)===r:!1},enqueueSetState:function(r,o,u){r=r._reactInternals;var d=wi(),y=st(d);y.payload=o,u!=null&&(y.callback=u),o=tt(r,y,d),o!==null&&(si(o,r,d),Ke(o,r,d))},enqueueReplaceState:function(r,o,u){r=r._reactInternals;var d=wi(),y=st(d);y.tag=1,y.payload=o,u!=null&&(y.callback=u),o=tt(r,y,d),o!==null&&(si(o,r,d),Ke(o,r,d))},enqueueForceUpdate:function(r,o){r=r._reactInternals;var u=wi(),d=st(u);d.tag=2,o!=null&&(d.callback=o),o=tt(r,d,u),o!==null&&(si(o,r,u),Ke(o,r,u))}},O0=typeof reportError=="function"?reportError:function(r){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var o=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof r=="object"&&r!==null&&typeof r.message=="string"?String(r.message):String(r),error:r});if(!window.dispatchEvent(o))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",r);return}console.error(r)},B0=Error(i(461)),In=!1,Gd={dehydrated:null,treeContext:null,retryLane:0},Qc=S(null),Xr=null,Is=null,xE=typeof AbortController<"u"?AbortController:function(){var r=[],o=this.signal={aborted:!1,addEventListener:function(u,d){r.push(d)}};this.abort=function(){o.aborted=!0,r.forEach(function(u){return u()})}},SE=Ci.unstable_scheduleCallback,ME=Ci.unstable_NormalPriority,yn={$$typeof:ir,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},z0=Et.S;Et.S=function(r,o){typeof o=="object"&&o!==null&&typeof o.then=="function"&&Ve(r,o),z0!==null&&z0(r,o)};var qr=S(null),Ps=!1,xn=!1,kd=!1,F0=typeof WeakSet=="function"?WeakSet:Set,Pn=null,H0=!1,wn=null,Ni=!1,es=null,$a=8192,EE={getCacheForType:function(r){var o=Yn(yn),u=o.data.get(r);return u===void 0&&(u=r(),o.data.set(r,u)),u}},$c=0,eu=1,tu=2,nu=3,iu=4;if(typeof Symbol=="function"&&Symbol.for){var ll=Symbol.for;$c=ll("selector.component"),eu=ll("selector.has_pseudo_class"),tu=ll("selector.role"),nu=ll("selector.test_id"),iu=ll("selector.text")}var bE=typeof WeakMap=="function"?WeakMap:Map,sn=0,on=null,Ot=null,Ht=0,ln=0,Li=null,Os=!1,eo=!1,Wd=!1,Bs=0,Sn=0,ur=0,Yr=0,Xd=0,qi=0,to=0,cl=null,gs=null,qd=!1,Yd=0,ul=1/0,su=null,hr=null,ru=!1,Zr=null,hl=0,Zd=0,Kd=null,fl=0,jd=null;return Pt.attemptContinuousHydration=function(r){if(r.tag===13){var o=Ge(r,67108864);o!==null&&si(o,r,67108864),gd(r,67108864)}},Pt.attemptHydrationAtCurrentPriority=function(r){if(r.tag===13){var o=wi(),u=Ge(r,o);u!==null&&si(u,r,o),gd(r,o)}},Pt.attemptSynchronousHydration=function(r){switch(r.tag){case 3:if(r=r.stateNode,r.current.memoizedState.isDehydrated){var o=T(r.pendingLanes);if(o!==0){for(r.pendingLanes|=2,r.entangledLanes|=2;o;){var u=1<<31-Ri(o);r.entanglements[1]|=u,o&=~u}He(r),(sn&6)===0&&(ul=Qi()+500,H(0))}}break;case 13:o=Ge(r,2),o!==null&&si(o,r,2),Fv(),gd(r,2)}},Pt.batchedUpdates=function(r,o){return r(o)},Pt.createComponentSelector=function(r){return{$$typeof:$c,value:r}},Pt.createContainer=function(r,o,u,d,y,E,I,Z,ie,ye){return $v(r,o,!1,null,u,d,E,I,Z,ie,ye,null)},Pt.createHasPseudoClassSelector=function(r){return{$$typeof:eu,value:r}},Pt.createHydrationContainer=function(r,o,u,d,y,E,I,Z,ie,ye,Oe,Ye,Qe){return r=$v(u,d,!0,r,y,E,Z,ie,ye,Oe,Ye,Qe),r.context=e0(null),u=r.current,d=wi(),y=st(d),y.callback=o??null,tt(u,y,d),r.current.lanes=d,F(r,d),He(r),r},Pt.createPortal=function(r,o,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Oa,key:d==null?null:""+d,children:r,containerInfo:o,implementation:u}},Pt.createRoleSelector=function(r){return{$$typeof:tu,value:r}},Pt.createTestNameSelector=function(r){return{$$typeof:nu,value:r}},Pt.createTextSelector=function(r){return{$$typeof:iu,value:r}},Pt.defaultOnCaughtError=function(r){console.error(r)},Pt.defaultOnRecoverableError=function(r){O0(r)},Pt.defaultOnUncaughtError=function(r){O0(r)},Pt.deferredUpdates=function(r){var o=Et.T,u=zr();try{return gi(32),Et.T=null,r()}finally{gi(u),Et.T=o}},Pt.discreteUpdates=function(r,o,u,d,y){var E=Et.T,I=zr();try{return gi(2),Et.T=null,r(o,u,d,y)}finally{gi(I),Et.T=E,sn===0&&(ul=Qi()+500)}},Pt.findAllNodes=od,Pt.findBoundingRects=function(r,o){if(!el)throw Error(i(363));o=od(r,o),r=[];for(var u=0;u<o.length;u++)r.push(g1(o[u]));for(o=r.length-1;0<o;o--){u=r[o];for(var d=u.x,y=d+u.width,E=u.y,I=E+u.height,Z=o-1;0<=Z;Z--)if(o!==Z){var ie=r[Z],ye=ie.x,Oe=ye+ie.width,Ye=ie.y,Qe=Ye+ie.height;if(d>=ye&&E>=Ye&&y<=Oe&&I<=Qe){r.splice(o,1);break}else if(d!==ye||u.width!==ie.width||Qe<E||Ye>I){if(!(E!==Ye||u.height!==ie.height||Oe<d||ye>y)){ye>d&&(ie.width+=ye-d,ie.x=d),Oe<y&&(ie.width=y-ye),r.splice(o,1);break}}else{Ye>E&&(ie.height+=Ye-E,ie.y=E),Qe<I&&(ie.height=I-Ye),r.splice(o,1);break}}}return r},Pt.findHostInstance=t0,Pt.findHostInstanceWithNoPortals=function(r){return r=v(r),r=r!==null?M(r):null,r===null?null:$o(r.stateNode)},Pt.findHostInstanceWithWarning=function(r){return t0(r)},Pt.flushPassiveEffects=Or,Pt.flushSyncFromReconciler=function(r){var o=sn;sn|=1;var u=Et.T,d=zr();try{if(gi(2),Et.T=null,r)return r()}finally{gi(d),Et.T=u,sn=o,(sn&6)===0&&H(0)}},Pt.flushSyncWork=Fv,Pt.focusWithin=function(r,o){if(!el)throw Error(i(363));for(r=sd(r),o=Pv(r,o),o=Array.from(o),r=0;r<o.length;){var u=o[r++],d=u.tag;if(!tl(u)){if((d===5||d===26||d===27)&&y1(u.stateNode))return!0;for(u=u.child;u!==null;)o.push(u),u=u.sibling}}return!1},Pt.getFindAllNodesFailureDescription=function(r,o){if(!el)throw Error(i(363));var u=0,d=[];r=[sd(r),0];for(var y=0;y<r.length;){var E=r[y++],I=E.tag,Z=r[y++],ie=o[Z];if((I!==5&&I!==26&&I!==27||!tl(E))&&(rd(E,ie)&&(d.push(ad(ie)),Z++,Z>u&&(u=Z)),Z<o.length))for(E=E.child;E!==null;)r.push(E,Z),E=E.sibling}if(u<o.length){for(r=[];u<o.length;u++)r.push(ad(o[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+r.join(" > ")}return null},Pt.getPublicRootInstance=function(r){if(r=r.current,!r.child)return null;switch(r.child.tag){case 27:case 5:return $o(r.child.stateNode);default:return r.child.stateNode}},Pt.injectIntoDevTools=function(){var r={bundleType:0,version:jM,rendererPackageName:JM,currentDispatcherRef:Et,findFiberByHostInstance:f0,reconcilerVersion:"19.0.0"};if(c0!==null&&(r.rendererConfig=c0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")r=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)r=!0;else{try{nl=o.inject(r),Ui=o}catch{}r=!!o.checkDCE}}return r},Pt.isAlreadyRendering=function(){return!1},Pt.observeVisibleRects=function(r,o,u,d){if(!el)throw Error(i(363));r=od(r,o);var y=x1(r,u,d).disconnect;return{disconnect:function(){y()}}},Pt.shouldError=function(){return null},Pt.shouldSuspend=function(){return!1},Pt.startHostTransition=function(r,o,u,d){if(r.tag!==5)throw Error(i(476));var y=kg(r).queue;Gg(r,y,o,za,u===null?n:function(){var E=kg(r).next.queue;return Xo(r,E,{},wi()),u(d)})},Pt.updateContainer=function(r,o,u,d){var y=o.current,E=wi();return n0(y,E,r,o,u,d),E},Pt.updateContainerSync=function(r,o,u,d){return o.tag===0&&Or(),n0(o.current,2,r,o,u,d),2},Pt},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(Xp)),Xp.exports}var Ny;function Z3(){return Ny||(Ny=1,Wp.exports=Y3()),Wp.exports}var K3=Z3();const j3=qy(K3);var Zp={exports:{}},Kp={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ly;function J3(){return Ly||(Ly=1,function(s){function e(B,Q){var Y=B.length;B.push(Q);e:for(;0<Y;){var le=Y-1>>>1,he=B[le];if(0<i(he,Q))B[le]=Q,B[Y]=he,Y=le;else break e}}function t(B){return B.length===0?null:B[0]}function n(B){if(B.length===0)return null;var Q=B[0],Y=B.pop();if(Y!==Q){B[0]=Y;e:for(var le=0,he=B.length,xe=he>>>1;le<xe;){var Ae=2*(le+1)-1,Ze=B[Ae],se=Ae+1,Se=B[se];if(0>i(Ze,Y))se<he&&0>i(Se,Ze)?(B[le]=Se,B[se]=Y,le=se):(B[le]=Ze,B[Ae]=Y,le=Ae);else if(se<he&&0>i(Se,Y))B[le]=Se,B[se]=Y,le=se;else break e}}return Q}function i(B,Q){var Y=B.sortIndex-Q.sortIndex;return Y!==0?Y:B.id-Q.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var a=performance;s.unstable_now=function(){return a.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;function A(B){for(var Q=t(f);Q!==null;){if(Q.callback===null)n(f);else if(Q.startTime<=B)n(f),Q.sortIndex=Q.expirationTime,e(h,Q);else break;Q=t(f)}}function T(B){if(M=!1,A(B),!x)if(t(h)!==null)x=!0,J();else{var Q=t(f);Q!==null&&oe(T,Q.startTime-B)}}var z=!1,D=-1,O=5,L=-1;function C(){return!(s.unstable_now()-L<O)}function R(){if(z){var B=s.unstable_now();L=B;var Q=!0;try{e:{x=!1,M&&(M=!1,_(D),D=-1),v=!0;var Y=g;try{t:{for(A(B),m=t(h);m!==null&&!(m.expirationTime>B&&C());){var le=m.callback;if(typeof le=="function"){m.callback=null,g=m.priorityLevel;var he=le(m.expirationTime<=B);if(B=s.unstable_now(),typeof he=="function"){m.callback=he,A(B),Q=!0;break t}m===t(h)&&n(h),A(B)}else n(h);m=t(h)}if(m!==null)Q=!0;else{var xe=t(f);xe!==null&&oe(T,xe.startTime-B),Q=!1}}break e}finally{m=null,g=Y,v=!1}Q=void 0}}finally{Q?F():z=!1}}}var F;if(typeof b=="function")F=function(){b(R)};else if(typeof MessageChannel<"u"){var ee=new MessageChannel,K=ee.port2;ee.port1.onmessage=R,F=function(){K.postMessage(null)}}else F=function(){S(R,0)};function J(){z||(z=!0,F())}function oe(B,Q){D=S(function(){B(s.unstable_now())},Q)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(B){B.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<B?Math.floor(1e3/B):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return t(h)},s.unstable_next=function(B){switch(g){case 1:case 2:case 3:var Q=3;break;default:Q=g}var Y=g;g=Q;try{return B()}finally{g=Y}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(B,Q){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var Y=g;g=B;try{return Q()}finally{g=Y}},s.unstable_scheduleCallback=function(B,Q,Y){var le=s.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?le+Y:le):Y=le,B){case 1:var he=-1;break;case 2:he=250;break;case 5:he=1073741823;break;case 4:he=1e4;break;default:he=5e3}return he=Y+he,B={id:p++,callback:Q,priorityLevel:B,startTime:Y,expirationTime:he,sortIndex:-1},Y>le?(B.sortIndex=Y,e(f,B),t(h)===null&&B===t(f)&&(M?(_(D),D=-1):M=!0,oe(T,Y-le))):(B.sortIndex=he,e(h,B),x||v||(x=!0,J())),B},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(B){var Q=g;return function(){var Y=g;g=Q;try{return B.apply(this,arguments)}finally{g=Y}}}}(Kp)),Kp}var Iy;function Q3(){return Iy||(Iy=1,Zp.exports=J3()),Zp.exports}var Py=Q3();const $3=s=>typeof s=="object"&&typeof s.then=="function",va=[];function qS(s,e,t=(n,i)=>n===i){if(s===e)return!0;if(!s||!e)return!1;const n=s.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(s[i],e[i]))return!1;return!0}function YS(s,e=null,t=!1,n={}){e===null&&(e=[s]);for(const a of va)if(qS(e,a.keys,a.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(a,"error"))throw a.error;if(Object.prototype.hasOwnProperty.call(a,"response"))return n.lifespan&&n.lifespan>0&&(a.timeout&&clearTimeout(a.timeout),a.timeout=setTimeout(a.remove,n.lifespan)),a.response;if(!t)throw a.promise}const i={keys:e,equal:n.equal,remove:()=>{const a=va.indexOf(i);a!==-1&&va.splice(a,1)},promise:($3(s)?s:s(...e)).then(a=>{i.response=a,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(a=>i.error=a)};if(va.push(i),!t)throw i.promise}const eU=(s,e,t)=>YS(s,e,!1,t),tU=(s,e,t)=>void YS(s,e,!0,t),nU=s=>{if(s===void 0||s.length===0)va.splice(0,va.length);else{const e=va.find(t=>qS(s,t.keys,t.equal));e&&e.remove()}};function yg(s,e,t){if(!s)return;if(t(s)===!0)return s;let n=e?s.return:s.child;for(;n;){const i=yg(n,e,t);if(i)return i;n=e?null:n.sibling}}function ZS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const xg=ZS(Fe.createContext(null));class KS extends Fe.Component{render(){return Fe.createElement(xg.Provider,{value:this._reactInternals},this.props.children)}}function jS(){const s=Fe.useContext(xg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Fe.useId();return Fe.useMemo(()=>{for(const t of[s,s?.alternate]){if(!t)continue;const n=yg(t,!1,i=>{let a=i.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(n)return n}},[s,e])}const iU=Symbol.for("react.context"),sU=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===iU;function rU(){const s=jS(),[e]=Fe.useState(()=>new Map);e.clear();let t=s;for(;t;){const n=t.type;sU(n)&&n!==xg&&!e.has(n)&&e.set(n,Fe.use(ZS(n))),t=t.return}return e}function aU(){const s=rU();return Fe.useMemo(()=>Array.from(s.keys()).reduce((e,t)=>n=>Fe.createElement(e,null,Fe.createElement(t.Provider,{...n,value:s.get(t)})),e=>Fe.createElement(KS,{...e})),[s])}function JS(s){let e=s.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const QS=s=>s&&s.isOrthographicCamera,oU=s=>s&&s.hasOwnProperty("current"),lU=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),Ec=((s,e)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((e=window.navigator)==null?void 0:e.product)==="ReactNative"))()?Fe.useLayoutEffect:Fe.useEffect;function Sg(s){const e=Fe.useRef(s);return Ec(()=>void(e.current=s),[s]),e}function cU(){const s=jS(),e=aU();return Fe.useMemo(()=>({children:t})=>{const i=!!yg(s,!0,a=>a.type===Fe.StrictMode)?Fe.StrictMode:Fe.Fragment;return Zt.jsx(i,{children:Zt.jsx(e,{children:t})})},[s,e])}function uU({set:s}){return Ec(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const hU=(s=>(s=class extends Fe.Component{constructor(...t){super(...t),this.state={error:!1}}componentDidCatch(t){this.props.set(t)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function $S(s){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],t),s[1]):s}function So(s){var e;return(e=s.__r3f)==null?void 0:e.root.getState()}const dn={obj:s=>s===Object(s)&&!dn.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof e||!!s!=!!e)return!1;if(dn.str(s)||dn.num(s)||dn.boo(s))return s===e;const a=dn.obj(s);if(a&&n==="reference")return s===e;const l=dn.arr(s);if(l&&t==="reference")return s===e;if((l||a)&&s===e)return!0;let c;for(c in s)if(!(c in e))return!1;if(a&&t==="shallow"&&n==="shallow"){for(c in i?e:s)if(!dn.equ(s[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:s)if(s[c]!==e[c])return!1;if(dn.und(c)){if(l&&s.length===0&&e.length===0||a&&Object.keys(s).length===0&&Object.keys(e).length===0)return!0;if(s!==e)return!1}return!0}};function fU(s){const e={nodes:{},materials:{},meshes:{}};return s&&s.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material),t.isMesh&&!e.meshes[t.name]&&(e.meshes[t.name]=t)}),e}function dU(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const e in s){const t=s[e];t?.type!=="Scene"&&(t==null||t.dispose==null||t.dispose())}}const eM=["children","key","ref"];function pU(s){const e={};for(const t in s)eM.includes(t)||(e[t]=s[t]);return e}function Wh(s,e,t,n){const i=s;let a=i?.__r3f;return a||(a={root:e,type:t,parent:null,children:[],props:pU(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=a)),a}function rc(s,e){let t=s[e];if(!e.includes("-"))return{root:s,key:e,target:t};t=s;for(const i of e.split("-")){var n;e=i,s=t,t=(n=t)==null?void 0:n[e]}return{root:s,key:e,target:t}}const Oy=/-\d+$/;function Xh(s,e){if(dn.str(e.props.attach)){if(Oy.test(e.props.attach)){const i=e.props.attach.replace(Oy,""),{root:a,key:l}=rc(s.object,i);Array.isArray(a[l])||(a[l]=[])}const{root:t,key:n}=rc(s.object,e.props.attach);e.previousAttach=t[n],t[n]=e.object}else dn.fun(e.props.attach)&&(e.previousAttach=e.props.attach(s.object,e.object))}function qh(s,e){if(dn.str(e.props.attach)){const{root:t,key:n}=rc(s.object,e.props.attach),i=e.previousAttach;i===void 0?delete t[n]:t[n]=i}else e.previousAttach==null||e.previousAttach(s.object,e.object);delete e.previousAttach}const Mm=[...eM,"args","dispose","attach","object","onUpdate","dispose"],By=new Map;function mU(s){let e=By.get(s.constructor);try{e||(e=new s.constructor,By.set(s.constructor,e))}catch{}return e}function gU(s,e){const t={};for(const n in e)if(!Mm.includes(n)&&!dn.equ(e[n],s.props[n])){t[n]=e[n];for(const i in e)i.startsWith(`${n}-`)&&(t[i]=e[i])}for(const n in s.props){if(Mm.includes(n)||e.hasOwnProperty(n))continue;const{root:i,key:a}=rc(s.object,n);if(i.constructor&&i.constructor.length===0){const l=mU(i);dn.und(l)||(t[a]=l[a])}else t[a]=0}return t}const vU=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],_U=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function vs(s,e){var t;const n=s.__r3f,i=n&&JS(n).getState(),a=n?.eventCount;for(const c in e){let h=e[c];if(Mm.includes(c))continue;if(n&&_U.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=rc(s,c);if(m instanceof Io&&h instanceof Io)m.mask=h.mask;else if(m instanceof $e&&lU(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&vU.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Tn&&f[p].type===Si&&(f[p].colorSpace=kn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(t=n.object)!=null&&t.isObject3D&&a!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Wo(n),s}function Wo(s){var e;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const t=(e=s.root)==null||e.getState==null?void 0:e.getState();t&&t.internal.frames===0&&t.invalidate()}function tM(s,e){s.manual||(QS(s)?(s.left=e.width/-2,s.right=e.width/2,s.top=e.height/2,s.bottom=e.height/-2):s.aspect=e.width/e.height,s.updateProjectionMatrix())}const li=s=>s?.isObject3D;function Ju(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function nM(s,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function yU(s,e){const{internal:t}=s.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{nM(t.capturedMap,e,n,i)})}function xU(s){function e(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function t(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const b=So(v[_]);b&&(b.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const b=So(_);if(!b||!b.events.enabled||b.raycaster.camera===null)return[];if(b.raycaster.camera===void 0){var A;b.events.compute==null||b.events.compute(h,b,(A=b.previousRoot)==null?void 0:A.getState()),b.raycaster.camera===void 0&&(b.raycaster.camera=null)}return b.raycaster.camera?b.raycaster.intersectObject(_,!0):[]}let M=v.flatMap(x).sort((_,b)=>{const A=So(_.object),T=So(b.object);return!A||!T?_.distance-b.distance:T.events.priority-A.events.priority||_.distance-b.distance}).filter(_=>{const b=Ju(_);return m.has(b)?!1:(m.add(b),!0)});p.events.filter&&(M=p.events.filter(M,p));for(const _ of M){let b=_.object;for(;b;){var S;(S=b.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:b}),b=b.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Ju(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=So(v.object);if(x||v.object.traverseAncestors(M=>{const S=So(M);if(S)return x=S,!1}),x){const{raycaster:M,pointer:S,camera:_,internal:b}=x,A=new G(S.x,S.y,0).unproject(_),T=C=>{var R,F;return(R=(F=b.capturedMap.get(C))==null?void 0:F.has(v.eventObject))!=null?R:!1},z=C=>{const R={intersection:v,target:f.target};b.capturedMap.has(C)?b.capturedMap.get(C).set(v.eventObject,R):b.capturedMap.set(C,new Map([[v.eventObject,R]])),f.target.setPointerCapture(C)},D=C=>{const R=b.capturedMap.get(C);R&&nM(b.capturedMap,v.eventObject,R,C)};let O={};for(let C in f){let R=f[C];typeof R!="function"&&(O[C]=R)}let L={...v,...O,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:A,ray:M.ray,camera:_,stopPropagation(){const C="pointerId"in f&&b.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(L.stopped=g.stopped=!0,b.hovered.size&&Array.from(b.hovered.values()).find(R=>R.eventObject===v.eventObject))){const R=h.slice(0,h.indexOf(v));a([...R,v])}},target:{hasPointerCapture:T,setPointerCapture:z,releasePointerCapture:D},currentTarget:{hasPointerCapture:T,setPointerCapture:z,releasePointerCapture:D},nativeEvent:f};if(m(L),g.stopped===!0)break}}}return h}function a(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Ju(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>a([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),a([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?t:void 0),_=x?e(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(A=>A.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&a(S);function b(A){const T=A.eventObject,z=T.__r3f;if(!(z!=null&&z.eventCount))return;const D=z.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const O=Ju(A),L=g.hovered.get(O);L?L.stopped&&A.stopPropagation():(g.hovered.set(O,A),D.onPointerOver==null||D.onPointerOver(A),D.onPointerEnter==null||D.onPointerEnter(A))}D.onPointerMove==null||D.onPointerMove(A)}else{const O=D[h];O?(!x||g.initialHits.includes(T))&&(l(p,g.interaction.filter(L=>!g.initialHits.includes(L))),O(A)):x&&g.initialHits.includes(T)&&l(p,g.interaction.filter(L=>!g.initialHits.includes(L)))}}i(S,p,_,b)}}return{handlePointer:c}}const zy=s=>!!(s!=null&&s.render),Mg=Fe.createContext(null),SU=(s,e)=>{const t=XS((c,h)=>{const f=new G,p=new G,m=new G;function g(_=h().camera,b=p,A=h().size){const{width:T,height:z,top:D,left:O}=A,L=T/z;b.isVector3?m.copy(b):m.set(...b);const C=_.getWorldPosition(f).distanceTo(m);if(QS(_))return{width:T/_.zoom,height:z/_.zoom,top:D,left:O,factor:1,distance:C,aspect:L};{const R=_.fov*Math.PI/180,F=2*Math.tan(R/2)*C,ee=F*(T/z);return{width:ee,height:F,top:D,left:O,factor:T/ee,distance:C,aspect:L}}}let v;const x=_=>c(b=>({performance:{...b.performance,current:_}})),M=new Te;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,b)=>e(_,b,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new dg,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(b=>({...b,events:{...b.events,..._}})),setSize:(_,b,A=0,T=0)=>{const z=h().camera,D={width:_,height:b,top:A,left:T};c(O=>({size:D,viewport:{...O.viewport,...g(z,p,D)}}))},setDpr:_=>c(b=>{const A=$S(_);return{viewport:{...b.viewport,dpr:A,initialDpr:b.viewport.initialDpr||A}}}),setFrameloop:(_="always")=>{const b=h().clock;b.stop(),b.elapsedTime=0,_!=="never"&&(b.start(),b.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:Fe.createRef(),active:!1,frames:0,priority:0,subscribe:(_,b,A)=>{const T=h().internal;return T.priority=T.priority+(b>0?1:0),T.subscribers.push({ref:_,priority:b,store:A}),T.subscribers=T.subscribers.sort((z,D)=>z.priority-D.priority),()=>{const z=h().internal;z!=null&&z.subscribers&&(z.priority=z.priority-(b>0?1:0),z.subscribers=z.subscribers.filter(D=>D.ref!==_))}}}}}),n=t.getState();let i=n.size,a=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=t.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==a){i=h,a=f.dpr,tM(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>s(c)),t};function Eg(){const s=Fe.useContext(Mg);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function ac(s=t=>t,e){return Eg()(s,e)}function iM(s,e=0){const t=Eg(),n=t.getState().internal.subscribe,i=Sg(s);return Ec(()=>n(i,e,t),[e,n,t]),null}const Fy=new WeakMap,MU=s=>{var e;return typeof s=="function"&&(s==null||(e=s.prototype)==null?void 0:e.constructor)===s};function sM(s,e){return function(t,...n){let i;return MU(t)?(i=Fy.get(t),i||(i=new t,Fy.set(t,i))):i=t,s&&s(i),Promise.all(n.map(a=>new Promise((l,c)=>i.load(a,h=>{li(h?.scene)&&Object.assign(h,fU(h.scene)),l(h)},e,h=>c(new Error(`Could not load ${a}: ${h?.message}`))))))}}function Bo(s,e,t,n){const i=Array.isArray(e)?e:[e],a=eU(sM(t,n),[s,...i],{equal:dn.equ});return Array.isArray(e)?a:a[0]}Bo.preload=function(s,e,t){const n=Array.isArray(e)?e:[e];return tU(sM(t),[s,...n])};Bo.clear=function(s,e){const t=Array.isArray(e)?e:[e];return nU([s,...t])};function EU(s){const e=j3(s);return e.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Fe.version}),e}const rM=0,zo={},bU=/^three(?=[A-Z])/,Cf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let TU=0;const AU=s=>typeof s=="function";function aM(s){if(AU(s)){const e=`${TU++}`;return zo[e]=s,e}else Object.assign(zo,s)}function oM(s,e){const t=Cf(s),n=zo[t];if(s!=="primitive"&&!n)throw new Error(`R3F: ${t} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!e.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(e.args!==void 0&&!Array.isArray(e.args))throw new Error("R3F: The args prop must be an array!")}function wU(s,e,t){var n;return s=Cf(s)in zo?s:s.replace(bU,""),oM(s,e),s==="primitive"&&(n=e.object)!=null&&n.__r3f&&delete e.object.__r3f,Wh(e.object,t,s,e)}function CU(s){if(!s.isHidden){var e;s.props.attach&&(e=s.parent)!=null&&e.object?qh(s.parent,s):li(s.object)&&(s.object.visible=!1),s.isHidden=!0,Wo(s)}}function lM(s){if(s.isHidden){var e;s.props.attach&&(e=s.parent)!=null&&e.object?Xh(s.parent,s):li(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Wo(s)}}function bg(s,e,t){const n=e.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!e.object){var i,a;const l=zo[Cf(e.type)];e.object=(i=e.props.object)!=null?i:new l(...(a=e.props.args)!=null?a:[]),e.object.__r3f=e}if(vs(e.object,e.props),e.props.attach)Xh(s,e);else if(li(e.object)&&li(s.object)){const l=s.object.children.indexOf(t?.object);if(t&&l!==-1){const c=s.object.children.indexOf(e.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,e.object)}else e.object.parent=s.object,s.object.children.splice(l,0,e.object),e.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:e.object})}else s.object.add(e.object)}for(const l of e.children)bg(e,l);Wo(e)}}function jp(s,e){e&&(e.parent=s,s.children.push(e),bg(s,e))}function Hy(s,e,t){if(!e||!t)return;e.parent=s;const n=s.children.indexOf(t);n!==-1?s.children.splice(n,0,e):s.children.push(e),bg(s,e,t)}function cM(s){if(typeof s.dispose=="function"){const e=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?e():Py.unstable_scheduleCallback(Py.unstable_IdlePriority,e)}}function Em(s,e,t){if(!e)return;e.parent=null;const n=s.children.indexOf(e);n!==-1&&s.children.splice(n,1),e.props.attach?qh(s,e):li(e.object)&&li(s.object)&&(s.object.remove(e.object),yU(JS(e),e.object));const i=e.props.dispose!==null&&t!==!1;for(let a=e.children.length-1;a>=0;a--){const l=e.children[a];Em(e,l,i)}e.children.length=0,delete e.object.__r3f,i&&e.type!=="primitive"&&e.object.type!=="Scene"&&cM(e.object),t===void 0&&Wo(e)}function RU(s,e){for(const t of[s,s.alternate])if(t!==null)if(typeof t.ref=="function"){t.refCleanup==null||t.refCleanup();const n=t.ref(e);typeof n=="function"&&(t.refCleanup=n)}else t.ref&&(t.ref.current=e)}const sh=[];function UU(){for(const[t]of sh){const n=t.parent;if(n){t.props.attach?qh(n,t):li(t.object)&&li(n.object)&&n.object.remove(t.object);for(const i of t.children)i.props.attach?qh(t,i):li(i.object)&&li(t.object)&&t.object.remove(i.object)}t.isHidden&&lM(t),t.object.__r3f&&delete t.object.__r3f,t.type!=="primitive"&&cM(t.object)}for(const[t,n,i]of sh){t.props=n;const a=t.parent;if(a){var s,e;const l=zo[Cf(t.type)];t.object=(s=t.props.object)!=null?s:new l(...(e=t.props.args)!=null?e:[]),t.object.__r3f=t,RU(i,t.object),vs(t.object,t.props),t.props.attach?Xh(a,t):li(t.object)&&li(a.object)&&a.object.add(t.object);for(const c of t.children)c.props.attach?Xh(t,c):li(c.object)&&li(t.object)&&t.object.add(c.object);Wo(t)}}sh.length=0}const Jp=()=>{},Vy={};let Qu=rM;const DU=0,NU=4,Yh=EU({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:wU,removeChild:Em,appendChild:jp,appendInitialChild:jp,insertBefore:Hy,appendChildToContainer(s,e){const t=s.getState().scene.__r3f;!e||!t||jp(t,e)},removeChildFromContainer(s,e){const t=s.getState().scene.__r3f;!e||!t||Em(t,e)},insertInContainerBefore(s,e,t){const n=s.getState().scene.__r3f;!e||!t||!n||Hy(n,e,t)},getRootHostContext:()=>Vy,getChildHostContext:()=>Vy,commitUpdate(s,e,t,n,i){var a,l,c;oM(e,n);let h=!1;if((s.type==="primitive"&&t.object!==n.object||((a=n.args)==null?void 0:a.length)!==((l=t.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=t.args)==null?void 0:g[m])}))&&(h=!0),h)sh.push([s,{...n},i]);else{const p=gU(s,n);Object.keys(p).length&&(Object.assign(s.props,p),vs(s.object,p))}(i.sibling===null||(i.flags&NU)===DU)&&UU()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>Wh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:CU,unhideInstance:lM,createTextInstance:Jp,hideTextInstance:Jp,unhideTextInstance:Jp,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:Fe.createContext(null),setCurrentUpdatePriority(s){Qu=s},getCurrentUpdatePriority(){return Qu},resolveUpdatePriority(){var s;if(Qu!==rM)return Qu;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return ih.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return ih.ContinuousEventPriority;default:return ih.DefaultEventPriority}},resetFormInstance(){}}),wa=new Map,Mo={objects:"shallow",strict:!1};function LU(s,e){if(!e&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:t,height:n,top:i,left:a}=s.parentElement.getBoundingClientRect();return{width:t,height:n,top:i,left:a}}else if(!e&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...e}}function IU(s){const e=wa.get(s),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,a=n||SU(Am,ky),l=t||Yh.createContainer(a,ih.ConcurrentRoot,null,!1,null,"",i,i,i,null);e||wa.set(s,{fiber:l,store:a});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(xe=>g=xe);let{gl:v,size:x,scene:M,events:S,onCreated:_,shadows:b=!1,linear:A=!1,flat:T=!1,legacy:z=!1,orthographic:D=!1,frameloop:O="always",dpr:L=[1,2],performance:C,raycaster:R,camera:F,onPointerMissed:ee}=m,K=a.getState(),J=K.gl;if(!K.gl){const xe={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Ae=typeof v=="function"?await v(xe):v;zy(Ae)?J=Ae:J=new jm({...xe,...v}),K.set({gl:J})}let oe=K.raycaster;oe||K.set({raycaster:oe=new vg});const{params:B,...Q}=R||{};if(dn.equ(Q,oe,Mo)||vs(oe,{...Q}),dn.equ(B,oe.params,Mo)||vs(oe,{params:{...oe.params,...B}}),!K.camera||K.camera===h&&!dn.equ(h,F,Mo)){h=F;const xe=F?.isCamera,Ae=xe?F:D?new Vo(0,0,0,0,.1,1e3):new zn(75,0,.1,1e3);xe||(Ae.position.z=5,F&&(vs(Ae,F),Ae.manual||("aspect"in F||"left"in F||"right"in F||"bottom"in F||"top"in F)&&(Ae.manual=!0,Ae.updateProjectionMatrix())),!K.camera&&!(F!=null&&F.rotation)&&Ae.lookAt(0,0,0)),K.set({camera:Ae}),oe.camera=Ae}if(!K.scene){let xe;M!=null&&M.isScene?(xe=M,Wh(xe,a,"",{})):(xe=new gc,Wh(xe,a,"",{}),M&&vs(xe,M)),K.set({scene:xe})}S&&!K.events.handlers&&K.set({events:S(a)});const Y=LU(s,x);if(dn.equ(Y,K.size,Mo)||K.setSize(Y.width,Y.height,Y.top,Y.left),L&&K.viewport.dpr!==$S(L)&&K.setDpr(L),K.frameloop!==O&&K.setFrameloop(O),K.onPointerMissed||K.set({onPointerMissed:ee}),C&&!dn.equ(C,K.performance,Mo)&&K.set(xe=>({performance:{...xe.performance,...C}})),!K.xr){var le;const xe=(se,Se)=>{const De=a.getState();De.frameloop!=="never"&&ky(se,!0,De,Se)},Ae=()=>{const se=a.getState();se.gl.xr.enabled=se.gl.xr.isPresenting,se.gl.xr.setAnimationLoop(se.gl.xr.isPresenting?xe:null),se.gl.xr.isPresenting||Am(se)},Ze={connect(){const se=a.getState().gl;se.xr.addEventListener("sessionstart",Ae),se.xr.addEventListener("sessionend",Ae)},disconnect(){const se=a.getState().gl;se.xr.removeEventListener("sessionstart",Ae),se.xr.removeEventListener("sessionend",Ae)}};typeof((le=J.xr)==null?void 0:le.addEventListener)=="function"&&Ze.connect(),K.set({xr:Ze})}if(J.shadowMap){const xe=J.shadowMap.enabled,Ae=J.shadowMap.type;if(J.shadowMap.enabled=!!b,dn.boo(b))J.shadowMap.type=Dl;else if(dn.str(b)){var he;const Ze={basic:Ky,percentage:jh,soft:Dl,variance:rs};J.shadowMap.type=(he=Ze[b])!=null?he:Dl}else dn.obj(b)&&Object.assign(J.shadowMap,b);(xe!==J.shadowMap.enabled||Ae!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}return Ft.enabled=!z,f||(J.outputColorSpace=A?cs:kn,J.toneMapping=T?Ss:Um),K.legacy!==z&&K.set(()=>({legacy:z})),K.linear!==A&&K.set(()=>({linear:A})),K.flat!==T&&K.set(()=>({flat:T})),v&&!dn.fun(v)&&!zy(v)&&!dn.equ(v,J,Mo)&&vs(J,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Yh.updateContainer(Zt.jsx(PU,{store:a,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),a},unmount(){uM(s)}}}function PU({store:s,children:e,onCreated:t,rootElement:n}){return Ec(()=>{const i=s.getState();i.set(a=>({internal:{...a.internal,active:!0}})),t&&t(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Zt.jsx(Mg.Provider,{value:s,children:e})}function uM(s,e){const t=wa.get(s),n=t?.fiber;if(n){const i=t?.store.getState();i&&(i.internal.active=!1),Yh.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var a,l,c,h;i.events.disconnect==null||i.events.disconnect(),(a=i.gl)==null||(l=a.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),dU(i.scene),wa.delete(s)}catch{}},500)})}}function OU(s,e,t){return Zt.jsx(BU,{children:s,container:e,state:t})}function BU({state:s={},children:e,container:t}){const{events:n,size:i,...a}=s,l=Eg(),[c]=Fe.useState(()=>new vg),[h]=Fe.useState(()=>new Te),f=Sg((m,g)=>{let v;if(g.camera&&i){const x=g.camera;v=m.viewport.getCurrentViewport(x,new G,i),x!==m.camera&&tM(x,i)}return{...m,...g,scene:t,raycaster:c,pointer:h,mouse:h,previousRoot:l,events:{...m.events,...g.events,...n},size:{...m.size,...i},viewport:{...m.viewport,...v},setEvents:x=>g.set(M=>({...M,events:{...M.events,...x}}))}}),p=Fe.useMemo(()=>{const m=XS((v,x)=>({...a,set:v,get:x})),g=v=>m.setState(x=>f.current(v,x));return g(l.getState()),l.subscribe(g),m},[l,t]);return Zt.jsx(Zt.Fragment,{children:Yh.createPortal(Zt.jsx(Mg.Provider,{value:p,children:e}),p,null)})}const zU=new Set,FU=new Set,HU=new Set;function Qp(s,e){if(s.size)for(const{callback:t}of s.values())t(e)}function Vl(s,e){switch(s){case"before":return Qp(zU,e);case"after":return Qp(FU,e);case"tail":return Qp(HU,e)}}let $p,em;function bm(s,e,t){let n=e.clock.getDelta();e.frameloop==="never"&&typeof s=="number"&&(n=s-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=s),$p=e.internal.subscribers;for(let i=0;i<$p.length;i++)em=$p[i],em.ref.current(em.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}let Zh=!1,Tm=!1,tm,Gy,Eo;function hM(s){Gy=requestAnimationFrame(hM),Zh=!0,tm=0,Vl("before",s),Tm=!0;for(const t of wa.values()){var e;Eo=t.store.getState(),Eo.internal.active&&(Eo.frameloop==="always"||Eo.internal.frames>0)&&!((e=Eo.gl.xr)!=null&&e.isPresenting)&&(tm+=bm(s,Eo))}if(Tm=!1,Vl("after",s),tm===0)return Vl("tail",s),Zh=!1,cancelAnimationFrame(Gy)}function Am(s,e=1){var t;if(!s)return wa.forEach(n=>Am(n.store.getState(),e));(t=s.gl.xr)!=null&&t.isPresenting||!s.internal.active||s.frameloop==="never"||(e>1?s.internal.frames=Math.min(60,s.internal.frames+e):Tm?s.internal.frames=2:s.internal.frames=1,Zh||(Zh=!0,requestAnimationFrame(hM)))}function ky(s,e=!0,t,n){if(e&&Vl("before",s),t)bm(s,t,n);else for(const i of wa.values())bm(s,i.store.getState());e&&Vl("after",s)}const nm={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function VU(s){const{handlePointer:e}=xU(s);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(nm).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=s.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(a=>({events:{...a.events,connected:t}})),i.handlers)for(const a in i.handlers){const l=i.handlers[a],[c,h]=nm[a];t.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:t,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const a=n.handlers[i],[l]=nm[i];n.connected.removeEventListener(l,a)}t(i=>({events:{...i.events,connected:void 0}}))}}}}function Wy(s,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>s(...n),e)}}function GU({debounce:s,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,l]=Fe.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Fe.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=Fe.useRef(!1);Fe.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=Fe.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:b,top:A,width:T,height:z,bottom:D,right:O,x:L,y:C}=c.current.element.getBoundingClientRect(),R={left:b,top:A,width:T,height:z,bottom:D,right:O,x:L,y:C};c.current.element instanceof HTMLElement&&n&&(R.height=c.current.element.offsetHeight,R.width=c.current.element.offsetWidth),Object.freeze(R),p.current&&!qU(c.current.lastBounds,R)&&l(c.current.lastBounds=R)};return[_,f?Wy(_,f):_,h?Wy(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=fM(_),M())};return WU(v,!!e),kU(g),Fe.useEffect(()=>{x(),M()},[e,v,g]),Fe.useEffect(()=>x,[]),[S,a,m]}function kU(s){Fe.useEffect(()=>{const e=s;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[s])}function WU(s,e){Fe.useEffect(()=>{if(e){const t=s;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[s,e])}function fM(s){const e=[];if(!s||s===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[t,n,i].some(a=>a==="auto"||a==="scroll")&&e.push(s),[...e,...fM(s.parentElement)]}const XU=["x","y","top","bottom","left","right","width","height"],qU=(s,e)=>XU.every(t=>s[t]===e[t]);function YU({ref:s,children:e,fallback:t,resize:n,style:i,gl:a,events:l=VU,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:b,scene:A,onPointerMissed:T,onCreated:z,...D}){Fe.useMemo(()=>aM(N3),[]);const O=cU(),[L,C]=GU({scroll:!0,debounce:{scroll:50,resize:0},...n}),R=Fe.useRef(null),F=Fe.useRef(null);Fe.useImperativeHandle(s,()=>R.current);const ee=Sg(T),[K,J]=Fe.useState(!1),[oe,B]=Fe.useState(!1);if(K)throw K;if(oe)throw oe;const Q=Fe.useRef(null);Ec(()=>{const le=R.current;if(C.width>0&&C.height>0&&le){Q.current||(Q.current=IU(le));async function he(){await Q.current.configure({gl:a,scene:A,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:b,size:C,onPointerMissed:(...xe)=>ee.current==null?void 0:ee.current(...xe),onCreated:xe=>{xe.events.connect==null||xe.events.connect(c?oU(c)?c.current:c:F.current),h&&xe.setEvents({compute:(Ae,Ze)=>{const se=Ae[h+"X"],Se=Ae[h+"Y"];Ze.pointer.set(se/Ze.size.width*2-1,-(Se/Ze.size.height)*2+1),Ze.raycaster.setFromCamera(Ze.pointer,Ze.camera)}}),z?.(xe)}}),Q.current.render(Zt.jsx(O,{children:Zt.jsx(hU,{set:B,children:Zt.jsx(Fe.Suspense,{fallback:Zt.jsx(uU,{set:J}),children:e??null})})}))}he()}}),Fe.useEffect(()=>{const le=R.current;if(le)return()=>uM(le)},[]);const Y=c?"none":"auto";return Zt.jsx("div",{ref:F,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Y,...i},...D,children:Zt.jsx("div",{ref:L,style:{width:"100%",height:"100%"},children:Zt.jsx("canvas",{ref:R,style:{display:"block"},children:t})})})}function ZU(s){return Zt.jsx(KS,{children:Zt.jsx(YU,{...s})})}function Kh(){return Kh=Object.assign?Object.assign.bind():function(s){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(s[n]=t[n])}return s},Kh.apply(null,arguments)}const dM=parseInt(lc.replace(/\D+/g,""));var Ki=Uint8Array,Er=Uint16Array,wm=Uint32Array,pM=new Ki([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),mM=new Ki([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),KU=new Ki([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),gM=function(s,e){for(var t=new Er(31),n=0;n<31;++n)t[n]=e+=1<<s[n-1];for(var i=new wm(t[30]),n=1;n<30;++n)for(var a=t[n];a<t[n+1];++a)i[a]=a-t[n]<<5|n;return[t,i]},vM=gM(pM,2),_M=vM[0],jU=vM[1];_M[28]=258,jU[258]=28;var JU=gM(mM,0),QU=JU[0],Cm=new Er(32768);for(var hn=0;hn<32768;++hn){var xr=(hn&43690)>>>1|(hn&21845)<<1;xr=(xr&52428)>>>2|(xr&13107)<<2,xr=(xr&61680)>>>4|(xr&3855)<<4,Cm[hn]=((xr&65280)>>>8|(xr&255)<<8)>>>1}var Gl=function(s,e,t){for(var n=s.length,i=0,a=new Er(e);i<n;++i)++a[s[i]-1];var l=new Er(e);for(i=0;i<e;++i)l[i]=l[i-1]+a[i-1]<<1;var c;if(t){c=new Er(1<<e);var h=15-e;for(i=0;i<n;++i)if(s[i])for(var f=i<<4|s[i],p=e-s[i],m=l[s[i]-1]++<<p,g=m|(1<<p)-1;m<=g;++m)c[Cm[m]>>>h]=f}else for(c=new Er(n),i=0;i<n;++i)s[i]&&(c[i]=Cm[l[s[i]-1]++]>>>15-s[i]);return c},bc=new Ki(288);for(var hn=0;hn<144;++hn)bc[hn]=8;for(var hn=144;hn<256;++hn)bc[hn]=9;for(var hn=256;hn<280;++hn)bc[hn]=7;for(var hn=280;hn<288;++hn)bc[hn]=8;var yM=new Ki(32);for(var hn=0;hn<32;++hn)yM[hn]=5;var $U=Gl(bc,9,1),eD=Gl(yM,5,1),im=function(s){for(var e=s[0],t=1;t<s.length;++t)s[t]>e&&(e=s[t]);return e},ss=function(s,e,t){var n=e/8|0;return(s[n]|s[n+1]<<8)>>(e&7)&t},sm=function(s,e){var t=e/8|0;return(s[t]|s[t+1]<<8|s[t+2]<<16)>>(e&7)},tD=function(s){return(s/8|0)+(s&7&&1)},nD=function(s,e,t){(t==null||t>s.length)&&(t=s.length);var n=new(s instanceof Er?Er:s instanceof wm?wm:Ki)(t-e);return n.set(s.subarray(e,t)),n},iD=function(s,e,t){var n=s.length;if(!n||t&&!t.l&&n<5)return e||new Ki(0);var i=!e||t,a=!t||t.i;t||(t={}),e||(e=new Ki(n*3));var l=function(De){var Ue=e.length;if(De>Ue){var je=new Ki(Math.max(Ue*2,De));je.set(e),e=je}},c=t.f||0,h=t.p||0,f=t.b||0,p=t.l,m=t.d,g=t.m,v=t.n,x=n*8;do{if(!p){t.f=c=ss(s,h,1);var M=ss(s,h+1,3);if(h+=3,M)if(M==1)p=$U,m=eD,g=9,v=5;else if(M==2){var A=ss(s,h,31)+257,T=ss(s,h+10,15)+4,z=A+ss(s,h+5,31)+1;h+=14;for(var D=new Ki(z),O=new Ki(19),L=0;L<T;++L)O[KU[L]]=ss(s,h+L*3,7);h+=T*3;for(var C=im(O),R=(1<<C)-1,F=Gl(O,C,1),L=0;L<z;){var ee=F[ss(s,h,R)];h+=ee&15;var S=ee>>>4;if(S<16)D[L++]=S;else{var K=0,J=0;for(S==16?(J=3+ss(s,h,3),h+=2,K=D[L-1]):S==17?(J=3+ss(s,h,7),h+=3):S==18&&(J=11+ss(s,h,127),h+=7);J--;)D[L++]=K}}var oe=D.subarray(0,A),B=D.subarray(A);g=im(oe),v=im(B),p=Gl(oe,g,1),m=Gl(B,v,1)}else throw"invalid block type";else{var S=tD(h)+4,_=s[S-4]|s[S-3]<<8,b=S+_;if(b>n){if(a)throw"unexpected EOF";break}i&&l(f+_),e.set(s.subarray(S,b),f),t.b=f+=_,t.p=h=b*8;continue}if(h>x){if(a)throw"unexpected EOF";break}}i&&l(f+131072);for(var Q=(1<<g)-1,Y=(1<<v)-1,le=h;;le=h){var K=p[sm(s,h)&Q],he=K>>>4;if(h+=K&15,h>x){if(a)throw"unexpected EOF";break}if(!K)throw"invalid length/literal";if(he<256)e[f++]=he;else if(he==256){le=h,p=null;break}else{var xe=he-254;if(he>264){var L=he-257,Ae=pM[L];xe=ss(s,h,(1<<Ae)-1)+_M[L],h+=Ae}var Ze=m[sm(s,h)&Y],se=Ze>>>4;if(!Ze)throw"invalid distance";h+=Ze&15;var B=QU[se];if(se>3){var Ae=mM[se];B+=sm(s,h)&(1<<Ae)-1,h+=Ae}if(h>x){if(a)throw"unexpected EOF";break}i&&l(f+131072);for(var Se=f+xe;f<Se;f+=4)e[f]=e[f-B],e[f+1]=e[f+1-B],e[f+2]=e[f+2-B],e[f+3]=e[f+3-B];f=Se}}t.l=p,t.p=le,t.b=f,p&&(c=1,t.m=g,t.d=m,t.n=v)}while(!c);return f==e.length?e:nD(e,0,f)},sD=new Ki(0),rD=function(s){if((s[0]&15)!=8||s[0]>>>4>7||(s[0]<<8|s[1])%31)throw"invalid zlib data";if(s[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function $u(s,e){return iD((rD(s),s.subarray(2,-4)),e)}var aD=typeof TextDecoder<"u"&&new TextDecoder,oD=0;try{aD.decode(sD,{stream:!0}),oD=1}catch{}const lD=s=>s&&s.isCubeTexture;class cD extends _n{constructor(e,t){var n,i;const a=lD(e),c=((i=a?(n=e.image[0])==null?void 0:n.width:e.image.width)!=null?i:1024)/4,h=Math.floor(Math.log2(c)),f=Math.pow(2,h),p=3*Math.max(f,112),m=4*f,g=[a?"#define ENVMAP_TYPE_CUBE":"",`#define CUBEUV_TEXEL_WIDTH ${1/p}`,`#define CUBEUV_TEXEL_HEIGHT ${1/m}`,`#define CUBEUV_MAX_MIP ${h}.0`],v=`
        varying vec3 vWorldPosition;
        void main() 
        {
            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );
            vWorldPosition = worldPosition.xyz;
            
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }
        `,x=g.join(`
`)+`
        #define ENVMAP_TYPE_CUBE_UV
        varying vec3 vWorldPosition;
        uniform float radius;
        uniform float height;
        uniform float angle;
        #ifdef ENVMAP_TYPE_CUBE
            uniform samplerCube map;
        #else
            uniform sampler2D map;
        #endif
        // From: https://www.shadertoy.com/view/4tsBD7
        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) 
        {
            float d = dot ( rd, n );
            
            if( d > 0.0 ) { return 1e6; }
            
            vec3  o = ro - c;
            float t = - dot( n, o ) / d;
            vec3  q = o + rd * t;
            
            return ( dot( q, q ) < r * r ) ? t : 1e6;
        }
        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm
        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) 
        {
            vec3 oc = ro - ce;
            float b = dot( oc, rd );
            float c = dot( oc, oc ) - ra * ra;
            float h = b * b - c;
            
            if( h < 0.0 ) { return -1.0; }
            
            h = sqrt( h );
            
            return - b + h;
        }
        vec3 project() 
        {
            vec3 p = normalize( vWorldPosition );
            vec3 camPos = cameraPosition;
            camPos.y -= height;
            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );
            if( intersection > 0.0 ) {
                
                vec3 h = vec3( 0.0, - height, 0.0 );
                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );
                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;
            } else {
                p = vec3( 0.0, 1.0, 0.0 );
            }
            return p;
        }
        #include <common>
        #include <cube_uv_reflection_fragment>
        void main() 
        {
            vec3 projectedWorldPosition = project();
            
            #ifdef ENVMAP_TYPE_CUBE
                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;
            #else
                vec3 direction = normalize( projectedWorldPosition );
                vec2 uv = equirectUv( direction );
                vec3 outcolor = texture2D( map, uv ).rgb;
            #endif
            gl_FragColor = vec4( outcolor, 1.0 );
            #include <tonemapping_fragment>
            #include <${dM>=154?"colorspace_fragment":"encodings_fragment"}>
        }
        `,M={map:{value:e},height:{value:t?.height||15},radius:{value:t?.radius||100}},S=new _c(1,16),_=new Mi({uniforms:M,fragmentShader:x,vertexShader:v,side:os});super(S,_)}set radius(e){this.material.uniforms.radius.value=e}get radius(){return this.material.uniforms.radius.value}set height(e){this.material.uniforms.height.value=e}get height(){return this.material.uniforms.height.value}}class uD extends ug{constructor(e){super(e),this.type=Fn}parse(e){const l=function(L,C){switch(L){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(C||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(C||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(C||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(C||""))}},m=function(L,C,R){C=C||1024;let ee=L.pos,K=-1,J=0,oe="",B=String.fromCharCode.apply(null,new Uint16Array(L.subarray(ee,ee+128)));for(;0>(K=B.indexOf(`
`))&&J<C&&ee<L.byteLength;)oe+=B,J+=B.length,ee+=128,B+=String.fromCharCode.apply(null,new Uint16Array(L.subarray(ee,ee+128)));return-1<K?(L.pos+=J+K+1,oe+B.slice(0,K)):!1},g=function(L){const C=/^#\?(\S+)/,R=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,F=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,ee=/^\s*FORMAT=(\S+)\s*$/,K=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,J={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let oe,B;for((L.pos>=L.byteLength||!(oe=m(L)))&&l(1,"no header found"),(B=oe.match(C))||l(3,"bad initial token"),J.valid|=1,J.programtype=B[1],J.string+=oe+`
`;oe=m(L),oe!==!1;){if(J.string+=oe+`
`,oe.charAt(0)==="#"){J.comments+=oe+`
`;continue}if((B=oe.match(R))&&(J.gamma=parseFloat(B[1])),(B=oe.match(F))&&(J.exposure=parseFloat(B[1])),(B=oe.match(ee))&&(J.valid|=2,J.format=B[1]),(B=oe.match(K))&&(J.valid|=4,J.height=parseInt(B[1],10),J.width=parseInt(B[2],10)),J.valid&2&&J.valid&4)break}return J.valid&2||l(3,"missing format specifier"),J.valid&4||l(3,"missing image size specifier"),J},v=function(L,C,R){const F=C;if(F<8||F>32767||L[0]!==2||L[1]!==2||L[2]&128)return new Uint8Array(L);F!==(L[2]<<8|L[3])&&l(3,"wrong scanline width");const ee=new Uint8Array(4*C*R);ee.length||l(4,"unable to allocate buffer space");let K=0,J=0;const oe=4*F,B=new Uint8Array(4),Q=new Uint8Array(oe);let Y=R;for(;Y>0&&J<L.byteLength;){J+4>L.byteLength&&l(1),B[0]=L[J++],B[1]=L[J++],B[2]=L[J++],B[3]=L[J++],(B[0]!=2||B[1]!=2||(B[2]<<8|B[3])!=F)&&l(3,"bad rgbe scanline format");let le=0,he;for(;le<oe&&J<L.byteLength;){he=L[J++];const Ae=he>128;if(Ae&&(he-=128),(he===0||le+he>oe)&&l(3,"bad scanline data"),Ae){const Ze=L[J++];for(let se=0;se<he;se++)Q[le++]=Ze}else Q.set(L.subarray(J,J+he),le),le+=he,J+=he}const xe=F;for(let Ae=0;Ae<xe;Ae++){let Ze=0;ee[K]=Q[Ae+Ze],Ze+=F,ee[K+1]=Q[Ae+Ze],Ze+=F,ee[K+2]=Q[Ae+Ze],Ze+=F,ee[K+3]=Q[Ae+Ze],K+=4}Y--}return ee},x=function(L,C,R,F){const ee=L[C+3],K=Math.pow(2,ee-128)/255;R[F+0]=L[C+0]*K,R[F+1]=L[C+1]*K,R[F+2]=L[C+2]*K,R[F+3]=1},M=function(L,C,R,F){const ee=L[C+3],K=Math.pow(2,ee-128)/255;R[F+0]=ma.toHalfFloat(Math.min(L[C+0]*K,65504)),R[F+1]=ma.toHalfFloat(Math.min(L[C+1]*K,65504)),R[F+2]=ma.toHalfFloat(Math.min(L[C+2]*K,65504)),R[F+3]=ma.toHalfFloat(1)},S=new Uint8Array(e);S.pos=0;const _=g(S),b=_.width,A=_.height,T=v(S.subarray(S.pos),b,A);let z,D,O;switch(this.type){case vn:O=T.length/4;const L=new Float32Array(O*4);for(let R=0;R<O;R++)x(T,R*4,L,R*4);z=L,D=vn;break;case Fn:O=T.length/4;const C=new Uint16Array(O*4);for(let R=0;R<O;R++)M(T,R*4,C,R*4);z=C,D=Fn;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:b,height:A,data:z,header:_.string,gamma:_.gamma,exposure:_.exposure,type:D}}setDataType(e){return this.type=e,this}load(e,t,n,i){function a(l,c){switch(l.type){case vn:case Fn:"colorSpace"in l?l.colorSpace="srgb-linear":l.encoding=3e3,l.minFilter=$t,l.magFilter=$t,l.generateMipmaps=!1,l.flipY=!0;break}t&&t(l,c)}return super.load(e,a,n,i)}}const Al=dM>=152;class hD extends ug{constructor(e){super(e),this.type=Fn}parse(e){const C=Math.pow(2.7182818,2.2);function R(U,P){for(var j=0,ue=0;ue<65536;++ue)(ue==0||U[ue>>3]&1<<(ue&7))&&(P[j++]=ue);for(var me=j-1;j<65536;)P[j++]=0;return me}function F(U){for(var P=0;P<16384;P++)U[P]={},U[P].len=0,U[P].lit=0,U[P].p=null}const ee={l:0,c:0,lc:0};function K(U,P,j,ue,me){for(;j<U;)P=P<<8|Ke(ue,me),j+=8;j-=U,ee.l=P>>j&(1<<U)-1,ee.c=P,ee.lc=j}const J=new Array(59);function oe(U){for(var P=0;P<=58;++P)J[P]=0;for(var P=0;P<65537;++P)J[U[P]]+=1;for(var j=0,P=58;P>0;--P){var ue=j+J[P]>>1;J[P]=j,j=ue}for(var P=0;P<65537;++P){var me=U[P];me>0&&(U[P]=me|J[me]++<<6)}}function B(U,P,j,ue,me,w,k){for(var X=j,q=0,V=0;me<=w;me++){if(X.value-j.value>ue)return!1;K(6,q,V,U,X);var ne=ee.l;if(q=ee.c,V=ee.lc,k[me]=ne,ne==63){if(X.value-j.value>ue)throw"Something wrong with hufUnpackEncTable";K(8,q,V,U,X);var ae=ee.l+6;if(q=ee.c,V=ee.lc,me+ae>w+1)throw"Something wrong with hufUnpackEncTable";for(;ae--;)k[me++]=0;me--}else if(ne>=59){var ae=ne-59+2;if(me+ae>w+1)throw"Something wrong with hufUnpackEncTable";for(;ae--;)k[me++]=0;me--}}oe(k)}function Q(U){return U&63}function Y(U){return U>>6}function le(U,P,j,ue){for(;P<=j;P++){var me=Y(U[P]),w=Q(U[P]);if(me>>w)throw"Invalid table entry";if(w>14){var k=ue[me>>w-14];if(k.len)throw"Invalid table entry";if(k.lit++,k.p){var X=k.p;k.p=new Array(k.lit);for(var q=0;q<k.lit-1;++q)k.p[q]=X[q]}else k.p=new Array(1);k.p[k.lit-1]=P}else if(w)for(var V=0,q=1<<14-w;q>0;q--){var k=ue[(me<<14-w)+V];if(k.len||k.p)throw"Invalid table entry";k.len=w,k.lit=P,V++}}return!0}const he={c:0,lc:0};function xe(U,P,j,ue){U=U<<8|Ke(j,ue),P+=8,he.c=U,he.lc=P}const Ae={c:0,lc:0};function Ze(U,P,j,ue,me,w,k,X,q,V){if(U==P){ue<8&&(xe(j,ue,me,k),j=he.c,ue=he.lc),ue-=8;var ne=j>>ue,ne=new Uint8Array([ne])[0];if(q.value+ne>V)return!1;for(var ae=X[q.value-1];ne-- >0;)X[q.value++]=ae}else if(q.value<V)X[q.value++]=U;else return!1;Ae.c=j,Ae.lc=ue}function se(U){return U&65535}function Se(U){var P=se(U);return P>32767?P-65536:P}const De={a:0,b:0};function Ue(U,P){var j=Se(U),ue=Se(P),me=ue,w=j+(me&1)+(me>>1),k=w,X=w-me;De.a=k,De.b=X}function je(U,P){var j=se(U),ue=se(P),me=j-(ue>>1)&65535,w=ue+me-32768&65535;De.a=w,De.b=me}function mt(U,P,j,ue,me,w,k){for(var X=k<16384,q=j>me?me:j,V=1,ne;V<=q;)V<<=1;for(V>>=1,ne=V,V>>=1;V>=1;){for(var ae=0,Be=ae+w*(me-ne),ge=w*V,we=w*ne,Pe=ue*V,Ce=ue*ne,rt,ct,vt,Vt;ae<=Be;ae+=we){for(var ot=ae,Je=ae+ue*(j-ne);ot<=Je;ot+=Ce){var Dt=ot+Pe,dt=ot+ge,pn=dt+Pe;X?(Ue(U[ot+P],U[dt+P]),rt=De.a,vt=De.b,Ue(U[Dt+P],U[pn+P]),ct=De.a,Vt=De.b,Ue(rt,ct),U[ot+P]=De.a,U[Dt+P]=De.b,Ue(vt,Vt),U[dt+P]=De.a,U[pn+P]=De.b):(je(U[ot+P],U[dt+P]),rt=De.a,vt=De.b,je(U[Dt+P],U[pn+P]),ct=De.a,Vt=De.b,je(rt,ct),U[ot+P]=De.a,U[Dt+P]=De.b,je(vt,Vt),U[dt+P]=De.a,U[pn+P]=De.b)}if(j&V){var dt=ot+ge;X?Ue(U[ot+P],U[dt+P]):je(U[ot+P],U[dt+P]),rt=De.a,U[dt+P]=De.b,U[ot+P]=rt}}if(me&V)for(var ot=ae,Je=ae+ue*(j-ne);ot<=Je;ot+=Ce){var Dt=ot+Pe;X?Ue(U[ot+P],U[Dt+P]):je(U[ot+P],U[Dt+P]),rt=De.a,U[Dt+P]=De.b,U[ot+P]=rt}ne=V,V>>=1}return ae}function ft(U,P,j,ue,me,w,k,X,q,V){for(var ne=0,ae=0,Be=X,ge=Math.trunc(me.value+(w+7)/8);me.value<ge;)for(xe(ne,ae,j,me),ne=he.c,ae=he.lc;ae>=14;){var we=ne>>ae-14&16383,Pe=P[we];if(Pe.len)ae-=Pe.len,Ze(Pe.lit,k,ne,ae,j,ue,me,q,V,Be),ne=Ae.c,ae=Ae.lc;else{if(!Pe.p)throw"hufDecode issues";var Ce;for(Ce=0;Ce<Pe.lit;Ce++){for(var rt=Q(U[Pe.p[Ce]]);ae<rt&&me.value<ge;)xe(ne,ae,j,me),ne=he.c,ae=he.lc;if(ae>=rt&&Y(U[Pe.p[Ce]])==(ne>>ae-rt&(1<<rt)-1)){ae-=rt,Ze(Pe.p[Ce],k,ne,ae,j,ue,me,q,V,Be),ne=Ae.c,ae=Ae.lc;break}}if(Ce==Pe.lit)throw"hufDecode issues"}}var ct=8-w&7;for(ne>>=ct,ae-=ct;ae>0;){var Pe=P[ne<<14-ae&16383];if(Pe.len)ae-=Pe.len,Ze(Pe.lit,k,ne,ae,j,ue,me,q,V,Be),ne=Ae.c,ae=Ae.lc;else throw"hufDecode issues"}return!0}function Tt(U,P,j,ue,me,w){var k={value:0},X=j.value,q=tt(P,j),V=tt(P,j);j.value+=4;var ne=tt(P,j);if(j.value+=4,q<0||q>=65537||V<0||V>=65537)throw"Something wrong with HUF_ENCSIZE";var ae=new Array(65537),Be=new Array(16384);F(Be);var ge=ue-(j.value-X);if(B(U,P,j,ge,q,V,ae),ne>8*(ue-(j.value-X)))throw"Something wrong with hufUncompress";le(ae,q,V,Be),ft(ae,Be,U,P,j,ne,V,w,me,k)}function Me(U,P,j){for(var ue=0;ue<j;++ue)P[ue]=U[P[ue]]}function Ne(U){for(var P=1;P<U.length;P++){var j=U[P-1]+U[P]-128;U[P]=j}}function W(U,P){for(var j=0,ue=Math.floor((U.length+1)/2),me=0,w=U.length-1;!(me>w||(P[me++]=U[j++],me>w));)P[me++]=U[ue++]}function nt(U){for(var P=U.byteLength,j=new Array,ue=0,me=new DataView(U);P>0;){var w=me.getInt8(ue++);if(w<0){var k=-w;P-=k+1;for(var X=0;X<k;X++)j.push(me.getUint8(ue++))}else{var k=w;P-=2;for(var q=me.getUint8(ue++),X=0;X<k+1;X++)j.push(q)}}return j}function Re(U,P,j,ue,me,w){var Dt=new DataView(w.buffer),k=j[U.idx[0]].width,X=j[U.idx[0]].height,q=3,V=Math.floor(k/8),ne=Math.ceil(k/8),ae=Math.ceil(X/8),Be=k-(ne-1)*8,ge=X-(ae-1)*8,we={value:0},Pe=new Array(q),Ce=new Array(q),rt=new Array(q),ct=new Array(q),vt=new Array(q);for(let zt=0;zt<q;++zt)vt[zt]=P[U.idx[zt]],Pe[zt]=zt<1?0:Pe[zt-1]+ne*ae,Ce[zt]=new Float32Array(64),rt[zt]=new Uint16Array(64),ct[zt]=new Uint16Array(ne*64);for(let zt=0;zt<ae;++zt){var Vt=8;zt==ae-1&&(Vt=ge);var ot=8;for(let Lt=0;Lt<ne;++Lt){Lt==ne-1&&(ot=Be);for(let It=0;It<q;++It)rt[It].fill(0),rt[It][0]=me[Pe[It]++],Ge(we,ue,rt[It]),ze(rt[It],Ce[It]),ut(Ce[It]);He(Ce);for(let It=0;It<q;++It)H(Ce[It],ct[It],Lt*64)}let St=0;for(let Lt=0;Lt<q;++Lt){const It=j[U.idx[Lt]].type;for(let tn=8*zt;tn<8*zt+Vt;++tn){St=vt[Lt][tn];for(let Un=0;Un<V;++Un){const cn=Un*64+(tn&7)*8;Dt.setUint16(St+0*It,ct[Lt][cn+0],!0),Dt.setUint16(St+2*It,ct[Lt][cn+1],!0),Dt.setUint16(St+4*It,ct[Lt][cn+2],!0),Dt.setUint16(St+6*It,ct[Lt][cn+3],!0),Dt.setUint16(St+8*It,ct[Lt][cn+4],!0),Dt.setUint16(St+10*It,ct[Lt][cn+5],!0),Dt.setUint16(St+12*It,ct[Lt][cn+6],!0),Dt.setUint16(St+14*It,ct[Lt][cn+7],!0),St+=16*It}}if(V!=ne)for(let tn=8*zt;tn<8*zt+Vt;++tn){const Un=vt[Lt][tn]+8*V*2*It,cn=V*64+(tn&7)*8;for(let Ei=0;Ei<ot;++Ei)Dt.setUint16(Un+Ei*2*It,ct[Lt][cn+Ei],!0)}}}for(var Je=new Uint16Array(k),Dt=new DataView(w.buffer),dt=0;dt<q;++dt){j[U.idx[dt]].decoded=!0;var pn=j[U.idx[dt]].type;if(j[dt].type==2)for(var ii=0;ii<X;++ii){const zt=vt[dt][ii];for(var jt=0;jt<k;++jt)Je[jt]=Dt.getUint16(zt+jt*2*pn,!0);for(var jt=0;jt<k;++jt)Dt.setFloat32(zt+jt*2*pn,de(Je[jt]),!0)}}}function Ge(U,P,j){for(var ue,me=1;me<64;)ue=P[U.value],ue==65280?me=64:ue>>8==255?me+=ue&255:(j[me]=ue,me++),U.value++}function ze(U,P){P[0]=de(U[0]),P[1]=de(U[1]),P[2]=de(U[5]),P[3]=de(U[6]),P[4]=de(U[14]),P[5]=de(U[15]),P[6]=de(U[27]),P[7]=de(U[28]),P[8]=de(U[2]),P[9]=de(U[4]),P[10]=de(U[7]),P[11]=de(U[13]),P[12]=de(U[16]),P[13]=de(U[26]),P[14]=de(U[29]),P[15]=de(U[42]),P[16]=de(U[3]),P[17]=de(U[8]),P[18]=de(U[12]),P[19]=de(U[17]),P[20]=de(U[25]),P[21]=de(U[30]),P[22]=de(U[41]),P[23]=de(U[43]),P[24]=de(U[9]),P[25]=de(U[11]),P[26]=de(U[18]),P[27]=de(U[24]),P[28]=de(U[31]),P[29]=de(U[40]),P[30]=de(U[44]),P[31]=de(U[53]),P[32]=de(U[10]),P[33]=de(U[19]),P[34]=de(U[23]),P[35]=de(U[32]),P[36]=de(U[39]),P[37]=de(U[45]),P[38]=de(U[52]),P[39]=de(U[54]),P[40]=de(U[20]),P[41]=de(U[22]),P[42]=de(U[33]),P[43]=de(U[38]),P[44]=de(U[46]),P[45]=de(U[51]),P[46]=de(U[55]),P[47]=de(U[60]),P[48]=de(U[21]),P[49]=de(U[34]),P[50]=de(U[37]),P[51]=de(U[47]),P[52]=de(U[50]),P[53]=de(U[56]),P[54]=de(U[59]),P[55]=de(U[61]),P[56]=de(U[35]),P[57]=de(U[36]),P[58]=de(U[48]),P[59]=de(U[49]),P[60]=de(U[57]),P[61]=de(U[58]),P[62]=de(U[62]),P[63]=de(U[63])}function ut(U){const P=.5*Math.cos(.7853975),j=.5*Math.cos(3.14159/16),ue=.5*Math.cos(3.14159/8),me=.5*Math.cos(3*3.14159/16),w=.5*Math.cos(5*3.14159/16),k=.5*Math.cos(3*3.14159/8),X=.5*Math.cos(7*3.14159/16);for(var q=new Array(4),V=new Array(4),ne=new Array(4),ae=new Array(4),Be=0;Be<8;++Be){var ge=Be*8;q[0]=ue*U[ge+2],q[1]=k*U[ge+2],q[2]=ue*U[ge+6],q[3]=k*U[ge+6],V[0]=j*U[ge+1]+me*U[ge+3]+w*U[ge+5]+X*U[ge+7],V[1]=me*U[ge+1]-X*U[ge+3]-j*U[ge+5]-w*U[ge+7],V[2]=w*U[ge+1]-j*U[ge+3]+X*U[ge+5]+me*U[ge+7],V[3]=X*U[ge+1]-w*U[ge+3]+me*U[ge+5]-j*U[ge+7],ne[0]=P*(U[ge+0]+U[ge+4]),ne[3]=P*(U[ge+0]-U[ge+4]),ne[1]=q[0]+q[3],ne[2]=q[1]-q[2],ae[0]=ne[0]+ne[1],ae[1]=ne[3]+ne[2],ae[2]=ne[3]-ne[2],ae[3]=ne[0]-ne[1],U[ge+0]=ae[0]+V[0],U[ge+1]=ae[1]+V[1],U[ge+2]=ae[2]+V[2],U[ge+3]=ae[3]+V[3],U[ge+4]=ae[3]-V[3],U[ge+5]=ae[2]-V[2],U[ge+6]=ae[1]-V[1],U[ge+7]=ae[0]-V[0]}for(var we=0;we<8;++we)q[0]=ue*U[16+we],q[1]=k*U[16+we],q[2]=ue*U[48+we],q[3]=k*U[48+we],V[0]=j*U[8+we]+me*U[24+we]+w*U[40+we]+X*U[56+we],V[1]=me*U[8+we]-X*U[24+we]-j*U[40+we]-w*U[56+we],V[2]=w*U[8+we]-j*U[24+we]+X*U[40+we]+me*U[56+we],V[3]=X*U[8+we]-w*U[24+we]+me*U[40+we]-j*U[56+we],ne[0]=P*(U[we]+U[32+we]),ne[3]=P*(U[we]-U[32+we]),ne[1]=q[0]+q[3],ne[2]=q[1]-q[2],ae[0]=ne[0]+ne[1],ae[1]=ne[3]+ne[2],ae[2]=ne[3]-ne[2],ae[3]=ne[0]-ne[1],U[0+we]=ae[0]+V[0],U[8+we]=ae[1]+V[1],U[16+we]=ae[2]+V[2],U[24+we]=ae[3]+V[3],U[32+we]=ae[3]-V[3],U[40+we]=ae[2]-V[2],U[48+we]=ae[1]-V[1],U[56+we]=ae[0]-V[0]}function He(U){for(var P=0;P<64;++P){var j=U[0][P],ue=U[1][P],me=U[2][P];U[0][P]=j+1.5747*me,U[1][P]=j-.1873*ue-.4682*me,U[2][P]=j+1.8556*ue}}function H(U,P,j){for(var ue=0;ue<64;++ue)P[j+ue]=ma.toHalfFloat(N(U[ue]))}function N(U){return U<=1?Math.sign(U)*Math.pow(Math.abs(U),2.2):Math.sign(U)*Math.pow(C,Math.abs(U)-1)}function re(U){return new DataView(U.array.buffer,U.offset.value,U.size)}function ve(U){var P=U.viewer.buffer.slice(U.offset.value,U.offset.value+U.size),j=new Uint8Array(nt(P)),ue=new Uint8Array(j.length);return Ne(j),W(j,ue),new DataView(ue.buffer)}function be(U){var P=U.array.slice(U.offset.value,U.offset.value+U.size),j=$u(P),ue=new Uint8Array(j.length);return Ne(j),W(j,ue),new DataView(ue.buffer)}function _e(U){for(var P=U.viewer,j={value:U.offset.value},ue=new Uint16Array(U.width*U.scanlineBlockSize*(U.channels*U.type)),me=new Uint8Array(8192),w=0,k=new Array(U.channels),X=0;X<U.channels;X++)k[X]={},k[X].start=w,k[X].end=k[X].start,k[X].nx=U.width,k[X].ny=U.lines,k[X].size=U.type,w+=k[X].nx*k[X].ny*k[X].size;var q=pe(P,j),V=pe(P,j);if(V>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(q<=V)for(var X=0;X<V-q+1;X++)me[X+q]=Mt(P,j);var ne=new Uint16Array(65536),ae=R(me,ne),Be=tt(P,j);Tt(U.array,P,j,Be,ue,w);for(var X=0;X<U.channels;++X)for(var ge=k[X],we=0;we<k[X].size;++we)mt(ue,ge.start+we,ge.nx,ge.size,ge.ny,ge.nx*ge.size,ae);Me(ne,ue,w);for(var Pe=0,Ce=new Uint8Array(ue.buffer.byteLength),rt=0;rt<U.lines;rt++)for(var ct=0;ct<U.channels;ct++){var ge=k[ct],vt=ge.nx*ge.size,Vt=new Uint8Array(ue.buffer,ge.end*2,vt*2);Ce.set(Vt,Pe),Pe+=vt*2,ge.end+=vt}return new DataView(Ce.buffer)}function it(U){var P=U.array.slice(U.offset.value,U.offset.value+U.size),j=$u(P);const ue=U.lines*U.channels*U.width,me=U.type==1?new Uint16Array(ue):new Uint32Array(ue);let w=0,k=0;const X=new Array(4);for(let q=0;q<U.lines;q++)for(let V=0;V<U.channels;V++){let ne=0;switch(U.type){case 1:X[0]=w,X[1]=X[0]+U.width,w=X[1]+U.width;for(let ae=0;ae<U.width;++ae){const Be=j[X[0]++]<<8|j[X[1]++];ne+=Be,me[k]=ne,k++}break;case 2:X[0]=w,X[1]=X[0]+U.width,X[2]=X[1]+U.width,w=X[2]+U.width;for(let ae=0;ae<U.width;++ae){const Be=j[X[0]++]<<24|j[X[1]++]<<16|j[X[2]++]<<8;ne+=Be,me[k]=ne,k++}break}}return new DataView(me.buffer)}function Ve(U){var P=U.viewer,j={value:U.offset.value},ue=new Uint8Array(U.width*U.lines*(U.channels*U.type*2)),me={version:lt(P,j),unknownUncompressedSize:lt(P,j),unknownCompressedSize:lt(P,j),acCompressedSize:lt(P,j),dcCompressedSize:lt(P,j),rleCompressedSize:lt(P,j),rleUncompressedSize:lt(P,j),rleRawSize:lt(P,j),totalAcUncompressedCount:lt(P,j),totalDcUncompressedCount:lt(P,j),acCompression:lt(P,j)};if(me.version<2)throw"EXRLoader.parse: "+Hn.compression+" version "+me.version+" is unsupported";for(var w=new Array,k=pe(P,j)-2;k>0;){var X=qe(P.buffer,j),q=Mt(P,j),V=q>>2&3,ne=(q>>4)-1,ae=new Int8Array([ne])[0],Be=Mt(P,j);w.push({name:X,index:ae,type:Be,compression:V}),k-=X.length+3}for(var ge=Hn.channels,we=new Array(U.channels),Pe=0;Pe<U.channels;++Pe){var Ce=we[Pe]={},rt=ge[Pe];Ce.name=rt.name,Ce.compression=0,Ce.decoded=!1,Ce.type=rt.pixelType,Ce.pLinear=rt.pLinear,Ce.width=U.width,Ce.height=U.lines}for(var ct={idx:new Array(3)},vt=0;vt<U.channels;++vt)for(var Ce=we[vt],Pe=0;Pe<w.length;++Pe){var Vt=w[Pe];Ce.name==Vt.name&&(Ce.compression=Vt.compression,Vt.index>=0&&(ct.idx[Vt.index]=vt),Ce.offset=vt)}if(me.acCompressedSize>0)switch(me.acCompression){case 0:var Dt=new Uint16Array(me.totalAcUncompressedCount);Tt(U.array,P,j,me.acCompressedSize,Dt,me.totalAcUncompressedCount);break;case 1:var ot=U.array.slice(j.value,j.value+me.totalAcUncompressedCount),Je=$u(ot),Dt=new Uint16Array(Je.buffer);j.value+=me.totalAcUncompressedCount;break}if(me.dcCompressedSize>0){var dt={array:U.array,offset:j,size:me.dcCompressedSize},pn=new Uint16Array(be(dt).buffer);j.value+=me.dcCompressedSize}if(me.rleRawSize>0){var ot=U.array.slice(j.value,j.value+me.rleCompressedSize),Je=$u(ot),ii=nt(Je.buffer);j.value+=me.rleCompressedSize}for(var jt=0,zt=new Array(we.length),Pe=0;Pe<zt.length;++Pe)zt[Pe]=new Array;for(var St=0;St<U.lines;++St)for(var Lt=0;Lt<we.length;++Lt)zt[Lt].push(jt),jt+=we[Lt].width*U.type*2;Re(ct,zt,we,Dt,pn,ue);for(var Pe=0;Pe<we.length;++Pe){var Ce=we[Pe];if(!Ce.decoded)switch(Ce.compression){case 2:for(var It=0,tn=0,St=0;St<U.lines;++St){for(var Un=zt[Pe][It],cn=0;cn<Ce.width;++cn){for(var Ei=0;Ei<2*Ce.type;++Ei)ue[Un++]=ii[tn+Ei*Ce.width*Ce.height];tn++}It++}break;case 1:default:throw"EXRLoader.parse: unsupported channel compression"}}return new DataView(ue.buffer)}function qe(U,P){for(var j=new Uint8Array(U),ue=0;j[P.value+ue]!=0;)ue+=1;var me=new TextDecoder().decode(j.slice(P.value,P.value+ue));return P.value=P.value+ue+1,me}function Ut(U,P,j){var ue=new TextDecoder().decode(new Uint8Array(U).slice(P.value,P.value+j));return P.value=P.value+j,ue}function Le(U,P){var j=st(U,P),ue=tt(U,P);return[j,ue]}function et(U,P){var j=tt(U,P),ue=tt(U,P);return[j,ue]}function st(U,P){var j=U.getInt32(P.value,!0);return P.value=P.value+4,j}function tt(U,P){var j=U.getUint32(P.value,!0);return P.value=P.value+4,j}function Ke(U,P){var j=U[P.value];return P.value=P.value+1,j}function Mt(U,P){var j=U.getUint8(P.value);return P.value=P.value+1,j}const lt=function(U,P){let j;return"getBigInt64"in DataView.prototype?j=Number(U.getBigInt64(P.value,!0)):j=U.getUint32(P.value+4,!0)+Number(U.getUint32(P.value,!0)<<32),P.value+=8,j};function gt(U,P){var j=U.getFloat32(P.value,!0);return P.value+=4,j}function $(U,P){return ma.toHalfFloat(gt(U,P))}function de(U){var P=(U&31744)>>10,j=U&1023;return(U>>15?-1:1)*(P?P===31?j?NaN:1/0:Math.pow(2,P-15)*(1+j/1024):6103515625e-14*(j/1024))}function pe(U,P){var j=U.getUint16(P.value,!0);return P.value+=2,j}function Ee(U,P){return de(pe(U,P))}function ke(U,P,j,ue){for(var me=j.value,w=[];j.value<me+ue-1;){var k=qe(P,j),X=st(U,j),q=Mt(U,j);j.value+=3;var V=st(U,j),ne=st(U,j);w.push({name:k,pixelType:X,pLinear:q,xSampling:V,ySampling:ne})}return j.value+=1,w}function Xe(U,P){var j=gt(U,P),ue=gt(U,P),me=gt(U,P),w=gt(U,P),k=gt(U,P),X=gt(U,P),q=gt(U,P),V=gt(U,P);return{redX:j,redY:ue,greenX:me,greenY:w,blueX:k,blueY:X,whiteX:q,whiteY:V}}function xt(U,P){var j=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],ue=Mt(U,P);return j[ue]}function Kt(U,P){var j=tt(U,P),ue=tt(U,P),me=tt(U,P),w=tt(U,P);return{xMin:j,yMin:ue,xMax:me,yMax:w}}function fn(U,P){var j=["INCREASING_Y"],ue=Mt(U,P);return j[ue]}function Bt(U,P){var j=gt(U,P),ue=gt(U,P);return[j,ue]}function Xn(U,P){var j=gt(U,P),ue=gt(U,P),me=gt(U,P);return[j,ue,me]}function di(U,P,j,ue,me){if(ue==="string"||ue==="stringvector"||ue==="iccProfile")return Ut(P,j,me);if(ue==="chlist")return ke(U,P,j,me);if(ue==="chromaticities")return Xe(U,j);if(ue==="compression")return xt(U,j);if(ue==="box2i")return Kt(U,j);if(ue==="lineOrder")return fn(U,j);if(ue==="float")return gt(U,j);if(ue==="v2f")return Bt(U,j);if(ue==="v3f")return Xn(U,j);if(ue==="int")return st(U,j);if(ue==="rational")return Le(U,j);if(ue==="timecode")return et(U,j);if(ue==="preview")return j.value+=me,"skipped";j.value+=me}function Dr(U,P,j){const ue={};if(U.getUint32(0,!0)!=20000630)throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";ue.version=U.getUint8(4);const me=U.getUint8(5);ue.spec={singleTile:!!(me&2),longName:!!(me&4),deepFormat:!!(me&8),multiPart:!!(me&16)},j.value=8;for(var w=!0;w;){var k=qe(P,j);if(k==0)w=!1;else{var X=qe(P,j),q=tt(U,j),V=di(U,P,j,X,q);V===void 0?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${X}'.`):ue[k]=V}}if((me&-5)!=0)throw console.error("EXRHeader:",ue),"THREE.EXRLoader: provided file is currently unsupported.";return ue}function Js(U,P,j,ue,me){const w={size:0,viewer:P,array:j,offset:ue,width:U.dataWindow.xMax-U.dataWindow.xMin+1,height:U.dataWindow.yMax-U.dataWindow.yMin+1,channels:U.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:U.channels[0].pixelType,uncompress:null,getter:null,format:null,[Al?"colorSpace":"encoding"]:null};switch(U.compression){case"NO_COMPRESSION":w.lines=1,w.uncompress=re;break;case"RLE_COMPRESSION":w.lines=1,w.uncompress=ve;break;case"ZIPS_COMPRESSION":w.lines=1,w.uncompress=be;break;case"ZIP_COMPRESSION":w.lines=16,w.uncompress=be;break;case"PIZ_COMPRESSION":w.lines=32,w.uncompress=_e;break;case"PXR24_COMPRESSION":w.lines=16,w.uncompress=it;break;case"DWAA_COMPRESSION":w.lines=32,w.uncompress=Ve;break;case"DWAB_COMPRESSION":w.lines=256,w.uncompress=Ve;break;default:throw"EXRLoader.parse: "+U.compression+" is unsupported"}if(w.scanlineBlockSize=w.lines,w.type==1)switch(me){case vn:w.getter=Ee,w.inputSize=2;break;case Fn:w.getter=pe,w.inputSize=2;break}else if(w.type==2)switch(me){case vn:w.getter=gt,w.inputSize=4;break;case Fn:w.getter=$,w.inputSize=4}else throw"EXRLoader.parse: unsupported pixelType "+w.type+" for "+U.compression+".";w.blockCount=(U.dataWindow.yMax+1)/w.scanlineBlockSize;for(var k=0;k<w.blockCount;k++)lt(P,ue);w.outputChannels=w.channels==3?4:w.channels;const X=w.width*w.height*w.outputChannels;switch(me){case vn:w.byteArray=new Float32Array(X),w.channels<w.outputChannels&&w.byteArray.fill(1,0,X);break;case Fn:w.byteArray=new Uint16Array(X),w.channels<w.outputChannels&&w.byteArray.fill(15360,0,X);break;default:console.error("THREE.EXRLoader: unsupported type: ",me);break}return w.bytesPerLine=w.width*w.inputSize*w.channels,w.outputChannels==4?w.format=Tn:w.format=hc,Al?w.colorSpace="srgb-linear":w.encoding=3e3,w}const qn=new DataView(e),pi=new Uint8Array(e),ji={value:0},Hn=Dr(qn,e,ji),pt=Js(Hn,qn,pi,ji,this.type),fs={value:0},en={R:0,G:1,B:2,A:3,Y:0};for(let U=0;U<pt.height/pt.scanlineBlockSize;U++){const P=tt(qn,ji);pt.size=tt(qn,ji),pt.lines=P+pt.scanlineBlockSize>pt.height?pt.height-P:pt.scanlineBlockSize;const ue=pt.size<pt.lines*pt.bytesPerLine?pt.uncompress(pt):re(pt);ji.value+=pt.size;for(let me=0;me<pt.scanlineBlockSize;me++){const w=me+U*pt.scanlineBlockSize;if(w>=pt.height)break;for(let k=0;k<pt.channels;k++){const X=en[Hn.channels[k].name];for(let q=0;q<pt.width;q++){fs.value=(me*(pt.channels*pt.width)+k*pt.width+q)*pt.inputSize;const V=(pt.height-1-w)*(pt.width*pt.outputChannels)+q*pt.outputChannels+X;pt.byteArray[V]=pt.getter(ue,fs)}}}}return{header:Hn,width:pt.width,height:pt.height,data:pt.byteArray,format:pt.format,[Al?"colorSpace":"encoding"]:pt[Al?"colorSpace":"encoding"],type:this.type}}setDataType(e){return this.type=e,this}load(e,t,n,i){function a(l,c){Al?l.colorSpace=c.colorSpace:l.encoding=c.encoding,l.minFilter=$t,l.magFilter=$t,l.generateMipmaps=!1,l.flipY=!1,t&&t(l,c)}return super.load(e,a,n,i)}}function fD(s,e){const t=s+"Geometry";return Fe.forwardRef(({args:n,children:i,...a},l)=>{const c=Fe.useRef(null);return Fe.useImperativeHandle(l,()=>c.current),Fe.useLayoutEffect(()=>void e?.(c.current)),Fe.createElement("mesh",Kh({ref:c},a),Fe.createElement(t,{attach:"geometry",args:n}),i)})}const dD=fD("sphere"),xM=(s,e,t)=>{let n;switch(s){case Si:n=new Uint8ClampedArray(e*t*4);break;case Fn:n=new Uint16Array(e*t*4);break;case bs:n=new Uint32Array(e*t*4);break;case Jh:n=new Int8Array(e*t*4);break;case Qh:n=new Int16Array(e*t*4);break;case uc:n=new Int32Array(e*t*4);break;case vn:n=new Float32Array(e*t*4);break;default:throw new Error("Unsupported data type")}return n};let eh;const pD=(s,e,t,n)=>{if(eh!==void 0)return eh;const i=new zi(1,1,n);e.setRenderTarget(i);const a=new _n(new Cr,new js({color:16777215}));e.render(a,t),e.setRenderTarget(null);const l=xM(s,i.width,i.height);return e.readRenderTargetPixels(i,0,0,i.width,i.height,l),i.dispose(),a.geometry.dispose(),a.material.dispose(),eh=l[0]!==0,eh};class Tg{constructor(e){var t,n,i,a,l,c,h,f,p,m,g,v,x,M,S,_;this._rendererIsDisposable=!1,this._supportsReadPixels=!0,this.render=()=>{this._renderer.setRenderTarget(this._renderTarget);try{this._renderer.render(this._scene,this._camera)}catch(A){throw this._renderer.setRenderTarget(null),A}this._renderer.setRenderTarget(null)},this._width=e.width,this._height=e.height,this._type=e.type,this._colorSpace=e.colorSpace;const b={format:Tn,depthBuffer:!1,stencilBuffer:!1,type:this._type,colorSpace:this._colorSpace,anisotropy:((t=e.renderTargetOptions)===null||t===void 0?void 0:t.anisotropy)!==void 0?(n=e.renderTargetOptions)===null||n===void 0?void 0:n.anisotropy:1,generateMipmaps:((i=e.renderTargetOptions)===null||i===void 0?void 0:i.generateMipmaps)!==void 0?(a=e.renderTargetOptions)===null||a===void 0?void 0:a.generateMipmaps:!1,magFilter:((l=e.renderTargetOptions)===null||l===void 0?void 0:l.magFilter)!==void 0?(c=e.renderTargetOptions)===null||c===void 0?void 0:c.magFilter:$t,minFilter:((h=e.renderTargetOptions)===null||h===void 0?void 0:h.minFilter)!==void 0?(f=e.renderTargetOptions)===null||f===void 0?void 0:f.minFilter:$t,samples:((p=e.renderTargetOptions)===null||p===void 0?void 0:p.samples)!==void 0?(m=e.renderTargetOptions)===null||m===void 0?void 0:m.samples:void 0,wrapS:((g=e.renderTargetOptions)===null||g===void 0?void 0:g.wrapS)!==void 0?(v=e.renderTargetOptions)===null||v===void 0?void 0:v.wrapS:Rn,wrapT:((x=e.renderTargetOptions)===null||x===void 0?void 0:x.wrapT)!==void 0?(M=e.renderTargetOptions)===null||M===void 0?void 0:M.wrapT:Rn};if(this._material=e.material,e.renderer?this._renderer=e.renderer:(this._renderer=Tg.instantiateRenderer(),this._rendererIsDisposable=!0),this._scene=new gc,this._camera=new Vo,this._camera.position.set(0,0,10),this._camera.left=-.5,this._camera.right=.5,this._camera.top=.5,this._camera.bottom=-.5,this._camera.updateProjectionMatrix(),!pD(this._type,this._renderer,this._camera,b)){let A;switch(this._type){case Fn:A=this._renderer.extensions.has("EXT_color_buffer_float")?vn:void 0;break}A!==void 0?(console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${vn}`),this._type=A):(this._supportsReadPixels=!1,console.warn("This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown"))}this._quad=new _n(new Cr,this._material),this._quad.geometry.computeBoundingBox(),this._scene.add(this._quad),this._renderTarget=new zi(this.width,this.height,b),this._renderTarget.texture.mapping=((S=e.renderTargetOptions)===null||S===void 0?void 0:S.mapping)!==void 0?(_=e.renderTargetOptions)===null||_===void 0?void 0:_.mapping:br}static instantiateRenderer(){const e=new jm;return e.setSize(128,128),e}toArray(){if(!this._supportsReadPixels)throw new Error("Can't read pixels in this browser");const e=xM(this._type,this._width,this._height);return this._renderer.readRenderTargetPixels(this._renderTarget,0,0,this._width,this._height,e),e}toDataTexture(e){const t=new ls(this.toArray(),this.width,this.height,Tn,this._type,e?.mapping||br,e?.wrapS||Rn,e?.wrapT||Rn,e?.magFilter||$t,e?.minFilter||$t,e?.anisotropy||1,cs);return t.generateMipmaps=e?.generateMipmaps!==void 0?e?.generateMipmaps:!1,t}disposeOnDemandRenderer(){this._renderer.setRenderTarget(null),this._rendererIsDisposable&&(this._renderer.dispose(),this._renderer.forceContextLoss())}dispose(e){this.disposeOnDemandRenderer(),e&&this.renderTarget.dispose(),this.material instanceof Mi&&Object.values(this.material.uniforms).forEach(t=>{t.value instanceof rn&&t.value.dispose()}),Object.values(this.material).forEach(t=>{t instanceof rn&&t.dispose()}),this.material.dispose(),this._quad.geometry.dispose()}get width(){return this._width}set width(e){this._width=e,this._renderTarget.setSize(this._width,this._height)}get height(){return this._height}set height(e){this._height=e,this._renderTarget.setSize(this._width,this._height)}get renderer(){return this._renderer}get renderTarget(){return this._renderTarget}set renderTarget(e){this._renderTarget=e,this._width=e.width,this._height=e.height}get material(){return this._material}get type(){return this._type}get colorSpace(){return this._colorSpace}}const mD=`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,gD=`
// min half float value
#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )
// max half float value
#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )

uniform sampler2D sdr;
uniform sampler2D gainMap;
uniform vec3 gamma;
uniform vec3 offsetHdr;
uniform vec3 offsetSdr;
uniform vec3 gainMapMin;
uniform vec3 gainMapMax;
uniform float weightFactor;

varying vec2 vUv;

void main() {
  vec3 rgb = texture2D( sdr, vUv ).rgb;
  vec3 recovery = texture2D( gainMap, vUv ).rgb;
  vec3 logRecovery = pow( recovery, gamma );
  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;
  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;
  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));
  gl_FragColor = vec4( clampedHdrColor , 1.0 );
}
`;class vD extends Mi{constructor({gamma:e,offsetHdr:t,offsetSdr:n,gainMapMin:i,gainMapMax:a,maxDisplayBoost:l,hdrCapacityMin:c,hdrCapacityMax:h,sdr:f,gainMap:p}){super({name:"GainMapDecoderMaterial",vertexShader:mD,fragmentShader:gD,uniforms:{sdr:{value:f},gainMap:{value:p},gamma:{value:new G(1/e[0],1/e[1],1/e[2])},offsetHdr:{value:new G().fromArray(t)},offsetSdr:{value:new G().fromArray(n)},gainMapMin:{value:new G().fromArray(i)},gainMapMax:{value:new G().fromArray(a)},weightFactor:{value:(Math.log2(l)-c)/(h-c)}},blending:xs,depthTest:!1,depthWrite:!1}),this._maxDisplayBoost=l,this._hdrCapacityMin=c,this._hdrCapacityMax=h,this.needsUpdate=!0,this.uniformsNeedUpdate=!0}get sdr(){return this.uniforms.sdr.value}set sdr(e){this.uniforms.sdr.value=e}get gainMap(){return this.uniforms.gainMap.value}set gainMap(e){this.uniforms.gainMap.value=e}get offsetHdr(){return this.uniforms.offsetHdr.value.toArray()}set offsetHdr(e){this.uniforms.offsetHdr.value.fromArray(e)}get offsetSdr(){return this.uniforms.offsetSdr.value.toArray()}set offsetSdr(e){this.uniforms.offsetSdr.value.fromArray(e)}get gainMapMin(){return this.uniforms.gainMapMin.value.toArray()}set gainMapMin(e){this.uniforms.gainMapMin.value.fromArray(e)}get gainMapMax(){return this.uniforms.gainMapMax.value.toArray()}set gainMapMax(e){this.uniforms.gainMapMax.value.fromArray(e)}get gamma(){const e=this.uniforms.gamma.value;return[1/e.x,1/e.y,1/e.z]}set gamma(e){const t=this.uniforms.gamma.value;t.x=1/e[0],t.y=1/e[1],t.z=1/e[2]}get hdrCapacityMin(){return this._hdrCapacityMin}set hdrCapacityMin(e){this._hdrCapacityMin=e,this.calculateWeight()}get hdrCapacityMax(){return this._hdrCapacityMax}set hdrCapacityMax(e){this._hdrCapacityMax=e,this.calculateWeight()}get maxDisplayBoost(){return this._maxDisplayBoost}set maxDisplayBoost(e){this._maxDisplayBoost=Math.max(1,Math.min(65504,e)),this.calculateWeight()}calculateWeight(){const e=(Math.log2(this._maxDisplayBoost)-this._hdrCapacityMin)/(this._hdrCapacityMax-this._hdrCapacityMin);this.uniforms.weightFactor.value=Math.max(0,Math.min(1,e))}}class SM extends Error{}class MM extends Error{}const wl=(s,e,t)=>{const n=new RegExp(`${e}="([^"]*)"`,"i").exec(s);if(n)return n[1];const i=new RegExp(`<${e}[^>]*>([\\s\\S]*?)</${e}>`,"i").exec(s);if(i){const a=i[1].match(/<rdf:li>([^<]*)<\/rdf:li>/g);return a&&a.length===3?a.map(l=>l.replace(/<\/?rdf:li>/g,"")):i[1].trim()}if(t!==void 0)return t;throw new Error(`Can't find ${e} in gainmap metadata`)},_D=s=>{let e;typeof TextDecoder<"u"?e=new TextDecoder().decode(s):e=s.toString();let t=e.indexOf("<x:xmpmeta");for(;t!==-1;){const n=e.indexOf("x:xmpmeta>",t),i=e.slice(t,n+10);try{const a=wl(i,"hdrgm:GainMapMin","0"),l=wl(i,"hdrgm:GainMapMax"),c=wl(i,"hdrgm:Gamma","1"),h=wl(i,"hdrgm:OffsetSDR","0.015625"),f=wl(i,"hdrgm:OffsetHDR","0.015625"),p=/hdrgm:HDRCapacityMin="([^"]*)"/.exec(i),m=p?p[1]:"0",g=/hdrgm:HDRCapacityMax="([^"]*)"/.exec(i);if(!g)throw new Error("Incomplete gainmap metadata");const v=g[1];return{gainMapMin:Array.isArray(a)?a.map(x=>parseFloat(x)):[parseFloat(a),parseFloat(a),parseFloat(a)],gainMapMax:Array.isArray(l)?l.map(x=>parseFloat(x)):[parseFloat(l),parseFloat(l),parseFloat(l)],gamma:Array.isArray(c)?c.map(x=>parseFloat(x)):[parseFloat(c),parseFloat(c),parseFloat(c)],offsetSdr:Array.isArray(h)?h.map(x=>parseFloat(x)):[parseFloat(h),parseFloat(h),parseFloat(h)],offsetHdr:Array.isArray(f)?f.map(x=>parseFloat(x)):[parseFloat(f),parseFloat(f),parseFloat(f)],hdrCapacityMin:parseFloat(m),hdrCapacityMax:parseFloat(v)}}catch{}t=e.indexOf("<x:xmpmeta",n)}};class yD{constructor(e){this.options={debug:e&&e.debug!==void 0?e.debug:!1,extractFII:e&&e.extractFII!==void 0?e.extractFII:!0,extractNonFII:e&&e.extractNonFII!==void 0?e.extractNonFII:!0}}extract(e){return new Promise((t,n)=>{const i=this.options.debug,a=new DataView(e.buffer);if(a.getUint16(0)!==65496){n(new Error("Not a valid jpeg"));return}const l=a.byteLength;let c=2,h=0,f;for(;c<l;){if(++h>250){n(new Error(`Found no marker after ${h} loops 😵`));return}if(a.getUint8(c)!==255){n(new Error(`Not a valid marker at offset 0x${c.toString(16)}, found: 0x${a.getUint8(c).toString(16)}`));return}if(f=a.getUint8(c+1),i&&console.log(`Marker: ${f.toString(16)}`),f===226){i&&console.log("Found APP2 marker (0xffe2)");const p=c+4;if(a.getUint32(p)===1297106432){const m=p+4;let g;if(a.getUint16(m)===18761)g=!1;else if(a.getUint16(m)===19789)g=!0;else{n(new Error("No valid endianness marker found in TIFF header"));return}if(a.getUint16(m+2,!g)!==42){n(new Error("Not valid TIFF data! (no 0x002A marker)"));return}const v=a.getUint32(m+4,!g);if(v<8){n(new Error("Not valid TIFF data! (First offset less than 8)"));return}const x=m+v,M=a.getUint16(x,!g),S=x+2;let _=0;for(let z=S;z<S+12*M;z+=12)a.getUint16(z,!g)===45057&&(_=a.getUint32(z+8,!g));const A=x+2+M*12+4,T=[];for(let z=A;z<A+_*16;z+=16){const D={MPType:a.getUint32(z,!g),size:a.getUint32(z+4,!g),dataOffset:a.getUint32(z+8,!g),dependantImages:a.getUint32(z+12,!g),start:-1,end:-1,isFII:!1};D.dataOffset?(D.start=m+D.dataOffset,D.isFII=!1):(D.start=0,D.isFII=!0),D.end=D.start+D.size,T.push(D)}if(this.options.extractNonFII&&T.length){const z=new Blob([a]),D=[];for(const O of T){if(O.isFII&&!this.options.extractFII)continue;const L=z.slice(O.start,O.end+1,"image/jpeg");D.push(L)}t(D)}}}c+=2+a.getUint16(c+2)}})}}const xD=async s=>{const e=_D(s);if(!e)throw new MM("Gain map XMP metadata not found");const n=await new yD({extractFII:!0,extractNonFII:!0}).extract(s);if(n.length!==2)throw new SM("Gain map recovery image not found");return{sdr:new Uint8Array(await n[0].arrayBuffer()),gainMap:new Uint8Array(await n[1].arrayBuffer()),metadata:e}},Xy=s=>new Promise((e,t)=>{const n=document.createElement("img");n.onload=()=>{e(n)},n.onerror=i=>{t(i)},n.src=URL.createObjectURL(s)});class EM extends fi{constructor(e,t){super(t),e&&(this._renderer=e),this._internalLoadingManager=new Af}setRenderer(e){return this._renderer=e,this}setRenderTargetOptions(e){return this._renderTargetOptions=e,this}prepareQuadRenderer(){this._renderer||console.warn("WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.");const e=new vD({gainMapMax:[1,1,1],gainMapMin:[0,0,0],gamma:[1,1,1],offsetHdr:[1,1,1],offsetSdr:[1,1,1],hdrCapacityMax:1,hdrCapacityMin:0,maxDisplayBoost:1,gainMap:new rn,sdr:new rn});return new Tg({width:16,height:16,type:Fn,colorSpace:cs,material:e,renderer:this._renderer,renderTargetOptions:this._renderTargetOptions})}async render(e,t,n,i){const a=i?new Blob([i],{type:"image/jpeg"}):void 0,l=new Blob([n],{type:"image/jpeg"});let c,h,f=!1;if(typeof createImageBitmap>"u"){const g=await Promise.all([a?Xy(a):Promise.resolve(void 0),Xy(l)]);h=g[0],c=g[1],f=!0}else{const g=await Promise.all([a?createImageBitmap(a,{imageOrientation:"flipY"}):Promise.resolve(void 0),createImageBitmap(l,{imageOrientation:"flipY"})]);h=g[0],c=g[1]}const p=new rn(h||new ImageData(2,2),br,Rn,Rn,$t,um,Tn,Si,1,cs);p.flipY=f,p.needsUpdate=!0;const m=new rn(c,br,Rn,Rn,$t,um,Tn,Si,1,kn);m.flipY=f,m.needsUpdate=!0,e.width=c.width,e.height=c.height,e.material.gainMap=p,e.material.sdr=m,e.material.gainMapMin=t.gainMapMin,e.material.gainMapMax=t.gainMapMax,e.material.offsetHdr=t.offsetHdr,e.material.offsetSdr=t.offsetSdr,e.material.gamma=t.gamma,e.material.hdrCapacityMin=t.hdrCapacityMin,e.material.hdrCapacityMax=t.hdrCapacityMax,e.material.maxDisplayBoost=Math.pow(2,t.hdrCapacityMax),e.material.needsUpdate=!0,e.render()}}class SD extends EM{load([e,t,n],i,a,l){const c=this.prepareQuadRenderer();let h,f,p;const m=async()=>{if(h&&f&&p){try{await this.render(c,p,h,f)}catch(C){this.manager.itemError(e),this.manager.itemError(t),this.manager.itemError(n),typeof l=="function"&&l(C),c.disposeOnDemandRenderer();return}typeof i=="function"&&i(c),this.manager.itemEnd(e),this.manager.itemEnd(t),this.manager.itemEnd(n),c.disposeOnDemandRenderer()}};let g=!0,v=0,x=0,M=!0,S=0,_=0,b=!0,A=0,T=0;const z=()=>{if(typeof a=="function"){const C=v+S+A,R=x+_+T,F=g&&M&&b;a(new ProgressEvent("progress",{lengthComputable:F,loaded:R,total:C}))}};this.manager.itemStart(e),this.manager.itemStart(t),this.manager.itemStart(n);const D=new Bi(this._internalLoadingManager);D.setResponseType("arraybuffer"),D.setRequestHeader(this.requestHeader),D.setPath(this.path),D.setWithCredentials(this.withCredentials),D.load(e,async C=>{if(typeof C=="string")throw new Error("Invalid sdr buffer");h=C,await m()},C=>{g=C.lengthComputable,x=C.loaded,v=C.total,z()},C=>{this.manager.itemError(e),typeof l=="function"&&l(C)});const O=new Bi(this._internalLoadingManager);O.setResponseType("arraybuffer"),O.setRequestHeader(this.requestHeader),O.setPath(this.path),O.setWithCredentials(this.withCredentials),O.load(t,async C=>{if(typeof C=="string")throw new Error("Invalid gainmap buffer");f=C,await m()},C=>{M=C.lengthComputable,_=C.loaded,S=C.total,z()},C=>{this.manager.itemError(t),typeof l=="function"&&l(C)});const L=new Bi(this._internalLoadingManager);return L.setRequestHeader(this.requestHeader),L.setPath(this.path),L.setWithCredentials(this.withCredentials),L.load(n,async C=>{if(typeof C!="string")throw new Error("Invalid metadata string");p=JSON.parse(C),await m()},C=>{b=C.lengthComputable,T=C.loaded,A=C.total,z()},C=>{this.manager.itemError(n),typeof l=="function"&&l(C)}),c}}class MD extends EM{load(e,t,n,i){const a=this.prepareQuadRenderer(),l=new Bi(this._internalLoadingManager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(this.withCredentials),this.manager.itemStart(e),l.load(e,async c=>{if(typeof c=="string")throw new Error("Invalid buffer, received [string], was expecting [ArrayBuffer]");const h=new Uint8Array(c);let f,p,m;try{const g=await xD(h);f=g.sdr,p=g.gainMap,m=g.metadata}catch(g){if(g instanceof MM||g instanceof SM)console.warn(`Failure to reconstruct an HDR image from ${e}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`),m={gainMapMin:[0,0,0],gainMapMax:[1,1,1],gamma:[1,1,1],hdrCapacityMin:0,hdrCapacityMax:1,offsetHdr:[0,0,0],offsetSdr:[0,0,0]},f=h;else throw g}try{await this.render(a,m,f,p)}catch(g){this.manager.itemError(e),typeof i=="function"&&i(g),a.disposeOnDemandRenderer();return}typeof t=="function"&&t(a),this.manager.itemEnd(e),a.disposeOnDemandRenderer()},n,c=>{this.manager.itemError(e),typeof i=="function"&&i(c)}),a}}const oc={apartment:"lebombo_1k.hdr",city:"potsdamer_platz_1k.hdr",dawn:"kiara_1_dawn_1k.hdr",forest:"forest_slope_1k.hdr",lobby:"st_fagans_interior_1k.hdr",night:"dikhololo_night_1k.hdr",park:"rooitou_park_1k.hdr",studio:"studio_small_03_1k.hdr",sunset:"venice_sunset_1k.hdr",warehouse:"empty_warehouse_01_1k.hdr"},bM="https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/",Uo=s=>Array.isArray(s),Ag=["/px.png","/nx.png","/py.png","/ny.png","/pz.png","/nz.png"];function Rf({files:s=Ag,path:e="",preset:t=void 0,colorSpace:n=void 0,extensions:i}={}){t&&(wg(t),s=oc[t],e=bM);const a=Uo(s),{extension:l,isCubemap:c}=Cg(s),h=Rg(l);if(!h)throw new Error("useEnvironment: Unrecognized file extension: "+s);const f=ac(v=>v.gl);Fe.useLayoutEffect(()=>{if(l!=="webp"&&l!=="jpg"&&l!=="jpeg")return;function v(){Bo.clear(h,a?[s]:s)}f.domElement.addEventListener("webglcontextlost",v,{once:!0})},[s,f.domElement]);const p=Bo(h,a?[s]:s,v=>{(l==="webp"||l==="jpg"||l==="jpeg")&&v.setRenderer(f),v.setPath==null||v.setPath(e),i&&i(v)});let m=a?p[0]:p;if(l==="jpg"||l==="jpeg"||l==="webp"){var g;m=(g=m.renderTarget)==null?void 0:g.texture}return m.mapping=c?Es:Do,m.colorSpace=n??(c?"srgb":"srgb-linear"),m}const ED={files:Ag,path:"",preset:void 0,extensions:void 0};Rf.preload=s=>{const e={...ED,...s};let{files:t,path:n=""}=e;const{preset:i,extensions:a}=e;i&&(wg(i),t=oc[i],n=bM);const{extension:l}=Cg(t);if(l==="webp"||l==="jpg"||l==="jpeg")throw new Error("useEnvironment: Preloading gainmaps is not supported");const c=Rg(l);if(!c)throw new Error("useEnvironment: Unrecognized file extension: "+t);Bo.preload(c,Uo(t)?[t]:t,h=>{h.setPath==null||h.setPath(n),a&&a(h)})};const bD={files:Ag,preset:void 0};Rf.clear=s=>{const e={...bD,...s};let{files:t}=e;const{preset:n}=e;n&&(wg(n),t=oc[n]);const{extension:i}=Cg(t),a=Rg(i);if(!a)throw new Error("useEnvironment: Unrecognized file extension: "+t);Bo.clear(a,Uo(t)?[t]:t)};function wg(s){if(!(s in oc))throw new Error("Preset must be one of: "+Object.keys(oc).join(", "))}function Cg(s){var e;const t=Uo(s)&&s.length===6,n=Uo(s)&&s.length===3&&s.some(l=>l.endsWith("json")),i=Uo(s)?s[0]:s;return{extension:t?"cube":n?"webp":i.startsWith("data:application/exr")?"exr":i.startsWith("data:application/hdr")?"hdr":i.startsWith("data:image/jpeg")?"jpg":(e=i.split(".").pop())==null||(e=e.split("?"))==null||(e=e.shift())==null?void 0:e.toLowerCase(),isCubemap:t,isGainmap:n}}function Rg(s){return s==="cube"?US:s==="hdr"?uD:s==="exr"?hD:s==="jpg"||s==="jpeg"?MD:s==="webp"?SD:null}const TD=s=>s.current&&s.current.isScene,AD=s=>TD(s)?s.current:s;function Ug(s,e,t,n,i={}){var a,l,c,h;i={backgroundBlurriness:0,backgroundIntensity:1,backgroundRotation:[0,0,0],environmentIntensity:1,environmentRotation:[0,0,0],...i};const f=AD(e||t),p=f.background,m=f.environment,g={backgroundBlurriness:f.backgroundBlurriness,backgroundIntensity:f.backgroundIntensity,backgroundRotation:(a=(l=f.backgroundRotation)==null||l.clone==null?void 0:l.clone())!==null&&a!==void 0?a:[0,0,0],environmentIntensity:f.environmentIntensity,environmentRotation:(c=(h=f.environmentRotation)==null||h.clone==null?void 0:h.clone())!==null&&c!==void 0?c:[0,0,0]};return s!=="only"&&(f.environment=n),s&&(f.background=n),vs(f,i),()=>{s!=="only"&&(f.environment=m),s&&(f.background=p),vs(f,g)}}function Dg({scene:s,background:e=!1,map:t,...n}){const i=ac(a=>a.scene);return Fe.useLayoutEffect(()=>{if(t)return Ug(e,s,i,t,n)}),null}function TM({background:s=!1,scene:e,blur:t,backgroundBlurriness:n,backgroundIntensity:i,backgroundRotation:a,environmentIntensity:l,environmentRotation:c,...h}){const f=Rf(h),p=ac(m=>m.scene);return Fe.useLayoutEffect(()=>Ug(s,e,p,f,{backgroundBlurriness:t??n,backgroundIntensity:i,backgroundRotation:a,environmentIntensity:l,environmentRotation:c})),Fe.useEffect(()=>()=>{f.dispose()},[f]),null}function wD({children:s,near:e=.1,far:t=1e3,resolution:n=256,frames:i=1,map:a,background:l=!1,blur:c,backgroundBlurriness:h,backgroundIntensity:f,backgroundRotation:p,environmentIntensity:m,environmentRotation:g,scene:v,files:x,path:M,preset:S=void 0,extensions:_}){const b=ac(L=>L.gl),A=ac(L=>L.scene),T=Fe.useRef(null),[z]=Fe.useState(()=>new gc),D=Fe.useMemo(()=>{const L=new Xm(n);return L.texture.type=Fn,L},[n]);Fe.useEffect(()=>()=>{D.dispose()},[D]),Fe.useLayoutEffect(()=>{if(i===1){const L=b.autoClear;b.autoClear=!0,T.current.update(b,z),b.autoClear=L}return Ug(l,v,A,D.texture,{backgroundBlurriness:c??h,backgroundIntensity:f,backgroundRotation:p,environmentIntensity:m,environmentRotation:g})},[s,z,D.texture,v,A,l,i,b]);let O=1;return iM(()=>{if(i===1/0||O<i){const L=b.autoClear;b.autoClear=!0,T.current.update(b,z),b.autoClear=L,O++}}),Fe.createElement(Fe.Fragment,null,OU(Fe.createElement(Fe.Fragment,null,s,Fe.createElement("cubeCamera",{ref:T,args:[e,t,D]}),x||S?Fe.createElement(TM,{background:!0,files:x,preset:S,path:M,extensions:_}):a?Fe.createElement(Dg,{background:!0,map:a,extensions:_}):null),z))}function CD(s){var e,t,n,i;const a=Rf(s),l=s.map||a;Fe.useMemo(()=>aM({GroundProjectedEnvImpl:cD}),[]),Fe.useEffect(()=>()=>{a.dispose()},[a]);const c=Fe.useMemo(()=>[l],[l]),h=(e=s.ground)==null?void 0:e.height,f=(t=s.ground)==null?void 0:t.radius,p=(n=(i=s.ground)==null?void 0:i.scale)!==null&&n!==void 0?n:1e3;return Fe.createElement(Fe.Fragment,null,Fe.createElement(Dg,Kh({},s,{map:l})),Fe.createElement("groundProjectedEnvImpl",{args:c,scale:p,height:h,radius:f}))}function RD(s){return s.ground?Fe.createElement(CD,s):s.map?Fe.createElement(Dg,s):s.children?Fe.createElement(wD,s):Fe.createElement(TM,s)}const UD=({position:s,color:e,speed:t=1,size:n=.5})=>{const i=Fe.useRef(null);return iM(a=>{if(!i.current)return;const l=a.clock.getElapsedTime()*t;i.current.position.x=s[0]+Math.sin(l)*2,i.current.position.y=s[1]+Math.cos(l)*2,i.current.position.z=s[2]+Math.sin(l*.5)*2}),Zt.jsx(dD,{ref:i,args:[n,16,16],position:s,children:Zt.jsx("meshStandardMaterial",{color:e,emissive:e,emissiveIntensity:.6,roughness:.2,metalness:.8})})},DD=()=>{const s=[{position:[0,0,0],color:"#1A73E8",speed:.5,size:.8},{position:[3,2,-2],color:"#34A853",speed:.7,size:.6},{position:[-3,-2,-1],color:"#FBBC05",speed:.9,size:.5},{position:[2,-3,2],color:"#EA4335",speed:.6,size:.7},{position:[-2,3,1],color:"#4285F4",speed:.8,size:.5}];return Zt.jsxs(Zt.Fragment,{children:[s.map((e,t)=>Zt.jsx(UD,{position:e.position,color:e.color,speed:e.speed,size:e.size},t)),Zt.jsxs("mesh",{children:[Zt.jsx("sphereGeometry",{args:[10,32,32]}),Zt.jsx("meshBasicMaterial",{color:"#000",side:ei,transparent:!0,opacity:.05})]}),Zt.jsx(RD,{preset:"city"})]})},PD=()=>Zt.jsxs(ZU,{camera:{position:[0,0,15],fov:60},children:[Zt.jsx("ambientLight",{intensity:.5}),Zt.jsx("pointLight",{position:[10,10,10],intensity:1}),Zt.jsx(DD,{})]});export{PD as default};
//# sourceMappingURL=ThreeDHero-8UzyoHae.js.map
